{"/home/travis/build/npmtest/node-npmtest-jsonld/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsonld/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_jsonld */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-jsonld/lib.npmtest_jsonld.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsonld/lib.npmtest_jsonld.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":51}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":57}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_jsonld */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_jsonld = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_jsonld = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-jsonld/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsonld/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":50}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":64},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-jsonld && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_jsonld */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_jsonld","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_jsonld.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_jsonld.rollup.js'] =","            local.assetsDict['/assets.npmtest_jsonld.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_jsonld.__dirname + '/lib.npmtest_jsonld.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-jsonld/node_modules/jsonld/js/jsonld.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsonld/node_modules/jsonld/js/jsonld.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":1,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":1,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":1,"258":0,"259":0,"260":0,"261":0,"262":0,"263":1,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":1,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":1,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":1,"391":0,"392":1,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":1,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":1,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":1,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":1,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":1,"508":0,"509":0,"510":0,"511":1,"512":0,"513":1,"514":0,"515":0,"516":0,"517":0,"518":0,"519":1,"520":0,"521":0,"522":0,"523":1,"524":2,"525":2,"526":2,"527":2,"528":2,"529":2,"530":0,"531":0,"532":0,"533":2,"534":0,"535":0,"536":0,"537":2,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":2,"545":0,"546":0,"547":0,"548":2,"549":0,"550":0,"551":0,"552":2,"553":0,"554":0,"555":0,"556":2,"557":0,"558":0,"559":0,"560":2,"561":0,"562":0,"563":0,"564":2,"565":1,"566":0,"567":0,"568":0,"569":1,"570":0,"571":1,"572":0,"573":1,"574":0,"575":2,"576":2,"577":0,"578":0,"579":0,"580":0,"581":2,"582":1,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":1,"594":1,"595":1,"596":1,"597":0,"598":0,"599":0,"600":1,"601":1,"602":1,"603":1,"604":1,"605":0,"606":1,"607":1,"608":1,"609":1,"610":0,"611":0,"612":0,"613":1,"614":1,"615":0,"616":0,"617":1,"618":1,"619":0,"620":1,"621":1,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":1,"642":1,"643":1,"644":1,"645":1,"646":1,"647":1,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":1,"672":0,"673":0,"674":0,"675":0,"676":1,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":1,"685":0,"686":0,"687":0,"688":0,"689":1,"690":1,"691":1,"692":1,"693":1,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":1,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":1,"711":1,"712":1,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":1,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":1,"738":1,"739":1,"740":1,"741":1,"742":1,"743":1,"744":1,"745":1,"746":0,"747":0,"748":1,"749":1,"750":0,"751":1,"752":0,"753":1,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":1,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":1,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":1,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":1,"824":1,"825":0,"826":1,"827":1,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":1,"851":0,"852":0,"853":0,"854":0,"855":0,"856":1,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":1,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":1,"890":0,"891":0,"892":0,"893":0,"894":1,"895":0,"896":1,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":1,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":1,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":1,"929":1,"930":2,"931":1,"932":0,"933":1,"934":1,"935":1,"936":1,"937":1,"938":1,"939":1,"940":1,"941":1,"942":1,"943":1,"944":1,"945":1,"946":1,"947":1,"948":1,"949":1,"950":1,"951":1,"952":1,"953":1,"954":1,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":1,"964":1,"965":0,"966":0,"967":1,"968":1,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":1,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":1,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":1,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":1,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":1,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":1,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":1,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1360":1,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1376":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":0,"1383":0,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":0,"1402":0,"1403":0,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1419":1,"1420":0,"1421":0,"1422":0,"1423":0,"1424":0,"1425":0,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":1,"1436":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":0,"1450":1,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":0,"1462":0,"1463":0,"1464":0,"1465":0,"1466":0,"1467":0,"1468":0,"1469":0,"1470":0,"1471":0,"1472":0,"1473":0,"1474":0,"1475":0,"1476":1,"1477":0,"1478":0,"1479":0,"1480":0,"1481":0,"1482":0,"1483":0,"1484":0,"1485":0,"1486":0,"1487":0,"1488":0,"1489":0,"1490":0,"1491":0,"1492":0,"1493":0,"1494":0,"1495":0,"1496":0,"1497":0,"1498":0,"1499":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1505":0,"1506":0,"1507":0,"1508":0,"1509":0,"1510":1,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1516":0,"1517":0,"1518":0,"1519":0,"1520":0,"1521":0,"1522":0,"1523":0,"1524":0,"1525":1,"1526":0,"1527":0,"1528":0,"1529":0,"1530":0,"1531":0,"1532":0,"1533":0,"1534":0,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":0,"1546":0,"1547":0,"1548":0,"1549":0,"1550":0,"1551":0,"1552":0,"1553":0,"1554":1,"1555":0,"1556":0,"1557":0,"1558":0,"1559":0,"1560":0,"1561":0,"1562":0,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1568":0,"1569":0,"1570":0,"1571":0,"1572":0,"1573":0,"1574":0,"1575":0,"1576":0,"1577":0,"1578":0,"1579":0,"1580":0,"1581":1,"1582":0,"1583":0,"1584":0,"1585":0,"1586":0,"1587":0,"1588":0,"1589":0,"1590":0,"1591":0,"1592":1,"1593":1,"1594":1,"1595":1,"1596":1,"1597":1,"1598":1,"1599":1,"1600":1,"1601":1,"1602":1,"1603":1,"1604":0,"1605":1,"1606":1,"1607":0,"1608":1,"1609":1,"1610":1,"1611":1,"1612":0,"1613":1,"1614":1,"1615":0,"1616":0,"1617":0,"1618":0,"1619":0,"1620":0,"1621":0,"1622":0,"1623":0,"1624":0,"1625":0,"1626":0,"1627":0,"1628":0,"1629":0,"1630":0,"1631":0,"1632":0,"1633":0,"1634":0,"1635":0,"1636":0,"1637":0,"1638":1,"1639":0,"1640":0,"1641":0,"1642":0,"1643":0,"1644":0,"1645":0,"1646":0,"1647":0,"1648":0,"1649":0,"1650":0,"1651":0,"1652":0,"1653":0,"1654":0,"1655":0,"1656":0,"1657":0,"1658":0,"1659":0,"1660":0,"1661":0,"1662":0,"1663":0,"1664":0,"1665":0,"1666":1,"1667":0,"1668":0,"1669":0,"1670":1,"1671":0,"1672":0,"1673":0,"1674":0,"1675":0,"1676":0,"1677":0,"1678":1,"1679":0,"1680":0,"1681":0,"1682":0,"1683":0,"1684":0,"1685":0,"1686":0,"1687":0,"1688":0,"1689":0,"1690":0,"1691":0,"1692":0,"1693":0,"1694":0,"1695":0,"1696":0,"1697":0,"1698":0,"1699":0,"1700":0,"1701":0,"1702":0,"1703":0,"1704":0,"1705":0,"1706":0,"1707":0,"1708":0,"1709":0,"1710":0,"1711":0,"1712":0,"1713":0,"1714":0,"1715":0,"1716":0,"1717":0,"1718":0,"1719":0,"1720":0,"1721":0,"1722":0,"1723":0,"1724":0,"1725":0,"1726":0,"1727":0,"1728":0,"1729":0,"1730":0,"1731":0,"1732":0,"1733":0,"1734":0,"1735":0,"1736":0,"1737":0,"1738":0,"1739":0,"1740":0,"1741":0,"1742":0,"1743":0,"1744":0,"1745":0,"1746":0,"1747":0,"1748":0,"1749":0,"1750":0,"1751":0,"1752":0,"1753":0,"1754":0,"1755":0,"1756":0,"1757":0,"1758":0,"1759":0,"1760":0,"1761":0,"1762":0,"1763":0,"1764":0,"1765":0,"1766":1,"1767":0,"1768":0,"1769":0,"1770":0,"1771":0,"1772":0,"1773":0,"1774":0,"1775":0,"1776":0,"1777":0,"1778":0,"1779":0,"1780":0,"1781":0,"1782":0,"1783":0,"1784":1,"1785":0,"1786":0,"1787":0,"1788":0,"1789":0,"1790":1,"1791":0,"1792":0,"1793":0,"1794":0,"1795":0,"1796":0,"1797":0,"1798":0,"1799":0,"1800":0,"1801":0,"1802":0,"1803":0,"1804":0,"1805":0,"1806":0,"1807":0,"1808":0,"1809":0,"1810":0,"1811":0,"1812":0,"1813":1,"1814":0,"1815":1,"1816":0,"1817":0,"1818":0,"1819":0,"1820":0,"1821":0,"1822":0,"1823":0,"1824":0,"1825":0,"1826":0,"1827":0,"1828":0,"1829":0,"1830":0,"1831":0,"1832":0,"1833":0,"1834":0,"1835":0,"1836":0,"1837":0,"1838":0,"1839":0,"1840":0,"1841":0,"1842":0,"1843":0,"1844":0,"1845":0,"1846":0,"1847":0,"1848":0,"1849":0,"1850":0,"1851":0,"1852":0,"1853":0,"1854":0,"1855":0,"1856":0,"1857":0,"1858":0,"1859":0,"1860":0,"1861":0,"1862":0,"1863":0,"1864":0,"1865":0,"1866":0,"1867":1,"1868":0,"1869":0,"1870":0,"1871":0,"1872":0,"1873":0,"1874":0,"1875":0,"1876":0,"1877":0,"1878":0,"1879":0,"1880":0,"1881":0,"1882":0,"1883":0,"1884":0,"1885":1,"1886":0,"1887":0,"1888":0,"1889":0,"1890":1,"1891":1,"1892":1,"1893":0,"1894":0,"1895":1,"1896":1,"1897":0,"1898":0,"1899":0,"1900":0,"1901":0,"1902":0,"1903":0,"1904":1,"1905":0,"1906":1,"1907":0,"1908":0,"1909":0,"1910":0,"1911":0,"1912":0,"1913":0,"1914":0,"1915":0,"1916":0,"1917":0,"1918":0,"1919":0,"1920":0,"1921":0,"1922":0,"1923":0,"1924":0,"1925":0,"1926":1,"1927":1,"1928":0,"1929":0,"1930":0,"1931":0,"1932":0,"1933":0,"1934":0,"1935":0,"1936":0,"1937":0,"1938":0,"1939":0,"1940":0,"1941":0,"1942":0,"1943":0,"1944":0,"1945":0,"1946":0,"1947":0,"1948":0,"1949":0,"1950":0,"1951":0,"1952":0,"1953":0,"1954":0,"1955":0,"1956":0,"1957":0,"1958":0,"1959":0,"1960":0,"1961":0,"1962":0,"1963":0,"1964":0,"1965":0,"1966":0,"1967":0,"1968":0,"1969":0,"1970":0,"1971":0,"1972":0,"1973":0,"1974":0,"1975":0,"1976":0,"1977":0,"1978":0,"1979":0,"1980":0,"1981":0,"1982":0,"1983":0,"1984":0,"1985":0,"1986":0,"1987":0,"1988":0,"1989":0,"1990":0,"1991":0,"1992":0,"1993":0,"1994":0,"1995":0,"1996":0,"1997":0,"1998":0,"1999":0,"2000":0,"2001":0,"2002":0,"2003":0,"2004":0,"2005":0,"2006":0,"2007":1,"2008":0,"2009":0,"2010":0,"2011":0,"2012":0,"2013":0,"2014":0,"2015":0,"2016":0,"2017":0,"2018":0,"2019":0,"2020":0,"2021":0,"2022":0,"2023":0,"2024":0,"2025":0,"2026":0,"2027":1,"2028":0,"2029":0,"2030":0,"2031":0,"2032":0,"2033":0,"2034":0,"2035":0,"2036":0,"2037":0,"2038":0,"2039":0,"2040":0,"2041":0,"2042":0,"2043":0,"2044":0,"2045":0,"2046":0,"2047":0,"2048":0,"2049":0,"2050":0,"2051":0,"2052":0,"2053":0,"2054":0,"2055":0,"2056":0,"2057":0,"2058":0,"2059":0,"2060":0,"2061":0,"2062":0,"2063":0,"2064":0,"2065":0,"2066":0,"2067":0,"2068":0,"2069":0,"2070":0,"2071":0,"2072":0,"2073":0,"2074":0,"2075":0,"2076":0,"2077":0,"2078":0,"2079":0,"2080":0,"2081":0,"2082":0,"2083":0,"2084":0,"2085":0,"2086":0,"2087":0,"2088":0,"2089":0,"2090":0,"2091":0,"2092":0,"2093":0,"2094":0,"2095":1,"2096":0,"2097":0,"2098":0,"2099":0,"2100":0,"2101":1,"2102":0,"2103":0,"2104":0,"2105":0,"2106":1,"2107":0,"2108":0,"2109":0,"2110":0,"2111":0,"2112":0,"2113":0,"2114":0,"2115":0,"2116":0,"2117":1,"2118":0,"2119":0,"2120":1,"2121":0,"2122":0,"2123":0,"2124":0,"2125":0,"2126":0,"2127":0,"2128":1,"2129":0,"2130":0,"2131":0,"2132":0,"2133":0,"2134":0,"2135":0,"2136":0,"2137":0,"2138":0,"2139":0,"2140":0,"2141":0,"2142":0,"2143":0,"2144":0,"2145":0,"2146":0,"2147":0,"2148":0,"2149":0,"2150":0,"2151":0,"2152":0,"2153":0,"2154":0,"2155":0,"2156":0,"2157":1,"2158":0,"2159":0,"2160":0,"2161":0,"2162":0,"2163":0,"2164":0,"2165":0,"2166":0,"2167":0,"2168":0,"2169":0,"2170":0,"2171":0,"2172":0,"2173":0,"2174":0,"2175":0,"2176":0,"2177":0,"2178":0,"2179":1,"2180":0,"2181":0,"2182":0,"2183":1,"2184":0,"2185":0,"2186":0,"2187":0,"2188":0,"2189":0,"2190":0,"2191":0,"2192":0,"2193":0,"2194":0,"2195":0,"2196":0,"2197":0,"2198":0,"2199":0,"2200":0,"2201":0,"2202":0,"2203":0,"2204":0,"2205":0,"2206":0,"2207":0,"2208":0,"2209":0,"2210":0,"2211":0,"2212":0,"2213":0,"2214":0,"2215":0,"2216":0,"2217":1,"2218":0,"2219":0,"2220":0,"2221":0,"2222":0,"2223":0,"2224":0,"2225":1,"2226":0,"2227":0,"2228":0,"2229":0,"2230":0,"2231":0,"2232":0,"2233":0,"2234":0,"2235":0,"2236":0,"2237":0,"2238":0,"2239":0,"2240":0,"2241":0,"2242":0,"2243":0,"2244":0,"2245":0,"2246":0,"2247":0,"2248":0,"2249":0,"2250":1,"2251":0,"2252":0,"2253":0,"2254":0,"2255":0,"2256":0,"2257":0,"2258":0,"2259":0,"2260":0,"2261":0,"2262":0,"2263":0,"2264":0,"2265":0,"2266":0,"2267":0,"2268":0,"2269":0,"2270":0,"2271":0,"2272":0,"2273":0,"2274":0,"2275":0,"2276":0,"2277":0,"2278":0,"2279":0,"2280":0,"2281":0,"2282":0,"2283":0,"2284":0,"2285":0,"2286":0,"2287":0,"2288":0,"2289":0,"2290":0,"2291":0,"2292":0,"2293":0,"2294":0,"2295":0,"2296":0,"2297":0,"2298":0,"2299":0,"2300":0,"2301":0,"2302":0,"2303":0,"2304":0,"2305":0,"2306":0,"2307":0,"2308":0,"2309":0,"2310":0,"2311":0,"2312":0,"2313":0,"2314":0,"2315":0,"2316":0,"2317":0,"2318":0,"2319":0,"2320":0,"2321":0,"2322":0,"2323":0,"2324":0,"2325":0,"2326":0,"2327":0,"2328":0,"2329":0,"2330":0,"2331":0,"2332":0,"2333":0,"2334":0,"2335":0,"2336":0,"2337":0,"2338":0,"2339":0,"2340":0,"2341":0,"2342":0,"2343":0,"2344":0,"2345":0,"2346":0,"2347":0,"2348":0,"2349":0,"2350":1,"2351":0,"2352":0,"2353":0,"2354":0,"2355":0,"2356":0,"2357":0,"2358":0,"2359":0,"2360":0,"2361":0,"2362":0,"2363":0,"2364":0,"2365":0,"2366":0,"2367":0,"2368":0,"2369":0,"2370":0,"2371":0,"2372":0,"2373":0,"2374":0,"2375":0,"2376":0,"2377":0,"2378":0,"2379":0,"2380":0,"2381":0,"2382":0,"2383":1,"2384":0,"2385":0,"2386":0,"2387":0,"2388":0,"2389":0,"2390":0,"2391":0,"2392":0,"2393":0,"2394":0,"2395":0,"2396":0,"2397":0,"2398":0,"2399":0,"2400":0,"2401":0,"2402":0,"2403":0,"2404":0,"2405":0,"2406":0,"2407":0,"2408":0,"2409":0,"2410":0,"2411":0,"2412":0,"2413":0,"2414":0,"2415":0,"2416":0,"2417":0,"2418":0,"2419":0,"2420":0,"2421":0,"2422":0,"2423":0,"2424":0,"2425":0,"2426":0,"2427":0,"2428":0,"2429":0,"2430":0,"2431":0,"2432":0,"2433":0,"2434":0,"2435":0,"2436":0,"2437":0,"2438":0,"2439":0,"2440":0,"2441":0,"2442":0,"2443":0,"2444":0,"2445":0,"2446":0,"2447":0,"2448":0,"2449":0,"2450":0,"2451":0,"2452":0,"2453":0,"2454":0,"2455":0,"2456":0,"2457":0,"2458":0,"2459":0,"2460":0,"2461":0,"2462":0,"2463":0,"2464":0,"2465":0,"2466":0,"2467":0,"2468":0,"2469":1,"2470":0,"2471":0,"2472":0,"2473":0,"2474":0,"2475":0,"2476":0,"2477":0,"2478":0,"2479":0,"2480":0,"2481":0,"2482":0,"2483":0,"2484":0,"2485":0,"2486":0,"2487":0,"2488":0,"2489":0,"2490":0,"2491":0,"2492":0,"2493":0,"2494":0,"2495":0,"2496":0,"2497":0,"2498":0,"2499":0,"2500":1,"2501":0,"2502":0,"2503":0,"2504":0,"2505":0,"2506":0,"2507":0,"2508":0,"2509":0,"2510":0,"2511":0,"2512":0,"2513":0,"2514":0,"2515":0,"2516":0,"2517":0,"2518":0,"2519":0,"2520":0,"2521":0,"2522":0,"2523":0,"2524":0,"2525":0,"2526":0,"2527":0,"2528":0,"2529":0,"2530":0,"2531":0,"2532":0,"2533":0,"2534":0,"2535":0,"2536":0,"2537":0,"2538":0,"2539":0,"2540":0,"2541":1,"2542":0,"2543":0,"2544":0,"2545":0,"2546":0,"2547":0,"2548":0,"2549":0,"2550":0,"2551":0,"2552":0,"2553":0,"2554":0,"2555":0,"2556":0,"2557":0,"2558":0,"2559":0,"2560":0,"2561":0,"2562":0,"2563":0,"2564":0,"2565":0,"2566":0,"2567":0,"2568":0,"2569":0,"2570":0,"2571":0,"2572":0,"2573":0,"2574":0,"2575":1,"2576":0,"2577":0,"2578":1,"2579":0,"2580":0,"2581":0,"2582":0,"2583":0,"2584":0,"2585":0,"2586":0,"2587":0,"2588":0,"2589":0,"2590":0,"2591":0,"2592":0,"2593":0,"2594":0,"2595":0,"2596":0,"2597":0,"2598":0,"2599":0,"2600":0,"2601":0,"2602":0,"2603":0,"2604":0,"2605":0,"2606":0,"2607":0,"2608":0,"2609":0,"2610":0,"2611":0,"2612":0,"2613":0,"2614":0,"2615":0,"2616":0,"2617":0,"2618":0,"2619":0,"2620":0,"2621":0,"2622":0,"2623":0,"2624":0,"2625":0,"2626":0,"2627":1,"2628":0,"2629":0,"2630":0,"2631":0,"2632":0,"2633":0,"2634":0,"2635":0,"2636":0,"2637":0,"2638":0,"2639":0,"2640":0,"2641":0,"2642":0,"2643":0,"2644":1,"2645":0,"2646":0,"2647":1,"2648":0,"2649":0,"2650":0,"2651":0,"2652":0,"2653":0,"2654":0,"2655":0,"2656":0,"2657":0,"2658":0,"2659":1,"2660":0,"2661":0,"2662":0,"2663":0,"2664":0,"2665":1,"2666":0,"2667":1,"2668":0,"2669":1,"2670":0,"2671":1,"2672":0,"2673":0,"2674":0,"2675":0,"2676":0,"2677":0,"2678":0,"2679":0,"2680":0,"2681":0,"2682":0,"2683":1,"2684":0,"2685":1,"2686":0,"2687":1,"2688":0,"2689":1,"2690":0,"2691":1,"2692":0,"2693":1,"2694":0,"2695":1,"2696":0,"2697":0,"2698":0,"2699":0,"2700":0,"2701":1,"2702":0,"2703":1,"2704":0,"2705":1,"2706":0,"2707":1,"2708":0,"2709":0,"2710":0,"2711":0,"2712":0,"2713":0,"2714":1,"2715":0,"2716":1,"2717":0,"2718":0,"2719":0,"2720":0,"2721":0,"2722":0,"2723":0,"2724":0,"2725":0,"2726":0,"2727":0,"2728":0,"2729":0,"2730":1,"2731":0,"2732":0,"2733":0,"2734":0,"2735":0,"2736":0,"2737":0,"2738":0,"2739":0,"2740":0,"2741":0,"2742":0,"2743":0,"2744":0,"2745":0,"2746":0,"2747":0,"2748":0,"2749":0,"2750":0,"2751":0,"2752":0,"2753":0,"2754":0,"2755":0,"2756":0,"2757":0,"2758":0,"2759":0,"2760":0,"2761":0,"2762":0,"2763":0,"2764":0,"2765":1,"2766":0,"2767":0,"2768":0,"2769":0,"2770":0,"2771":0,"2772":0,"2773":0,"2774":0,"2775":0,"2776":0,"2777":0,"2778":0,"2779":0,"2780":0,"2781":0,"2782":0,"2783":0,"2784":0,"2785":0,"2786":0,"2787":0,"2788":0,"2789":0,"2790":0,"2791":0,"2792":0,"2793":0,"2794":0,"2795":0,"2796":0,"2797":0,"2798":0,"2799":0,"2800":0,"2801":0,"2802":0,"2803":0,"2804":0,"2805":0,"2806":0,"2807":0,"2808":0,"2809":0,"2810":0,"2811":0,"2812":0,"2813":0,"2814":0,"2815":0,"2816":0,"2817":0,"2818":0,"2819":0,"2820":0,"2821":0,"2822":0,"2823":1,"2824":0,"2825":0,"2826":0,"2827":0,"2828":0,"2829":0,"2830":0,"2831":0,"2832":1,"2833":0,"2834":0,"2835":0,"2836":0,"2837":0,"2838":0,"2839":0,"2840":0,"2841":0,"2842":0,"2843":0,"2844":0,"2845":0,"2846":0,"2847":0,"2848":0,"2849":0,"2850":0,"2851":0,"2852":0,"2853":0,"2854":0,"2855":0,"2856":0,"2857":0,"2858":0,"2859":0,"2860":0,"2861":0,"2862":0,"2863":0,"2864":0,"2865":0,"2866":0,"2867":0,"2868":0,"2869":0,"2870":0,"2871":0,"2872":0,"2873":0,"2874":0,"2875":0,"2876":0,"2877":0,"2878":0,"2879":0,"2880":0,"2881":0,"2882":0,"2883":0,"2884":0,"2885":0,"2886":0,"2887":0,"2888":0,"2889":0,"2890":0,"2891":0,"2892":0,"2893":1,"2894":1,"2895":0,"2896":0,"2897":0,"2898":0,"2899":0,"2900":0,"2901":0,"2902":0,"2903":0,"2904":1,"2905":0,"2906":0,"2907":0,"2908":0,"2909":0,"2910":0,"2911":0,"2912":0,"2913":0,"2914":0,"2915":0,"2916":0,"2917":0,"2918":0,"2919":0,"2920":0,"2921":0,"2922":0,"2923":0,"2924":0,"2925":0,"2926":0,"2927":0,"2928":0,"2929":0,"2930":0,"2931":0,"2932":0,"2933":0,"2934":0,"2935":0,"2936":0,"2937":1,"2938":0,"2939":0,"2940":0,"2941":0,"2942":0,"2943":0,"2944":0,"2945":0,"2946":0,"2947":0,"2948":0,"2949":0,"2950":0,"2951":0,"2952":0,"2953":0,"2954":0,"2955":0,"2956":0,"2957":0,"2958":0,"2959":0,"2960":0,"2961":0,"2962":0,"2963":0,"2964":0,"2965":0,"2966":0,"2967":0,"2968":0,"2969":0,"2970":0,"2971":0,"2972":0,"2973":0,"2974":0,"2975":0,"2976":0,"2977":0,"2978":0,"2979":0,"2980":0,"2981":0,"2982":0,"2983":0,"2984":0,"2985":0,"2986":1,"2987":1,"2988":1,"2989":1,"2990":1,"2991":1,"2992":1,"2993":1,"2994":0,"2995":0,"2996":0,"2997":0,"2998":1,"2999":0,"3000":0,"3001":0,"3002":0,"3003":0,"3004":0,"3005":0,"3006":1,"3007":1,"3008":0,"3009":1,"3010":1,"3011":0,"3012":0,"3013":0,"3014":0,"3015":0,"3016":1,"3017":0,"3018":1,"3019":0,"3020":0,"3021":0,"3022":0,"3023":0,"3024":0,"3025":0,"3026":0,"3027":0,"3028":0,"3029":0,"3030":0,"3031":0,"3032":0,"3033":0,"3034":0,"3035":0,"3036":0,"3037":0,"3038":1,"3039":0,"3040":0,"3041":0,"3042":0,"3043":0,"3044":1,"3045":0,"3046":0,"3047":0,"3048":0,"3049":1,"3050":1,"3051":1,"3052":1,"3053":0,"3054":0,"3055":0,"3056":0,"3057":1,"3058":0,"3059":1,"3060":0,"3061":1,"3062":0,"3063":0,"3064":0,"3065":0,"3066":0,"3067":0,"3068":0,"3069":0,"3070":0,"3071":0,"3072":0,"3073":0,"3074":0,"3075":0,"3076":0,"3077":0,"3078":0,"3079":0,"3080":0,"3081":0,"3082":0,"3083":0,"3084":0,"3085":0,"3086":0,"3087":0,"3088":0,"3089":0,"3090":0,"3091":0,"3092":0,"3093":0,"3094":0,"3095":0,"3096":0,"3097":0,"3098":0,"3099":0,"3100":0,"3101":0,"3102":0,"3103":0,"3104":0,"3105":0,"3106":0,"3107":0,"3108":0,"3109":0,"3110":0,"3111":0,"3112":0,"3113":0,"3114":0,"3115":0,"3116":0,"3117":0,"3118":0,"3119":0,"3120":0,"3121":0,"3122":0,"3123":0,"3124":0,"3125":0,"3126":0,"3127":0,"3128":0,"3129":0,"3130":0,"3131":0,"3132":0,"3133":0,"3134":0,"3135":0,"3136":0,"3137":0,"3138":0,"3139":0,"3140":0,"3141":0,"3142":0,"3143":0,"3144":0,"3145":0,"3146":0,"3147":0,"3148":0,"3149":0,"3150":0,"3151":0,"3152":0,"3153":0,"3154":0,"3155":0,"3156":0,"3157":0,"3158":0,"3159":0,"3160":0,"3161":0,"3162":0,"3163":0,"3164":0,"3165":0,"3166":0,"3167":0,"3168":0,"3169":0,"3170":0,"3171":0,"3172":0,"3173":0,"3174":0,"3175":0,"3176":0,"3177":0,"3178":0,"3179":0,"3180":0,"3181":0,"3182":0,"3183":0,"3184":0,"3185":0,"3186":0,"3187":0,"3188":0,"3189":0,"3190":0,"3191":0,"3192":0,"3193":0,"3194":0,"3195":0,"3196":0,"3197":0,"3198":0,"3199":0,"3200":0,"3201":0,"3202":0,"3203":0,"3204":0,"3205":0,"3206":0,"3207":0,"3208":0,"3209":0,"3210":0,"3211":0,"3212":0,"3213":0,"3214":0,"3215":0,"3216":0,"3217":0,"3218":0,"3219":0,"3220":0,"3221":0,"3222":0,"3223":0,"3224":0,"3225":0,"3226":0,"3227":0,"3228":0,"3229":0,"3230":0,"3231":0,"3232":0,"3233":0,"3234":0,"3235":0,"3236":0,"3237":0,"3238":0,"3239":0,"3240":0,"3241":0,"3242":0,"3243":0,"3244":0,"3245":0,"3246":0,"3247":0,"3248":0,"3249":0,"3250":0,"3251":0,"3252":0,"3253":0,"3254":0,"3255":0,"3256":0,"3257":0,"3258":0,"3259":0,"3260":0,"3261":0,"3262":0,"3263":0,"3264":0,"3265":0,"3266":0,"3267":0,"3268":0,"3269":0,"3270":0,"3271":0,"3272":0,"3273":0,"3274":0,"3275":0,"3276":0,"3277":0,"3278":0,"3279":0,"3280":0,"3281":0,"3282":0,"3283":0,"3284":0,"3285":0,"3286":0,"3287":0,"3288":0,"3289":0,"3290":0,"3291":0,"3292":0,"3293":0,"3294":0,"3295":0,"3296":0,"3297":0,"3298":0,"3299":0,"3300":0,"3301":0,"3302":0,"3303":0,"3304":0,"3305":0,"3306":0,"3307":0,"3308":0,"3309":0,"3310":0,"3311":0,"3312":0,"3313":0,"3314":0,"3315":0,"3316":0,"3317":0,"3318":0,"3319":0,"3320":0,"3321":0,"3322":0,"3323":0,"3324":0,"3325":0,"3326":0,"3327":0,"3328":0,"3329":0,"3330":0,"3331":0,"3332":0,"3333":0,"3334":0,"3335":0,"3336":0,"3337":0,"3338":0,"3339":0,"3340":0,"3341":0,"3342":0,"3343":0,"3344":0,"3345":0,"3346":0,"3347":1,"3348":1,"3349":0,"3350":1,"3351":1,"3352":1,"3353":0,"3354":0,"3355":0,"3356":0,"3357":0,"3358":0,"3359":0,"3360":0,"3361":1,"3362":0,"3363":0,"3364":0,"3365":0,"3366":0,"3367":0,"3368":0,"3369":0,"3370":0,"3371":0,"3372":0,"3373":0,"3374":0,"3375":0,"3376":0,"3377":0,"3378":0,"3379":1,"3380":1,"3381":0,"3382":0,"3383":1,"3384":1,"3385":0,"3386":0,"3387":0,"3388":0,"3389":1,"3390":1,"3391":1,"3392":1,"3393":1,"3394":0,"3395":0,"3396":1,"3397":0,"3398":0,"3399":0,"3400":1,"3401":1,"3402":1,"3403":1,"3404":0,"3405":0,"3406":0,"3407":1},"b":{"1":[1,1,1],"2":[1,0,0],"3":[0,1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[2,0],"188":[2,1],"189":[2,1],"190":[0,2],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[1,1],"200":[0,0],"201":[2,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[1,0],"207":[1,0],"208":[0,1],"209":[1,0],"210":[0,0],"211":[1,1],"212":[1,0],"213":[1,0],"214":[1,1],"215":[1,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[1,1],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[1,1],"247":[0,1],"248":[0,1],"249":[0,1],"250":[0,1],"251":[1,1],"252":[0,1],"253":[1,1],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,1],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0],"299":[0,0],"300":[0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0],"305":[0,0],"306":[0,0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0,0],"311":[0,0],"312":[0,0],"313":[0,0],"314":[0,0],"315":[0,0],"316":[0,0],"317":[0,0],"318":[0,0],"319":[0,0],"320":[0,0],"321":[0,0],"322":[0,0,0,0,0,0],"323":[0,0],"324":[0,0,0,0],"325":[0,0],"326":[0,0],"327":[0,0],"328":[0,0],"329":[0,0],"330":[0,0],"331":[1,0],"332":[1,0],"333":[1,0],"334":[0,0],"335":[0,0],"336":[0,0],"337":[0,0],"338":[0,0],"339":[1,0],"340":[0,0],"341":[0,0],"342":[0,0],"343":[0,0],"344":[0,0],"345":[0,0],"346":[0,0],"347":[0,0],"348":[0,0,0],"349":[0,0],"350":[0,0],"351":[0,0],"352":[0,0],"353":[0,0],"354":[0,0],"355":[0,0],"356":[0,0],"357":[0,0],"358":[0,0],"359":[0,0],"360":[0,0],"361":[0,0],"362":[0,0],"363":[0,0],"364":[0,0],"365":[0,0],"366":[0,0],"367":[0,0],"368":[0,0],"369":[0,0],"370":[0,0,0],"371":[0,0],"372":[0,0],"373":[0,0],"374":[0,0],"375":[0,0],"376":[0,0],"377":[0,0],"378":[0,0],"379":[0,0],"380":[0,0],"381":[0,0],"382":[0,0],"383":[0,0],"384":[0,0,0,0,0,0,0],"385":[0,0],"386":[0,0],"387":[0,0],"388":[0,0],"389":[0,0],"390":[0,0,0],"391":[0,0],"392":[0,0],"393":[0,0],"394":[0,0,0],"395":[0,0],"396":[0,0],"397":[0,0],"398":[0,0],"399":[0,0],"400":[0,0],"401":[0,0],"402":[0,0],"403":[0,0],"404":[0,0],"405":[0,0],"406":[0,0],"407":[0,0],"408":[0,0],"409":[0,0],"410":[0,0],"411":[0,0],"412":[0,0],"413":[0,0],"414":[0,0,0],"415":[0,0],"416":[0,0],"417":[0,0],"418":[0,0],"419":[0,0],"420":[0,0],"421":[0,0],"422":[0,0],"423":[0,0],"424":[0,0],"425":[0,0],"426":[0,0],"427":[0,0],"428":[0,0],"429":[0,0],"430":[0,0],"431":[0,0],"432":[0,0],"433":[0,0],"434":[0,0],"435":[0,0],"436":[0,0],"437":[0,0],"438":[0,0],"439":[0,0],"440":[0,0],"441":[0,0],"442":[0,0],"443":[0,0,0],"444":[0,0],"445":[0,0],"446":[0,0],"447":[0,0],"448":[0,0],"449":[0,0],"450":[0,0],"451":[0,0],"452":[0,0],"453":[0,0],"454":[0,0],"455":[0,0],"456":[0,0],"457":[0,0],"458":[0,0],"459":[0,0],"460":[0,0],"461":[0,0],"462":[0,0,0],"463":[0,0],"464":[0,0],"465":[0,0],"466":[0,0],"467":[0,0],"468":[0,0],"469":[0,0],"470":[0,0],"471":[0,0],"472":[0,0],"473":[0,0],"474":[0,0,0,0,0],"475":[0,0],"476":[0,0,0,0,0],"477":[0,0],"478":[0,0,0],"479":[0,0],"480":[0,0],"481":[0,0],"482":[0,0],"483":[0,0],"484":[0,0],"485":[0,0],"486":[0,0],"487":[0,0],"488":[0,0],"489":[0,0],"490":[0,0,0],"491":[0,0],"492":[0,0],"493":[0,0],"494":[0,0],"495":[0,0],"496":[0,0,0,0,0,0,0,0,0,0,0],"497":[0,0],"498":[0,0],"499":[0,0],"500":[0,0],"501":[0,0],"502":[0,0],"503":[0,0],"504":[0,0],"505":[0,0],"506":[0,0,0],"507":[0,0],"508":[0,0],"509":[0,0],"510":[0,0],"511":[0,0],"512":[0,0],"513":[0,0],"514":[0,0],"515":[0,0],"516":[0,0],"517":[0,0],"518":[0,0],"519":[0,0],"520":[0,0],"521":[0,0],"522":[0,0],"523":[0,0],"524":[0,0],"525":[0,0],"526":[0,0],"527":[0,0],"528":[0,0],"529":[0,0],"530":[0,0],"531":[0,0],"532":[0,0],"533":[0,0],"534":[0,0],"535":[0,0],"536":[0,0],"537":[0,0],"538":[0,0],"539":[0,0],"540":[0,0],"541":[0,0],"542":[0,0],"543":[0,0,0],"544":[0,0],"545":[0,0],"546":[0,0],"547":[0,0],"548":[0,0],"549":[0,0],"550":[0,0],"551":[0,0],"552":[0,0],"553":[0,0],"554":[0,0],"555":[0,0],"556":[0,0],"557":[0,0],"558":[0,0],"559":[0,0],"560":[0,0],"561":[0,0],"562":[0,0],"563":[0,0],"564":[0,0],"565":[0,0],"566":[0,0],"567":[0,0],"568":[0,0],"569":[0,0],"570":[0,0],"571":[0,0],"572":[0,0],"573":[0,0],"574":[0,0],"575":[0,0],"576":[0,0],"577":[0,0],"578":[0,0],"579":[0,0],"580":[0,0],"581":[0,0],"582":[0,0],"583":[0,0],"584":[0,0],"585":[0,0],"586":[0,0],"587":[0,0],"588":[0,0],"589":[0,0],"590":[0,0],"591":[0,0],"592":[0,0],"593":[0,0],"594":[0,0],"595":[0,0],"596":[1,1],"597":[0,1],"598":[0,1],"599":[0,1],"600":[0,0],"601":[0,0],"602":[0,0],"603":[0,0],"604":[0,0],"605":[0,0],"606":[0,0],"607":[0,0],"608":[0,0],"609":[0,0],"610":[0,0],"611":[0,0],"612":[0,0],"613":[0,0],"614":[0,0],"615":[0,0],"616":[0,0],"617":[0,0],"618":[0,0],"619":[0,0],"620":[0,0],"621":[0,0],"622":[0,0],"623":[0,0],"624":[0,0],"625":[0,0],"626":[0,0],"627":[0,0],"628":[0,0],"629":[0,0],"630":[0,0],"631":[0,0],"632":[0,0],"633":[0,0],"634":[0,0],"635":[0,0],"636":[0,0],"637":[0,0],"638":[0,0],"639":[0,0],"640":[0,0],"641":[0,0,0],"642":[0,0],"643":[0,0],"644":[0,0,0],"645":[0,0],"646":[0,0],"647":[0,0],"648":[0,0],"649":[0,0],"650":[0,0],"651":[0,0],"652":[0,0],"653":[0,0],"654":[0,0],"655":[0,0],"656":[0,0],"657":[0,0],"658":[0,0],"659":[0,0],"660":[0,0],"661":[0,0],"662":[0,0],"663":[0,0],"664":[0,0],"665":[0,0],"666":[0,0],"667":[0,0],"668":[0,0],"669":[0,0],"670":[0,0],"671":[0,0],"672":[0,0],"673":[0,0],"674":[0,0],"675":[0,0],"676":[0,0],"677":[0,0],"678":[0,0],"679":[0,0],"680":[0,0],"681":[0,0],"682":[0,0],"683":[0,0],"684":[0,0,0,0],"685":[0,0],"686":[0,0],"687":[0,0],"688":[0,0],"689":[0,0],"690":[0,0],"691":[0,0],"692":[0,0],"693":[0,0],"694":[0,0],"695":[0,0],"696":[0,0],"697":[0,0],"698":[0,0],"699":[0,0],"700":[0,0],"701":[0,0],"702":[0,0],"703":[0,0],"704":[0,0],"705":[0,0],"706":[0,0],"707":[0,0],"708":[0,0],"709":[0,0],"710":[0,0],"711":[0,0],"712":[0,0],"713":[0,0],"714":[0,0],"715":[0,0],"716":[0,0],"717":[0,0],"718":[0,0],"719":[0,0],"720":[0,0],"721":[0,0],"722":[0,0],"723":[0,0],"724":[0,0,0],"725":[0,0],"726":[0,0,0],"727":[0,0],"728":[0,0],"729":[0,0],"730":[0,0],"731":[0,0],"732":[0,0],"733":[0,0],"734":[0,0],"735":[0,0],"736":[0,0],"737":[0,0],"738":[0,0],"739":[0,0],"740":[0,0,0],"741":[0,0,0],"742":[0,0],"743":[0,0],"744":[0,0],"745":[0,0],"746":[0,0],"747":[0,0],"748":[0,0,0],"749":[0,0],"750":[0,0],"751":[0,0],"752":[0,0],"753":[0,0],"754":[0,0],"755":[0,0],"756":[0,0],"757":[0,0],"758":[0,0],"759":[0,0],"760":[0,0],"761":[0,0,0,0],"762":[0,0],"763":[0,0],"764":[0,0],"765":[0,0],"766":[0,0],"767":[0,0],"768":[0,0,0],"769":[0,0],"770":[0,0],"771":[0,0,0],"772":[0,0],"773":[0,0],"774":[0,0],"775":[0,0],"776":[0,0],"777":[0,0],"778":[0,0],"779":[0,0],"780":[0,0],"781":[0,0],"782":[0,0],"783":[0,0],"784":[0,0],"785":[0,0],"786":[0,0],"787":[0,0],"788":[0,0],"789":[0,0],"790":[0,0],"791":[0,0],"792":[0,0],"793":[0,0],"794":[0,0],"795":[0,0],"796":[0,0],"797":[0,0],"798":[0,0],"799":[0,0],"800":[0,0],"801":[0,0],"802":[0,0],"803":[0,0],"804":[0,0],"805":[0,0],"806":[0,0],"807":[0,0],"808":[0,0],"809":[0,0],"810":[0,0],"811":[0,0],"812":[0,0],"813":[0,0],"814":[0,0,0],"815":[0,0],"816":[0,0,0],"817":[0,0],"818":[0,0],"819":[0,0],"820":[0,0],"821":[0,0],"822":[0,0],"823":[0,0],"824":[0,0,0,0],"825":[0,0],"826":[0,0],"827":[0,0,0,0],"828":[0,0],"829":[0,0],"830":[0,0],"831":[0,0],"832":[0,0,0],"833":[0,0],"834":[0,0],"835":[0,0],"836":[0,0],"837":[0,0],"838":[0,0],"839":[0,0,0],"840":[0,0],"841":[0,0],"842":[0,0],"843":[0,0],"844":[0,0],"845":[0,0],"846":[0,0],"847":[0,0],"848":[0,0],"849":[0,0],"850":[0,0],"851":[0,0],"852":[0,0],"853":[0,0],"854":[0,0],"855":[0,0],"856":[0,0],"857":[0,0],"858":[0,0],"859":[0,0],"860":[0,0],"861":[0,0],"862":[0,0],"863":[0,0],"864":[0,0,0,0],"865":[0,0],"866":[0,0,0,0],"867":[0,0],"868":[0,0],"869":[0,0],"870":[0,0],"871":[0,0],"872":[0,0],"873":[0,0],"874":[0,0],"875":[0,0],"876":[0,0],"877":[0,0,0],"878":[0,0],"879":[0,0],"880":[0,0],"881":[0,0],"882":[0,0],"883":[0,0],"884":[0,0],"885":[0,0],"886":[0,0],"887":[0,0],"888":[0,0],"889":[0,0],"890":[0,0],"891":[0,0],"892":[0,0],"893":[0,0],"894":[0,0],"895":[0,0],"896":[0,0],"897":[0,0],"898":[0,0],"899":[0,0],"900":[0,0],"901":[0,0],"902":[0,0],"903":[0,0],"904":[0,0],"905":[0,0],"906":[0,0],"907":[0,0],"908":[0,0],"909":[0,0],"910":[0,0],"911":[0,0],"912":[0,0],"913":[0,0],"914":[0,0],"915":[0,0],"916":[0,0],"917":[0,0],"918":[0,0],"919":[0,0],"920":[0,0],"921":[0,0],"922":[0,0],"923":[0,0],"924":[0,0],"925":[0,0],"926":[0,0],"927":[0,0],"928":[0,0],"929":[0,0],"930":[0,0],"931":[0,0],"932":[0,0],"933":[0,0],"934":[0,0],"935":[0,0],"936":[0,0],"937":[0,0],"938":[0,0],"939":[0,0],"940":[0,0],"941":[0,0],"942":[0,0],"943":[0,0],"944":[0,0],"945":[0,0],"946":[0,0],"947":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"948":[0,0],"949":[0,0],"950":[0,0],"951":[0,0],"952":[0,0],"953":[0,0],"954":[0,0],"955":[0,0],"956":[0,0],"957":[0,0],"958":[0,0],"959":[0,0],"960":[0,0],"961":[0,0,0],"962":[0,0],"963":[0,0,0],"964":[0,0],"965":[0,0],"966":[0,0],"967":[0,0],"968":[0,0],"969":[0,0,0],"970":[0,0],"971":[0,0],"972":[0,0],"973":[0,0],"974":[0,0],"975":[0,0],"976":[0,0],"977":[0,0],"978":[0,0],"979":[0,0],"980":[0,0],"981":[0,0],"982":[0,0],"983":[0,0],"984":[0,0],"985":[0,0],"986":[0,0],"987":[0,0],"988":[0,0],"989":[0,0],"990":[0,0],"991":[0,0],"992":[0,0],"993":[0,0],"994":[0,0],"995":[0,0],"996":[0,0],"997":[0,0],"998":[0,0],"999":[0,0],"1000":[0,0],"1001":[0,0],"1002":[0,0],"1003":[0,0],"1004":[0,1],"1005":[0,0],"1006":[0,0],"1007":[0,0],"1008":[0,0],"1009":[0,0],"1010":[0,0],"1011":[0,0],"1012":[0,0],"1013":[0,0],"1014":[0,0],"1015":[0,0],"1016":[0,0],"1017":[0,0],"1018":[0,0],"1019":[0,0],"1020":[0,0],"1021":[0,0],"1022":[0,0],"1023":[0,0],"1024":[0,0],"1025":[0,0],"1026":[0,0],"1027":[0,0],"1028":[0,0],"1029":[0,0],"1030":[0,0],"1031":[0,0],"1032":[0,0],"1033":[0,0],"1034":[0,0],"1035":[0,0],"1036":[0,0],"1037":[0,0],"1038":[0,0],"1039":[0,0],"1040":[0,0],"1041":[0,0],"1042":[0,0],"1043":[0,0],"1044":[0,0],"1045":[0,0],"1046":[0,0],"1047":[0,0],"1048":[0,0],"1049":[0,0],"1050":[0,0,0,0,0,0,0,0],"1051":[0,0],"1052":[0,0],"1053":[0,0],"1054":[0,0],"1055":[0,0],"1056":[1,0],"1057":[0,0],"1058":[0,0],"1059":[0,0],"1060":[0,0],"1061":[0,0],"1062":[0,0],"1063":[0,0],"1064":[0,0],"1065":[0,0],"1066":[0,0],"1067":[0,0],"1068":[0,0],"1069":[0,0],"1070":[1,0],"1071":[0,0],"1072":[0,0],"1073":[0,0],"1074":[0,0],"1075":[0,0,0],"1076":[0,0],"1077":[0,0],"1078":[0,0,0],"1079":[1,0],"1080":[0,0],"1081":[1,0],"1082":[0,0],"1083":[0,1],"1084":[1,0,0],"1085":[1,0],"1086":[1,1,1],"1087":[0,1],"1088":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":2,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":2,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":1,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":1,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":1,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0},"fnMap":{"1":{"name":"(anonymous_1)","line":36,"loc":{"start":{"line":36,"column":1},"end":{"line":36,"column":12}}},"2":{"name":"(anonymous_2)","line":56,"loc":{"start":{"line":56,"column":14},"end":{"line":56,"column":31}}},"3":{"name":"(anonymous_3)","line":76,"loc":{"start":{"line":76,"column":17},"end":{"line":76,"column":57}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":27},"end":{"line":78,"column":38}}},"5":{"name":"(anonymous_5)","line":91,"loc":{"start":{"line":91,"column":27},"end":{"line":91,"column":38}}},"6":{"name":"(anonymous_6)","line":100,"loc":{"start":{"line":100,"column":27},"end":{"line":100,"column":38}}},"7":{"name":"(anonymous_7)","line":130,"loc":{"start":{"line":130,"column":15},"end":{"line":130,"column":50}}},"8":{"name":"(anonymous_8)","line":132,"loc":{"start":{"line":132,"column":29},"end":{"line":132,"column":40}}},"9":{"name":"(anonymous_9)","line":140,"loc":{"start":{"line":140,"column":25},"end":{"line":140,"column":49}}},"10":{"name":"(anonymous_10)","line":149,"loc":{"start":{"line":149,"column":51},"end":{"line":149,"column":76}}},"11":{"name":"cleanup","line":169,"loc":{"start":{"line":169,"column":2},"end":{"line":169,"column":55}}},"12":{"name":"(anonymous_12)","line":247,"loc":{"start":{"line":247,"column":16},"end":{"line":247,"column":51}}},"13":{"name":"(anonymous_13)","line":249,"loc":{"start":{"line":249,"column":27},"end":{"line":249,"column":38}}},"14":{"name":"(anonymous_14)","line":269,"loc":{"start":{"line":269,"column":18},"end":{"line":269,"column":29}}},"15":{"name":"(anonymous_15)","line":272,"loc":{"start":{"line":272,"column":17},"end":{"line":272,"column":42}}},"16":{"name":"expand","line":306,"loc":{"start":{"line":306,"column":2},"end":{"line":306,"column":29}}},"17":{"name":"(anonymous_17)","line":324,"loc":{"start":{"line":324,"column":41},"end":{"line":324,"column":62}}},"18":{"name":"(anonymous_18)","line":383,"loc":{"start":{"line":383,"column":17},"end":{"line":383,"column":57}}},"19":{"name":"(anonymous_19)","line":385,"loc":{"start":{"line":385,"column":27},"end":{"line":385,"column":38}}},"20":{"name":"(anonymous_20)","line":410,"loc":{"start":{"line":410,"column":32},"end":{"line":410,"column":54}}},"21":{"name":"(anonymous_21)","line":432,"loc":{"start":{"line":432,"column":44},"end":{"line":432,"column":69}}},"22":{"name":"(anonymous_22)","line":459,"loc":{"start":{"line":459,"column":15},"end":{"line":459,"column":57}}},"23":{"name":"(anonymous_23)","line":461,"loc":{"start":{"line":461,"column":27},"end":{"line":461,"column":38}}},"24":{"name":"(anonymous_24)","line":489,"loc":{"start":{"line":489,"column":18},"end":{"line":489,"column":29}}},"25":{"name":"(anonymous_25)","line":492,"loc":{"start":{"line":492,"column":17},"end":{"line":492,"column":42}}},"26":{"name":"doFrame","line":526,"loc":{"start":{"line":526,"column":2},"end":{"line":526,"column":32}}},"27":{"name":"(anonymous_27)","line":549,"loc":{"start":{"line":549,"column":34},"end":{"line":549,"column":58}}},"28":{"name":"(anonymous_28)","line":560,"loc":{"start":{"line":560,"column":33},"end":{"line":560,"column":62}}},"29":{"name":"(anonymous_29)","line":580,"loc":{"start":{"line":580,"column":42},"end":{"line":580,"column":72}}},"30":{"name":"(anonymous_30)","line":611,"loc":{"start":{"line":611,"column":14},"end":{"line":611,"column":54}}},"31":{"name":"(anonymous_31)","line":635,"loc":{"start":{"line":635,"column":19},"end":{"line":635,"column":59}}},"32":{"name":"(anonymous_32)","line":651,"loc":{"start":{"line":651,"column":32},"end":{"line":651,"column":54}}},"33":{"name":"(anonymous_33)","line":669,"loc":{"start":{"line":669,"column":44},"end":{"line":669,"column":74}}},"34":{"name":"(anonymous_34)","line":679,"loc":{"start":{"line":679,"column":20},"end":{"line":679,"column":38}}},"35":{"name":"(anonymous_35)","line":765,"loc":{"start":{"line":765,"column":19},"end":{"line":765,"column":54}}},"36":{"name":"(anonymous_36)","line":767,"loc":{"start":{"line":767,"column":27},"end":{"line":767,"column":38}}},"37":{"name":"(anonymous_37)","line":804,"loc":{"start":{"line":804,"column":30},"end":{"line":804,"column":53}}},"38":{"name":"(anonymous_38)","line":831,"loc":{"start":{"line":831,"column":17},"end":{"line":831,"column":54}}},"39":{"name":"(anonymous_39)","line":833,"loc":{"start":{"line":833,"column":27},"end":{"line":833,"column":38}}},"40":{"name":"(anonymous_40)","line":860,"loc":{"start":{"line":860,"column":18},"end":{"line":860,"column":29}}},"41":{"name":"(anonymous_41)","line":873,"loc":{"start":{"line":873,"column":18},"end":{"line":873,"column":29}}},"42":{"name":"(anonymous_42)","line":881,"loc":{"start":{"line":881,"column":35},"end":{"line":881,"column":58}}},"43":{"name":"(anonymous_43)","line":898,"loc":{"start":{"line":898,"column":28},"end":{"line":898,"column":46}}},"44":{"name":"fromRDF","line":906,"loc":{"start":{"line":906,"column":4},"end":{"line":906,"column":49}}},"45":{"name":"(anonymous_45)","line":927,"loc":{"start":{"line":927,"column":15},"end":{"line":927,"column":50}}},"46":{"name":"(anonymous_46)","line":929,"loc":{"start":{"line":929,"column":27},"end":{"line":929,"column":38}}},"47":{"name":"(anonymous_47)","line":950,"loc":{"start":{"line":950,"column":32},"end":{"line":950,"column":56}}},"48":{"name":"(anonymous_48)","line":991,"loc":{"start":{"line":991,"column":23},"end":{"line":991,"column":58}}},"49":{"name":"(anonymous_49)","line":993,"loc":{"start":{"line":993,"column":27},"end":{"line":993,"column":38}}},"50":{"name":"(anonymous_50)","line":1014,"loc":{"start":{"line":1014,"column":32},"end":{"line":1014,"column":54}}},"51":{"name":"(anonymous_51)","line":1052,"loc":{"start":{"line":1052,"column":15},"end":{"line":1052,"column":54}}},"52":{"name":"(anonymous_52)","line":1054,"loc":{"start":{"line":1054,"column":27},"end":{"line":1054,"column":38}}},"53":{"name":"(anonymous_53)","line":1059,"loc":{"start":{"line":1059,"column":27},"end":{"line":1059,"column":38}}},"54":{"name":"expandComplete","line":1087,"loc":{"start":{"line":1087,"column":2},"end":{"line":1087,"column":39}}},"55":{"name":"merge","line":1103,"loc":{"start":{"line":1103,"column":2},"end":{"line":1103,"column":27}}},"56":{"name":"(anonymous_56)","line":1168,"loc":{"start":{"line":1168,"column":44},"end":{"line":1168,"column":69}}},"57":{"name":"(anonymous_57)","line":1187,"loc":{"start":{"line":1187,"column":27},"end":{"line":1187,"column":52}}},"58":{"name":"(anonymous_58)","line":1201,"loc":{"start":{"line":1201,"column":21},"end":{"line":1201,"column":41}}},"59":{"name":"(anonymous_59)","line":1216,"loc":{"start":{"line":1216,"column":24},"end":{"line":1216,"column":48}}},"60":{"name":"(anonymous_60)","line":1224,"loc":{"start":{"line":1224,"column":26},"end":{"line":1224,"column":45}}},"61":{"name":"(anonymous_61)","line":1233,"loc":{"start":{"line":1233,"column":22},"end":{"line":1233,"column":46}}},"62":{"name":"(anonymous_62)","line":1253,"loc":{"start":{"line":1253,"column":18},"end":{"line":1253,"column":36}}},"63":{"name":"(anonymous_63)","line":1268,"loc":{"start":{"line":1268,"column":15},"end":{"line":1268,"column":31}}},"64":{"name":"(anonymous_64)","line":1274,"loc":{"start":{"line":1274,"column":16},"end":{"line":1274,"column":37}}},"65":{"name":"(anonymous_65)","line":1278,"loc":{"start":{"line":1278,"column":18},"end":{"line":1278,"column":58}}},"66":{"name":"(anonymous_66)","line":1280,"loc":{"start":{"line":1280,"column":42},"end":{"line":1280,"column":67}}},"67":{"name":"(anonymous_67)","line":1286,"loc":{"start":{"line":1286,"column":16},"end":{"line":1286,"column":32}}},"68":{"name":"(anonymous_68)","line":1293,"loc":{"start":{"line":1293,"column":14},"end":{"line":1293,"column":37}}},"69":{"name":"(anonymous_69)","line":1299,"loc":{"start":{"line":1299,"column":16},"end":{"line":1299,"column":34}}},"70":{"name":"(anonymous_70)","line":1306,"loc":{"start":{"line":1306,"column":14},"end":{"line":1306,"column":30}}},"71":{"name":"(anonymous_71)","line":1312,"loc":{"start":{"line":1312,"column":18},"end":{"line":1312,"column":34}}},"72":{"name":"(anonymous_72)","line":1321,"loc":{"start":{"line":1321,"column":15},"end":{"line":1321,"column":36}}},"73":{"name":"(anonymous_73)","line":1328,"loc":{"start":{"line":1328,"column":20},"end":{"line":1328,"column":36}}},"74":{"name":"(anonymous_74)","line":1332,"loc":{"start":{"line":1332,"column":24},"end":{"line":1332,"column":40}}},"75":{"name":"(anonymous_75)","line":1336,"loc":{"start":{"line":1336,"column":16},"end":{"line":1336,"column":32}}},"76":{"name":"(anonymous_76)","line":1345,"loc":{"start":{"line":1345,"column":12},"end":{"line":1345,"column":23}}},"77":{"name":"(anonymous_77)","line":1363,"loc":{"start":{"line":1363,"column":19},"end":{"line":1363,"column":32}}},"78":{"name":"(anonymous_78)","line":1372,"loc":{"start":{"line":1372,"column":28},"end":{"line":1372,"column":54}}},"79":{"name":"(anonymous_79)","line":1373,"loc":{"start":{"line":1373,"column":31},"end":{"line":1373,"column":52}}},"80":{"name":"JsonLdProcessor","line":1388,"loc":{"start":{"line":1388,"column":0},"end":{"line":1388,"column":27}}},"81":{"name":"(anonymous_81)","line":1390,"loc":{"start":{"line":1390,"column":37},"end":{"line":1390,"column":48}}},"82":{"name":"(anonymous_82)","line":1446,"loc":{"start":{"line":1446,"column":29},"end":{"line":1446,"column":42}}},"83":{"name":"(anonymous_83)","line":1449,"loc":{"start":{"line":1449,"column":4},"end":{"line":1449,"column":17}}},"84":{"name":"(anonymous_84)","line":1477,"loc":{"start":{"line":1477,"column":25},"end":{"line":1477,"column":42}}},"85":{"name":"(anonymous_85)","line":1508,"loc":{"start":{"line":1508,"column":22},"end":{"line":1508,"column":33}}},"86":{"name":"(anonymous_86)","line":1511,"loc":{"start":{"line":1511,"column":43},"end":{"line":1511,"column":60}}},"87":{"name":"(anonymous_87)","line":1516,"loc":{"start":{"line":1516,"column":36},"end":{"line":1516,"column":60}}},"88":{"name":"(anonymous_88)","line":1526,"loc":{"start":{"line":1526,"column":30},"end":{"line":1526,"column":56}}},"89":{"name":"(anonymous_89)","line":1531,"loc":{"start":{"line":1531,"column":16},"end":{"line":1531,"column":36}}},"90":{"name":"(anonymous_90)","line":1534,"loc":{"start":{"line":1534,"column":19},"end":{"line":1534,"column":33}}},"91":{"name":"(anonymous_91)","line":1540,"loc":{"start":{"line":1540,"column":16},"end":{"line":1540,"column":36}}},"92":{"name":"(anonymous_92)","line":1542,"loc":{"start":{"line":1542,"column":15},"end":{"line":1542,"column":29}}},"93":{"name":"(anonymous_93)","line":1553,"loc":{"start":{"line":1553,"column":22},"end":{"line":1553,"column":47}}},"94":{"name":"(anonymous_94)","line":1571,"loc":{"start":{"line":1571,"column":23},"end":{"line":1571,"column":38}}},"95":{"name":"(anonymous_95)","line":1577,"loc":{"start":{"line":1577,"column":37},"end":{"line":1577,"column":51}}},"96":{"name":"(anonymous_96)","line":1588,"loc":{"start":{"line":1588,"column":37},"end":{"line":1588,"column":56}}},"97":{"name":"(anonymous_97)","line":1601,"loc":{"start":{"line":1601,"column":28},"end":{"line":1601,"column":43}}},"98":{"name":"(anonymous_98)","line":1606,"loc":{"start":{"line":1606,"column":42},"end":{"line":1606,"column":72}}},"99":{"name":"(anonymous_99)","line":1615,"loc":{"start":{"line":1615,"column":42},"end":{"line":1616,"column":31}}},"100":{"name":"(anonymous_100)","line":1654,"loc":{"start":{"line":1654,"column":32},"end":{"line":1654,"column":53}}},"101":{"name":"(anonymous_101)","line":1662,"loc":{"start":{"line":1662,"column":28},"end":{"line":1662,"column":42}}},"102":{"name":"loader","line":1668,"loc":{"start":{"line":1668,"column":2},"end":{"line":1668,"column":33}}},"103":{"name":"(anonymous_103)","line":1694,"loc":{"start":{"line":1694,"column":15},"end":{"line":1694,"column":49}}},"104":{"name":"(anonymous_104)","line":1717,"loc":{"start":{"line":1717,"column":13},"end":{"line":1717,"column":46}}},"105":{"name":"(anonymous_105)","line":1746,"loc":{"start":{"line":1746,"column":30},"end":{"line":1746,"column":48}}},"106":{"name":"(anonymous_106)","line":1758,"loc":{"start":{"line":1758,"column":28},"end":{"line":1758,"column":42}}},"107":{"name":"(anonymous_107)","line":1768,"loc":{"start":{"line":1768,"column":26},"end":{"line":1768,"column":50}}},"108":{"name":"loadDocument","line":1772,"loc":{"start":{"line":1772,"column":2},"end":{"line":1772,"column":50}}},"109":{"name":"handleResponse","line":1801,"loc":{"start":{"line":1801,"column":4},"end":{"line":1801,"column":44}}},"110":{"name":"(anonymous_110)","line":1891,"loc":{"start":{"line":1891,"column":29},"end":{"line":1891,"column":47}}},"111":{"name":"(anonymous_111)","line":1900,"loc":{"start":{"line":1900,"column":28},"end":{"line":1900,"column":42}}},"112":{"name":"loader","line":1906,"loc":{"start":{"line":1906,"column":2},"end":{"line":1906,"column":33}}},"113":{"name":"(anonymous_113)","line":1923,"loc":{"start":{"line":1923,"column":17},"end":{"line":1923,"column":28}}},"114":{"name":"(anonymous_114)","line":1959,"loc":{"start":{"line":1959,"column":18},"end":{"line":1959,"column":29}}},"115":{"name":"(anonymous_115)","line":1982,"loc":{"start":{"line":1982,"column":27},"end":{"line":1982,"column":42}}},"116":{"name":"(anonymous_116)","line":2005,"loc":{"start":{"line":2005,"column":24},"end":{"line":2005,"column":54}}},"117":{"name":"(anonymous_117)","line":2033,"loc":{"start":{"line":2033,"column":42},"end":{"line":2033,"column":61}}},"118":{"name":"(anonymous_118)","line":2055,"loc":{"start":{"line":2055,"column":21},"end":{"line":2055,"column":49}}},"119":{"name":"(anonymous_119)","line":2073,"loc":{"start":{"line":2073,"column":18},"end":{"line":2073,"column":53}}},"120":{"name":"(anonymous_120)","line":2109,"loc":{"start":{"line":2109,"column":18},"end":{"line":2109,"column":62}}},"121":{"name":"(anonymous_121)","line":2155,"loc":{"start":{"line":2155,"column":19},"end":{"line":2155,"column":47}}},"122":{"name":"(anonymous_122)","line":2169,"loc":{"start":{"line":2169,"column":24},"end":{"line":2169,"column":52}}},"123":{"name":"(anonymous_123)","line":2183,"loc":{"start":{"line":2183,"column":21},"end":{"line":2183,"column":65}}},"124":{"name":"(anonymous_124)","line":2190,"loc":{"start":{"line":2190,"column":58},"end":{"line":2190,"column":70}}},"125":{"name":"(anonymous_125)","line":2217,"loc":{"start":{"line":2217,"column":23},"end":{"line":2217,"column":40}}},"126":{"name":"(anonymous_126)","line":2251,"loc":{"start":{"line":2251,"column":25},"end":{"line":2251,"column":50}}},"127":{"name":"(anonymous_127)","line":2304,"loc":{"start":{"line":2304,"column":27},"end":{"line":2304,"column":57}}},"128":{"name":"(anonymous_128)","line":2313,"loc":{"start":{"line":2313,"column":29},"end":{"line":2313,"column":51}}},"129":{"name":"(anonymous_129)","line":2367,"loc":{"start":{"line":2367,"column":18},"end":{"line":2367,"column":47}}},"130":{"name":"(anonymous_130)","line":2387,"loc":{"start":{"line":2387,"column":16},"end":{"line":2387,"column":27}}},"131":{"name":"(anonymous_131)","line":2401,"loc":{"start":{"line":2401,"column":30},"end":{"line":2402,"column":47}}},"132":{"name":"(anonymous_132)","line":2666,"loc":{"start":{"line":2666,"column":29},"end":{"line":2667,"column":59}}},"133":{"name":"_expandIndexMap","line":2878,"loc":{"start":{"line":2878,"column":23},"end":{"line":2878,"column":64}}},"134":{"name":"(anonymous_134)","line":3055,"loc":{"start":{"line":3055,"column":36},"end":{"line":3055,"column":61}}},"135":{"name":"(anonymous_135)","line":3074,"loc":{"start":{"line":3074,"column":30},"end":{"line":3074,"column":46}}},"136":{"name":"(anonymous_136)","line":3099,"loc":{"start":{"line":3099,"column":28},"end":{"line":3099,"column":60}}},"137":{"name":"(anonymous_137)","line":3127,"loc":{"start":{"line":3127,"column":32},"end":{"line":3127,"column":69}}},"138":{"name":"(anonymous_138)","line":3145,"loc":{"start":{"line":3145,"column":30},"end":{"line":3145,"column":67}}},"139":{"name":"(anonymous_139)","line":3322,"loc":{"start":{"line":3322,"column":28},"end":{"line":3322,"column":53}}},"140":{"name":"(anonymous_140)","line":3349,"loc":{"start":{"line":3349,"column":37},"end":{"line":3349,"column":76}}},"141":{"name":"_expandLanguageMap","line":3487,"loc":{"start":{"line":3487,"column":0},"end":{"line":3487,"column":41}}},"142":{"name":"_labelBlankNodes","line":3525,"loc":{"start":{"line":3525,"column":0},"end":{"line":3525,"column":43}}},"143":{"name":"_expandValue","line":3561,"loc":{"start":{"line":3561,"column":0},"end":{"line":3561,"column":56}}},"144":{"name":"_graphToRDF","line":3623,"loc":{"start":{"line":3623,"column":0},"end":{"line":3623,"column":45}}},"145":{"name":"_listToRDF","line":3696,"loc":{"start":{"line":3696,"column":0},"end":{"line":3696,"column":63}}},"146":{"name":"_objectToRDF","line":3730,"loc":{"start":{"line":3730,"column":0},"end":{"line":3730,"column":28}}},"147":{"name":"_RDFToObject","line":3784,"loc":{"start":{"line":3784,"column":0},"end":{"line":3784,"column":41}}},"148":{"name":"_compareRDFTriples","line":3840,"loc":{"start":{"line":3840,"column":0},"end":{"line":3840,"column":36}}},"149":{"name":"(anonymous_149)","line":3859,"loc":{"start":{"line":3859,"column":17},"end":{"line":3859,"column":28}}},"150":{"name":"(anonymous_150)","line":3863,"loc":{"start":{"line":3863,"column":16},"end":{"line":3863,"column":34}}},"151":{"name":"(anonymous_151)","line":3893,"loc":{"start":{"line":3893,"column":29},"end":{"line":3893,"column":52}}},"152":{"name":"work","line":3901,"loc":{"start":{"line":3901,"column":3},"end":{"line":3901,"column":19}}},"153":{"name":"(anonymous_153)","line":3921,"loc":{"start":{"line":3921,"column":16},"end":{"line":3921,"column":38}}},"154":{"name":"(anonymous_154)","line":3937,"loc":{"start":{"line":3937,"column":30},"end":{"line":3937,"column":63}}},"155":{"name":"(anonymous_155)","line":3944,"loc":{"start":{"line":3944,"column":15},"end":{"line":3944,"column":26}}},"156":{"name":"(anonymous_156)","line":3955,"loc":{"start":{"line":3955,"column":15},"end":{"line":3955,"column":26}}},"157":{"name":"iterate","line":3965,"loc":{"start":{"line":3965,"column":3},"end":{"line":3965,"column":33}}},"158":{"name":"(anonymous_158)","line":3970,"loc":{"start":{"line":3970,"column":25},"end":{"line":3970,"column":36}}},"159":{"name":"(anonymous_159)","line":3979,"loc":{"start":{"line":3979,"column":32},"end":{"line":3979,"column":56}}},"160":{"name":"(anonymous_160)","line":3981,"loc":{"start":{"line":3981,"column":20},"end":{"line":3981,"column":48}}},"161":{"name":"(anonymous_161)","line":3987,"loc":{"start":{"line":3987,"column":29},"end":{"line":3987,"column":63}}},"162":{"name":"loop","line":3989,"loc":{"start":{"line":3989,"column":3},"end":{"line":3989,"column":22}}},"163":{"name":"(anonymous_163)","line":4001,"loc":{"start":{"line":4001,"column":27},"end":{"line":4001,"column":55}}},"164":{"name":"(anonymous_164)","line":4021,"loc":{"start":{"line":4021,"column":4},"end":{"line":4021,"column":23}}},"165":{"name":"(anonymous_165)","line":4023,"loc":{"start":{"line":4023,"column":28},"end":{"line":4023,"column":67}}},"166":{"name":"(anonymous_166)","line":4027,"loc":{"start":{"line":4027,"column":30},"end":{"line":4027,"column":60}}},"167":{"name":"(anonymous_167)","line":4040,"loc":{"start":{"line":4040,"column":38},"end":{"line":4040,"column":58}}},"168":{"name":"(anonymous_168)","line":4056,"loc":{"start":{"line":4056,"column":4},"end":{"line":4056,"column":23}}},"169":{"name":"(anonymous_169)","line":4066,"loc":{"start":{"line":4066,"column":18},"end":{"line":4066,"column":29}}},"170":{"name":"(anonymous_170)","line":4066,"loc":{"start":{"line":4066,"column":49},"end":{"line":4066,"column":68}}},"171":{"name":"(anonymous_171)","line":4074,"loc":{"start":{"line":4074,"column":10},"end":{"line":4074,"column":29}}},"172":{"name":"(anonymous_172)","line":4077,"loc":{"start":{"line":4077,"column":40},"end":{"line":4077,"column":70}}},"173":{"name":"(anonymous_173)","line":4080,"loc":{"start":{"line":4080,"column":44},"end":{"line":4080,"column":64}}},"174":{"name":"(anonymous_174)","line":4095,"loc":{"start":{"line":4095,"column":10},"end":{"line":4095,"column":29}}},"175":{"name":"(anonymous_175)","line":4099,"loc":{"start":{"line":4099,"column":33},"end":{"line":4099,"column":61}}},"176":{"name":"(anonymous_176)","line":4129,"loc":{"start":{"line":4129,"column":4},"end":{"line":4129,"column":23}}},"177":{"name":"(anonymous_177)","line":4133,"loc":{"start":{"line":4133,"column":27},"end":{"line":4133,"column":57}}},"178":{"name":"(anonymous_178)","line":4141,"loc":{"start":{"line":4141,"column":10},"end":{"line":4141,"column":29}}},"179":{"name":"(anonymous_179)","line":4142,"loc":{"start":{"line":4142,"column":33},"end":{"line":4142,"column":61}}},"180":{"name":"(anonymous_180)","line":4160,"loc":{"start":{"line":4160,"column":48},"end":{"line":4160,"column":70}}},"181":{"name":"(anonymous_181)","line":4169,"loc":{"start":{"line":4169,"column":10},"end":{"line":4169,"column":29}}},"182":{"name":"(anonymous_182)","line":4172,"loc":{"start":{"line":4172,"column":30},"end":{"line":4172,"column":45}}},"183":{"name":"(anonymous_183)","line":4175,"loc":{"start":{"line":4175,"column":39},"end":{"line":4175,"column":71}}},"184":{"name":"(anonymous_184)","line":4189,"loc":{"start":{"line":4189,"column":7},"end":{"line":4189,"column":26}}},"185":{"name":"(anonymous_185)","line":4198,"loc":{"start":{"line":4198,"column":8},"end":{"line":4198,"column":27}}},"186":{"name":"(anonymous_186)","line":4199,"loc":{"start":{"line":4199,"column":35},"end":{"line":4199,"column":65}}},"187":{"name":"(anonymous_187)","line":4204,"loc":{"start":{"line":4204,"column":40},"end":{"line":4204,"column":60}}},"188":{"name":"(anonymous_188)","line":4215,"loc":{"start":{"line":4215,"column":8},"end":{"line":4215,"column":27}}},"189":{"name":"(anonymous_189)","line":4230,"loc":{"start":{"line":4230,"column":5},"end":{"line":4230,"column":19}}},"190":{"name":"(anonymous_190)","line":4236,"loc":{"start":{"line":4236,"column":43},"end":{"line":4236,"column":66}}},"191":{"name":"(anonymous_191)","line":4254,"loc":{"start":{"line":4254,"column":22},"end":{"line":4254,"column":52}}},"192":{"name":"(anonymous_192)","line":4261,"loc":{"start":{"line":4261,"column":32},"end":{"line":4261,"column":57}}},"193":{"name":"(anonymous_193)","line":4269,"loc":{"start":{"line":4269,"column":5},"end":{"line":4269,"column":19}}},"194":{"name":"(anonymous_194)","line":4284,"loc":{"start":{"line":4284,"column":49},"end":{"line":4284,"column":73}}},"195":{"name":"(anonymous_195)","line":4294,"loc":{"start":{"line":4294,"column":43},"end":{"line":4295,"column":45}}},"196":{"name":"(anonymous_196)","line":4304,"loc":{"start":{"line":4304,"column":4},"end":{"line":4304,"column":23}}},"197":{"name":"(anonymous_197)","line":4313,"loc":{"start":{"line":4313,"column":41},"end":{"line":4313,"column":61}}},"198":{"name":"(anonymous_198)","line":4321,"loc":{"start":{"line":4321,"column":5},"end":{"line":4321,"column":19}}},"199":{"name":"(anonymous_199)","line":4347,"loc":{"start":{"line":4347,"column":42},"end":{"line":4347,"column":57}}},"200":{"name":"(anonymous_200)","line":4352,"loc":{"start":{"line":4352,"column":39},"end":{"line":4352,"column":70}}},"201":{"name":"(anonymous_201)","line":4361,"loc":{"start":{"line":4361,"column":4},"end":{"line":4361,"column":23}}},"202":{"name":"(anonymous_202)","line":4362,"loc":{"start":{"line":4362,"column":43},"end":{"line":4362,"column":65}}},"203":{"name":"(anonymous_203)","line":4370,"loc":{"start":{"line":4370,"column":4},"end":{"line":4370,"column":23}}},"204":{"name":"(anonymous_204)","line":4377,"loc":{"start":{"line":4377,"column":27},"end":{"line":4377,"column":57}}},"205":{"name":"(anonymous_205)","line":4390,"loc":{"start":{"line":4390,"column":10},"end":{"line":4390,"column":21}}},"206":{"name":"(anonymous_206)","line":4391,"loc":{"start":{"line":4391,"column":10},"end":{"line":4391,"column":36}}},"207":{"name":"(anonymous_207)","line":4405,"loc":{"start":{"line":4405,"column":12},"end":{"line":4405,"column":31}}},"208":{"name":"(anonymous_208)","line":4407,"loc":{"start":{"line":4407,"column":40},"end":{"line":4407,"column":73}}},"209":{"name":"(anonymous_209)","line":4436,"loc":{"start":{"line":4436,"column":12},"end":{"line":4436,"column":31}}},"210":{"name":"(anonymous_210)","line":4438,"loc":{"start":{"line":4438,"column":42},"end":{"line":4438,"column":75}}},"211":{"name":"(anonymous_211)","line":4443,"loc":{"start":{"line":4443,"column":39},"end":{"line":4443,"column":61}}},"212":{"name":"(anonymous_212)","line":4472,"loc":{"start":{"line":4472,"column":12},"end":{"line":4472,"column":31}}},"213":{"name":"(anonymous_213)","line":4483,"loc":{"start":{"line":4483,"column":11},"end":{"line":4483,"column":25}}},"214":{"name":"(anonymous_214)","line":4497,"loc":{"start":{"line":4497,"column":5},"end":{"line":4497,"column":19}}},"215":{"name":"(anonymous_215)","line":4505,"loc":{"start":{"line":4505,"column":42},"end":{"line":4505,"column":73}}},"216":{"name":"(anonymous_216)","line":4517,"loc":{"start":{"line":4517,"column":22},"end":{"line":4517,"column":52}}},"217":{"name":"(anonymous_217)","line":4521,"loc":{"start":{"line":4521,"column":23},"end":{"line":4521,"column":58}}},"218":{"name":"(anonymous_218)","line":4534,"loc":{"start":{"line":4534,"column":41},"end":{"line":4534,"column":61}}},"219":{"name":"(anonymous_219)","line":4549,"loc":{"start":{"line":4549,"column":5},"end":{"line":4549,"column":19}}},"220":{"name":"(anonymous_220)","line":4555,"loc":{"start":{"line":4555,"column":39},"end":{"line":4555,"column":58}}},"221":{"name":"(anonymous_221)","line":4571,"loc":{"start":{"line":4571,"column":17},"end":{"line":4571,"column":28}}},"222":{"name":"(anonymous_222)","line":4573,"loc":{"start":{"line":4573,"column":16},"end":{"line":4573,"column":34}}},"223":{"name":"(anonymous_223)","line":4580,"loc":{"start":{"line":4580,"column":49},"end":{"line":4580,"column":78}}},"224":{"name":"(anonymous_224)","line":4594,"loc":{"start":{"line":4594,"column":42},"end":{"line":4594,"column":57}}},"225":{"name":"(anonymous_225)","line":4599,"loc":{"start":{"line":4599,"column":42},"end":{"line":4599,"column":73}}},"226":{"name":"(anonymous_226)","line":4611,"loc":{"start":{"line":4611,"column":22},"end":{"line":4611,"column":52}}},"227":{"name":"(anonymous_227)","line":4636,"loc":{"start":{"line":4636,"column":39},"end":{"line":4636,"column":59}}},"228":{"name":"(anonymous_228)","line":4644,"loc":{"start":{"line":4644,"column":5},"end":{"line":4644,"column":19}}},"229":{"name":"_createNodeMap","line":4664,"loc":{"start":{"line":4664,"column":0},"end":{"line":4664,"column":66}}},"230":{"name":"_mergeNodeMaps","line":4827,"loc":{"start":{"line":4827,"column":0},"end":{"line":4827,"column":32}}},"231":{"name":"_frame","line":4868,"loc":{"start":{"line":4868,"column":0},"end":{"line":4868,"column":58}}},"232":{"name":"_createImplicitFrame","line":5034,"loc":{"start":{"line":5034,"column":0},"end":{"line":5034,"column":37}}},"233":{"name":"_createsCircularReference","line":5053,"loc":{"start":{"line":5053,"column":0},"end":{"line":5053,"column":65}}},"234":{"name":"_getFrameFlag","line":5071,"loc":{"start":{"line":5071,"column":0},"end":{"line":5071,"column":45}}},"235":{"name":"_validateFrame","line":5095,"loc":{"start":{"line":5095,"column":0},"end":{"line":5095,"column":31}}},"236":{"name":"_filterSubjects","line":5113,"loc":{"start":{"line":5113,"column":0},"end":{"line":5113,"column":56}}},"237":{"name":"_filterSubject","line":5135,"loc":{"start":{"line":5135,"column":0},"end":{"line":5135,"column":47}}},"238":{"name":"_removeEmbed","line":5200,"loc":{"start":{"line":5200,"column":0},"end":{"line":5200,"column":33}}},"239":{"name":"(anonymous_239)","line":5227,"loc":{"start":{"line":5227,"column":25},"end":{"line":5227,"column":38}}},"240":{"name":"_addFrameOutput","line":5249,"loc":{"start":{"line":5249,"column":0},"end":{"line":5249,"column":51}}},"241":{"name":"_removePreserve","line":5266,"loc":{"start":{"line":5266,"column":0},"end":{"line":5266,"column":46}}},"242":{"name":"_compareShortestLeast","line":5339,"loc":{"start":{"line":5339,"column":0},"end":{"line":5339,"column":37}}},"243":{"name":"_selectTerm","line":5364,"loc":{"start":{"line":5364,"column":0},"end":{"line":5365,"column":74}}},"244":{"name":"_compactIri","line":5433,"loc":{"start":{"line":5433,"column":0},"end":{"line":5433,"column":65}}},"245":{"name":"_compactValue","line":5626,"loc":{"start":{"line":5626,"column":0},"end":{"line":5626,"column":57}}},"246":{"name":"_createTermDefinition","line":5711,"loc":{"start":{"line":5711,"column":0},"end":{"line":5711,"column":67}}},"247":{"name":"_expandIri","line":5956,"loc":{"start":{"line":5956,"column":0},"end":{"line":5956,"column":69}}},"248":{"name":"_prependBase","line":6026,"loc":{"start":{"line":6026,"column":0},"end":{"line":6026,"column":33}}},"249":{"name":"_removeBase","line":6118,"loc":{"start":{"line":6118,"column":0},"end":{"line":6118,"column":32}}},"250":{"name":"_getInitialContext","line":6196,"loc":{"start":{"line":6196,"column":0},"end":{"line":6196,"column":37}}},"251":{"name":"_createInverseContext","line":6212,"loc":{"start":{"line":6212,"column":2},"end":{"line":6212,"column":35}}},"252":{"name":"_buildIriMap","line":6318,"loc":{"start":{"line":6318,"column":2},"end":{"line":6318,"column":42}}},"253":{"name":"_addPreferredTerm","line":6354,"loc":{"start":{"line":6354,"column":2},"end":{"line":6354,"column":72}}},"254":{"name":"_cloneActiveContext","line":6365,"loc":{"start":{"line":6365,"column":2},"end":{"line":6365,"column":33}}},"255":{"name":"_isKeyword","line":6389,"loc":{"start":{"line":6389,"column":0},"end":{"line":6389,"column":23}}},"256":{"name":"_isObject","line":6425,"loc":{"start":{"line":6425,"column":0},"end":{"line":6425,"column":22}}},"257":{"name":"_isEmptyObject","line":6436,"loc":{"start":{"line":6436,"column":0},"end":{"line":6436,"column":27}}},"258":{"name":"_isArray","line":6447,"loc":{"start":{"line":6447,"column":0},"end":{"line":6447,"column":21}}},"259":{"name":"_validateTypeValue","line":6456,"loc":{"start":{"line":6456,"column":0},"end":{"line":6456,"column":31}}},"260":{"name":"_isString","line":6490,"loc":{"start":{"line":6490,"column":0},"end":{"line":6490,"column":22}}},"261":{"name":"_isNumber","line":6502,"loc":{"start":{"line":6502,"column":0},"end":{"line":6502,"column":22}}},"262":{"name":"_isDouble","line":6514,"loc":{"start":{"line":6514,"column":0},"end":{"line":6514,"column":22}}},"263":{"name":"_isNumeric","line":6525,"loc":{"start":{"line":6525,"column":0},"end":{"line":6525,"column":23}}},"264":{"name":"_isBoolean","line":6536,"loc":{"start":{"line":6536,"column":0},"end":{"line":6536,"column":23}}},"265":{"name":"_isUndefined","line":6548,"loc":{"start":{"line":6548,"column":0},"end":{"line":6548,"column":25}}},"266":{"name":"_isSubject","line":6559,"loc":{"start":{"line":6559,"column":0},"end":{"line":6559,"column":23}}},"267":{"name":"_isSubjectReference","line":6580,"loc":{"start":{"line":6580,"column":0},"end":{"line":6580,"column":32}}},"268":{"name":"_isValue","line":6594,"loc":{"start":{"line":6594,"column":0},"end":{"line":6594,"column":21}}},"269":{"name":"_isList","line":6608,"loc":{"start":{"line":6608,"column":0},"end":{"line":6608,"column":20}}},"270":{"name":"_isBlankNode","line":6622,"loc":{"start":{"line":6622,"column":0},"end":{"line":6622,"column":25}}},"271":{"name":"_isAbsoluteIri","line":6646,"loc":{"start":{"line":6646,"column":0},"end":{"line":6646,"column":27}}},"272":{"name":"_clone","line":6658,"loc":{"start":{"line":6658,"column":0},"end":{"line":6658,"column":23}}},"273":{"name":"_findContextUrls","line":6690,"loc":{"start":{"line":6690,"column":0},"end":{"line":6690,"column":54}}},"274":{"name":"_retrieveContextUrls","line":6758,"loc":{"start":{"line":6758,"column":0},"end":{"line":6758,"column":56}}},"275":{"name":"(anonymous_275)","line":6764,"loc":{"start":{"line":6764,"column":17},"end":{"line":6764,"column":73}}},"276":{"name":"(anonymous_276)","line":6777,"loc":{"start":{"line":6777,"column":19},"end":{"line":6777,"column":30}}},"277":{"name":"(anonymous_277)","line":6800,"loc":{"start":{"line":6800,"column":7},"end":{"line":6800,"column":21}}},"278":{"name":"(anonymous_278)","line":6811,"loc":{"start":{"line":6811,"column":19},"end":{"line":6811,"column":44}}},"279":{"name":"(anonymous_279)","line":6867,"loc":{"start":{"line":6867,"column":54},"end":{"line":6867,"column":73}}},"280":{"name":"(anonymous_280)","line":6890,"loc":{"start":{"line":6890,"column":16},"end":{"line":6890,"column":28}}},"281":{"name":"_parseNQuads","line":6911,"loc":{"start":{"line":6911,"column":0},"end":{"line":6911,"column":29}}},"282":{"name":"_toNQuads","line":7034,"loc":{"start":{"line":7034,"column":0},"end":{"line":7034,"column":28}}},"283":{"name":"_toNQuad","line":7061,"loc":{"start":{"line":7061,"column":0},"end":{"line":7061,"column":37}}},"284":{"name":"_parseRdfaApiData","line":7130,"loc":{"start":{"line":7130,"column":0},"end":{"line":7130,"column":33}}},"285":{"name":"IdentifierIssuer","line":7232,"loc":{"start":{"line":7232,"column":0},"end":{"line":7232,"column":34}}},"286":{"name":"(anonymous_286)","line":7246,"loc":{"start":{"line":7246,"column":35},"end":{"line":7246,"column":46}}},"287":{"name":"(anonymous_287)","line":7261,"loc":{"start":{"line":7261,"column":35},"end":{"line":7261,"column":49}}},"288":{"name":"(anonymous_288)","line":7290,"loc":{"start":{"line":7290,"column":35},"end":{"line":7290,"column":49}}},"289":{"name":"(anonymous_289)","line":7302,"loc":{"start":{"line":7302,"column":17},"end":{"line":7302,"column":32}}},"290":{"name":"(anonymous_290)","line":7319,"loc":{"start":{"line":7319,"column":31},"end":{"line":7319,"column":42}}},"291":{"name":"(anonymous_291)","line":7329,"loc":{"start":{"line":7329,"column":28},"end":{"line":7329,"column":39}}},"292":{"name":"(anonymous_292)","line":7380,"loc":{"start":{"line":7380,"column":20},"end":{"line":7380,"column":40}}},"293":{"name":"(anonymous_293)","line":7390,"loc":{"start":{"line":7390,"column":27},"end":{"line":7390,"column":55}}},"294":{"name":"(anonymous_294)","line":7399,"loc":{"start":{"line":7399,"column":1},"end":{"line":7399,"column":19}}},"295":{"name":"(anonymous_295)","line":7404,"loc":{"start":{"line":7404,"column":24},"end":{"line":7404,"column":44}}},"296":{"name":"(anonymous_296)","line":7413,"loc":{"start":{"line":7413,"column":35},"end":{"line":7413,"column":49}}},"297":{"name":"(anonymous_297)","line":7416,"loc":{"start":{"line":7416,"column":35},"end":{"line":7416,"column":46}}},"298":{"name":"(anonymous_298)","line":7423,"loc":{"start":{"line":7423,"column":22},"end":{"line":7423,"column":42}}},"299":{"name":"(anonymous_299)","line":7432,"loc":{"start":{"line":7432,"column":33},"end":{"line":7432,"column":47}}},"300":{"name":"(anonymous_300)","line":7435,"loc":{"start":{"line":7435,"column":33},"end":{"line":7435,"column":44}}},"301":{"name":"(anonymous_301)","line":7446,"loc":{"start":{"line":7446,"column":20},"end":{"line":7446,"column":40}}},"302":{"name":"(anonymous_302)","line":7479,"loc":{"start":{"line":7479,"column":32},"end":{"line":7479,"column":43}}},"303":{"name":"(anonymous_303)","line":7507,"loc":{"start":{"line":7507,"column":33},"end":{"line":7507,"column":47}}},"304":{"name":"(anonymous_304)","line":7543,"loc":{"start":{"line":7543,"column":33},"end":{"line":7543,"column":44}}},"305":{"name":"(anonymous_305)","line":7610,"loc":{"start":{"line":7610,"column":27},"end":{"line":7610,"column":42}}},"306":{"name":"(anonymous_306)","line":7624,"loc":{"start":{"line":7624,"column":46},"end":{"line":7624,"column":58}}},"307":{"name":"(anonymous_307)","line":7638,"loc":{"start":{"line":7638,"column":46},"end":{"line":7638,"column":57}}},"308":{"name":"(anonymous_308)","line":7653,"loc":{"start":{"line":7653,"column":46},"end":{"line":7653,"column":62}}},"309":{"name":"(anonymous_309)","line":7662,"loc":{"start":{"line":7662,"column":43},"end":{"line":7662,"column":54}}},"310":{"name":"(anonymous_310)","line":7671,"loc":{"start":{"line":7671,"column":44},"end":{"line":7671,"column":55}}},"311":{"name":"(anonymous_311)","line":7678,"loc":{"start":{"line":7678,"column":45},"end":{"line":7678,"column":56}}},"312":{"name":"(anonymous_312)","line":7688,"loc":{"start":{"line":7688,"column":43},"end":{"line":7688,"column":54}}},"313":{"name":"(anonymous_313)","line":7707,"loc":{"start":{"line":7707,"column":17},"end":{"line":7707,"column":28}}},"314":{"name":"(anonymous_314)","line":7714,"loc":{"start":{"line":7714,"column":33},"end":{"line":7714,"column":44}}},"315":{"name":"(anonymous_315)","line":7721,"loc":{"start":{"line":7721,"column":46},"end":{"line":7722,"column":29}}},"316":{"name":"(anonymous_316)","line":7727,"loc":{"start":{"line":7727,"column":34},"end":{"line":7727,"column":53}}},"317":{"name":"(anonymous_317)","line":7833,"loc":{"start":{"line":7833,"column":20},"end":{"line":7833,"column":31}}},"318":{"name":"(anonymous_318)","line":7841,"loc":{"start":{"line":7841,"column":15},"end":{"line":7841,"column":26}}},"319":{"name":"(anonymous_319)","line":7850,"loc":{"start":{"line":7850,"column":16},"end":{"line":7850,"column":33}}},"320":{"name":"(anonymous_320)","line":7868,"loc":{"start":{"line":7868,"column":19},"end":{"line":7868,"column":30}}},"321":{"name":"(anonymous_321)","line":7875,"loc":{"start":{"line":7875,"column":35},"end":{"line":7875,"column":46}}},"322":{"name":"(anonymous_322)","line":7882,"loc":{"start":{"line":7882,"column":48},"end":{"line":7883,"column":29}}},"323":{"name":"(anonymous_323)","line":7888,"loc":{"start":{"line":7888,"column":36},"end":{"line":7888,"column":55}}},"324":{"name":"(anonymous_324)","line":7972,"loc":{"start":{"line":7972,"column":22},"end":{"line":7972,"column":33}}},"325":{"name":"(anonymous_325)","line":7983,"loc":{"start":{"line":7983,"column":15},"end":{"line":7983,"column":26}}},"326":{"name":"(anonymous_326)","line":7995,"loc":{"start":{"line":7995,"column":16},"end":{"line":7995,"column":33}}},"327":{"name":"(anonymous_327)","line":8008,"loc":{"start":{"line":8008,"column":15},"end":{"line":8008,"column":26}}},"328":{"name":"(anonymous_328)","line":8036,"loc":{"start":{"line":8036,"column":27},"end":{"line":8036,"column":38}}},"329":{"name":"(anonymous_329)","line":8059,"loc":{"start":{"line":8059,"column":19},"end":{"line":8059,"column":41}}},"330":{"name":"_removeDotSegments","line":8077,"loc":{"start":{"line":8077,"column":0},"end":{"line":8077,"column":48}}},"331":{"name":"(anonymous_331)","line":8118,"loc":{"start":{"line":8118,"column":15},"end":{"line":8118,"column":35}}},"332":{"name":"(anonymous_332)","line":8145,"loc":{"start":{"line":8145,"column":14},"end":{"line":8145,"column":25}}},"333":{"name":"(anonymous_333)","line":8146,"loc":{"start":{"line":8146,"column":17},"end":{"line":8146,"column":28}}},"334":{"name":"(anonymous_334)","line":8153,"loc":{"start":{"line":8153,"column":13},"end":{"line":8153,"column":24}}}},"statementMap":{"1":{"start":{"line":36,"column":0},"end":{"line":8180,"column":5}},"2":{"start":{"line":39,"column":0},"end":{"line":40,"column":79}},"3":{"start":{"line":41,"column":0},"end":{"line":42,"column":65}},"4":{"start":{"line":43,"column":0},"end":{"line":53,"column":1}},"5":{"start":{"line":44,"column":2},"end":{"line":52,"column":3}},"6":{"start":{"line":45,"column":4},"end":{"line":51,"column":5}},"7":{"start":{"line":46,"column":6},"end":{"line":46,"column":22}},"8":{"start":{"line":47,"column":11},"end":{"line":51,"column":5}},"9":{"start":{"line":48,"column":6},"end":{"line":48,"column":20}},"10":{"start":{"line":49,"column":11},"end":{"line":51,"column":5}},"11":{"start":{"line":50,"column":6},"end":{"line":50,"column":17}},"12":{"start":{"line":56,"column":0},"end":{"line":8140,"column":2}},"13":{"start":{"line":76,"column":0},"end":{"line":233,"column":2}},"14":{"start":{"line":77,"column":2},"end":{"line":81,"column":3}},"15":{"start":{"line":78,"column":4},"end":{"line":80,"column":7}},"16":{"start":{"line":79,"column":6},"end":{"line":79,"column":71}},"17":{"start":{"line":84,"column":2},"end":{"line":87,"column":3}},"18":{"start":{"line":85,"column":4},"end":{"line":85,"column":23}},"19":{"start":{"line":86,"column":4},"end":{"line":86,"column":17}},"20":{"start":{"line":88,"column":2},"end":{"line":88,"column":26}},"21":{"start":{"line":90,"column":2},"end":{"line":96,"column":3}},"22":{"start":{"line":91,"column":4},"end":{"line":95,"column":7}},"23":{"start":{"line":92,"column":6},"end":{"line":94,"column":65}},"24":{"start":{"line":99,"column":2},"end":{"line":103,"column":3}},"25":{"start":{"line":100,"column":4},"end":{"line":102,"column":7}},"26":{"start":{"line":101,"column":6},"end":{"line":101,"column":27}},"27":{"start":{"line":106,"column":2},"end":{"line":108,"column":3}},"28":{"start":{"line":107,"column":4},"end":{"line":107,"column":60}},"29":{"start":{"line":109,"column":2},"end":{"line":111,"column":3}},"30":{"start":{"line":110,"column":4},"end":{"line":110,"column":33}},"31":{"start":{"line":112,"column":2},"end":{"line":114,"column":3}},"32":{"start":{"line":113,"column":4},"end":{"line":113,"column":26}},"33":{"start":{"line":115,"column":2},"end":{"line":117,"column":3}},"34":{"start":{"line":116,"column":4},"end":{"line":116,"column":34}},"35":{"start":{"line":118,"column":2},"end":{"line":120,"column":3}},"36":{"start":{"line":119,"column":4},"end":{"line":119,"column":49}},"37":{"start":{"line":121,"column":2},"end":{"line":123,"column":3}},"38":{"start":{"line":122,"column":4},"end":{"line":122,"column":25}},"39":{"start":{"line":124,"column":2},"end":{"line":128,"column":3}},"40":{"start":{"line":127,"column":4},"end":{"line":127,"column":33}},"41":{"start":{"line":130,"column":2},"end":{"line":137,"column":4}},"42":{"start":{"line":131,"column":4},"end":{"line":135,"column":5}},"43":{"start":{"line":132,"column":6},"end":{"line":134,"column":9}},"44":{"start":{"line":133,"column":8},"end":{"line":133,"column":30}},"45":{"start":{"line":136,"column":4},"end":{"line":136,"column":44}},"46":{"start":{"line":140,"column":2},"end":{"line":166,"column":5}},"47":{"start":{"line":141,"column":4},"end":{"line":145,"column":5}},"48":{"start":{"line":142,"column":6},"end":{"line":144,"column":46}},"49":{"start":{"line":148,"column":4},"end":{"line":148,"column":48}},"50":{"start":{"line":149,"column":4},"end":{"line":165,"column":7}},"51":{"start":{"line":150,"column":6},"end":{"line":154,"column":7}},"52":{"start":{"line":151,"column":8},"end":{"line":153,"column":48}},"53":{"start":{"line":156,"column":6},"end":{"line":156,"column":20}},"54":{"start":{"line":157,"column":6},"end":{"line":162,"column":7}},"55":{"start":{"line":159,"column":8},"end":{"line":159,"column":80}},"56":{"start":{"line":161,"column":8},"end":{"line":161,"column":28}},"57":{"start":{"line":164,"column":6},"end":{"line":164,"column":51}},"58":{"start":{"line":169,"column":2},"end":{"line":232,"column":3}},"59":{"start":{"line":170,"column":4},"end":{"line":172,"column":5}},"60":{"start":{"line":171,"column":6},"end":{"line":171,"column":27}},"61":{"start":{"line":174,"column":4},"end":{"line":185,"column":5}},"62":{"start":{"line":175,"column":6},"end":{"line":181,"column":7}},"63":{"start":{"line":177,"column":8},"end":{"line":177,"column":33}},"64":{"start":{"line":178,"column":13},"end":{"line":181,"column":7}},"65":{"start":{"line":180,"column":8},"end":{"line":180,"column":23}},"66":{"start":{"line":182,"column":11},"end":{"line":185,"column":5}},"67":{"start":{"line":184,"column":6},"end":{"line":184,"column":30}},"68":{"start":{"line":188,"column":4},"end":{"line":190,"column":5}},"69":{"start":{"line":189,"column":6},"end":{"line":189,"column":28}},"70":{"start":{"line":193,"column":4},"end":{"line":193,"column":22}},"71":{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},"72":{"start":{"line":195,"column":6},"end":{"line":195,"column":18}},"73":{"start":{"line":198,"column":4},"end":{"line":198,"column":18}},"74":{"start":{"line":199,"column":4},"end":{"line":199,"column":13}},"75":{"start":{"line":200,"column":4},"end":{"line":204,"column":5}},"76":{"start":{"line":201,"column":6},"end":{"line":203,"column":7}},"77":{"start":{"line":202,"column":8},"end":{"line":202,"column":25}},"78":{"start":{"line":207,"column":4},"end":{"line":207,"column":38}},"79":{"start":{"line":208,"column":4},"end":{"line":210,"column":5}},"80":{"start":{"line":209,"column":6},"end":{"line":209,"column":19}},"81":{"start":{"line":213,"column":4},"end":{"line":229,"column":5}},"82":{"start":{"line":215,"column":6},"end":{"line":215,"column":53}},"83":{"start":{"line":216,"column":6},"end":{"line":216,"column":28}},"84":{"start":{"line":217,"column":6},"end":{"line":217,"column":21}},"85":{"start":{"line":218,"column":6},"end":{"line":220,"column":7}},"86":{"start":{"line":219,"column":8},"end":{"line":219,"column":36}},"87":{"start":{"line":221,"column":6},"end":{"line":221,"column":33}},"88":{"start":{"line":222,"column":11},"end":{"line":229,"column":5}},"89":{"start":{"line":224,"column":6},"end":{"line":224,"column":28}},"90":{"start":{"line":225,"column":6},"end":{"line":225,"column":36}},"91":{"start":{"line":226,"column":6},"end":{"line":228,"column":7}},"92":{"start":{"line":227,"column":8},"end":{"line":227,"column":36}},"93":{"start":{"line":231,"column":4},"end":{"line":231,"column":41}},"94":{"start":{"line":247,"column":0},"end":{"line":370,"column":2}},"95":{"start":{"line":248,"column":2},"end":{"line":252,"column":3}},"96":{"start":{"line":249,"column":4},"end":{"line":251,"column":7}},"97":{"start":{"line":250,"column":6},"end":{"line":250,"column":70}},"98":{"start":{"line":255,"column":2},"end":{"line":258,"column":3}},"99":{"start":{"line":256,"column":4},"end":{"line":256,"column":23}},"100":{"start":{"line":257,"column":4},"end":{"line":257,"column":17}},"101":{"start":{"line":259,"column":2},"end":{"line":259,"column":26}},"102":{"start":{"line":262,"column":2},"end":{"line":264,"column":3}},"103":{"start":{"line":263,"column":4},"end":{"line":263,"column":49}},"104":{"start":{"line":265,"column":2},"end":{"line":267,"column":3}},"105":{"start":{"line":266,"column":4},"end":{"line":266,"column":42}},"106":{"start":{"line":269,"column":2},"end":{"line":304,"column":5}},"107":{"start":{"line":271,"column":4},"end":{"line":301,"column":5}},"108":{"start":{"line":272,"column":6},"end":{"line":295,"column":8}},"109":{"start":{"line":273,"column":8},"end":{"line":275,"column":9}},"110":{"start":{"line":274,"column":10},"end":{"line":274,"column":31}},"111":{"start":{"line":276,"column":8},"end":{"line":293,"column":9}},"112":{"start":{"line":277,"column":10},"end":{"line":281,"column":11}},"113":{"start":{"line":278,"column":12},"end":{"line":280,"column":43}},"114":{"start":{"line":282,"column":10},"end":{"line":284,"column":11}},"115":{"start":{"line":283,"column":12},"end":{"line":283,"column":64}},"116":{"start":{"line":286,"column":10},"end":{"line":292,"column":14}},"117":{"start":{"line":294,"column":8},"end":{"line":294,"column":26}},"118":{"start":{"line":296,"column":6},"end":{"line":296,"column":56}},"119":{"start":{"line":297,"column":6},"end":{"line":299,"column":7}},"120":{"start":{"line":298,"column":8},"end":{"line":298,"column":50}},"121":{"start":{"line":300,"column":6},"end":{"line":300,"column":13}},"122":{"start":{"line":303,"column":4},"end":{"line":303,"column":67}},"123":{"start":{"line":306,"column":2},"end":{"line":369,"column":3}},"124":{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},"125":{"start":{"line":309,"column":6},"end":{"line":309,"column":49}},"126":{"start":{"line":312,"column":4},"end":{"line":315,"column":6}},"127":{"start":{"line":316,"column":4},"end":{"line":323,"column":5}},"128":{"start":{"line":317,"column":6},"end":{"line":317,"column":56}},"129":{"start":{"line":318,"column":6},"end":{"line":322,"column":7}},"130":{"start":{"line":319,"column":8},"end":{"line":319,"column":44}},"131":{"start":{"line":321,"column":8},"end":{"line":321,"column":58}},"132":{"start":{"line":324,"column":4},"end":{"line":368,"column":7}},"133":{"start":{"line":325,"column":6},"end":{"line":327,"column":7}},"134":{"start":{"line":326,"column":8},"end":{"line":326,"column":29}},"135":{"start":{"line":329,"column":6},"end":{"line":329,"column":19}},"136":{"start":{"line":330,"column":6},"end":{"line":366,"column":7}},"137":{"start":{"line":331,"column":8},"end":{"line":331,"column":40}},"138":{"start":{"line":332,"column":8},"end":{"line":332,"column":52}},"139":{"start":{"line":333,"column":8},"end":{"line":333,"column":38}},"140":{"start":{"line":334,"column":8},"end":{"line":334,"column":60}},"141":{"start":{"line":337,"column":8},"end":{"line":340,"column":9}},"142":{"start":{"line":338,"column":10},"end":{"line":339,"column":65}},"143":{"start":{"line":343,"column":8},"end":{"line":346,"column":9}},"144":{"start":{"line":344,"column":10},"end":{"line":345,"column":47}},"145":{"start":{"line":349,"column":8},"end":{"line":350,"column":53}},"146":{"start":{"line":353,"column":8},"end":{"line":358,"column":9}},"147":{"start":{"line":355,"column":10},"end":{"line":355,"column":40}},"148":{"start":{"line":356,"column":15},"end":{"line":358,"column":9}},"149":{"start":{"line":357,"column":10},"end":{"line":357,"column":24}},"150":{"start":{"line":361,"column":8},"end":{"line":363,"column":9}},"151":{"start":{"line":362,"column":10},"end":{"line":362,"column":32}},"152":{"start":{"line":365,"column":8},"end":{"line":365,"column":28}},"153":{"start":{"line":367,"column":6},"end":{"line":367,"column":31}},"154":{"start":{"line":383,"column":0},"end":{"line":441,"column":2}},"155":{"start":{"line":384,"column":2},"end":{"line":388,"column":3}},"156":{"start":{"line":385,"column":4},"end":{"line":387,"column":7}},"157":{"start":{"line":386,"column":6},"end":{"line":386,"column":71}},"158":{"start":{"line":391,"column":2},"end":{"line":398,"column":3}},"159":{"start":{"line":392,"column":4},"end":{"line":392,"column":23}},"160":{"start":{"line":393,"column":4},"end":{"line":393,"column":17}},"161":{"start":{"line":394,"column":9},"end":{"line":398,"column":3}},"162":{"start":{"line":395,"column":4},"end":{"line":395,"column":19}},"163":{"start":{"line":396,"column":4},"end":{"line":396,"column":15}},"164":{"start":{"line":397,"column":4},"end":{"line":397,"column":17}},"165":{"start":{"line":399,"column":2},"end":{"line":399,"column":26}},"166":{"start":{"line":402,"column":2},"end":{"line":404,"column":3}},"167":{"start":{"line":403,"column":4},"end":{"line":403,"column":60}},"168":{"start":{"line":405,"column":2},"end":{"line":407,"column":3}},"169":{"start":{"line":406,"column":4},"end":{"line":406,"column":49}},"170":{"start":{"line":410,"column":2},"end":{"line":440,"column":5}},"171":{"start":{"line":411,"column":4},"end":{"line":415,"column":5}},"172":{"start":{"line":412,"column":6},"end":{"line":414,"column":46}},"173":{"start":{"line":417,"column":4},"end":{"line":417,"column":18}},"174":{"start":{"line":418,"column":4},"end":{"line":423,"column":5}},"175":{"start":{"line":420,"column":6},"end":{"line":420,"column":50}},"176":{"start":{"line":422,"column":6},"end":{"line":422,"column":26}},"177":{"start":{"line":425,"column":4},"end":{"line":427,"column":5}},"178":{"start":{"line":426,"column":6},"end":{"line":426,"column":39}},"179":{"start":{"line":430,"column":4},"end":{"line":430,"column":25}},"180":{"start":{"line":431,"column":4},"end":{"line":431,"column":33}},"181":{"start":{"line":432,"column":4},"end":{"line":439,"column":7}},"182":{"start":{"line":433,"column":6},"end":{"line":437,"column":7}},"183":{"start":{"line":434,"column":8},"end":{"line":436,"column":48}},"184":{"start":{"line":438,"column":6},"end":{"line":438,"column":32}},"185":{"start":{"line":459,"column":0},"end":{"line":596,"column":2}},"186":{"start":{"line":460,"column":2},"end":{"line":464,"column":3}},"187":{"start":{"line":461,"column":4},"end":{"line":463,"column":7}},"188":{"start":{"line":462,"column":6},"end":{"line":462,"column":69}},"189":{"start":{"line":467,"column":2},"end":{"line":470,"column":3}},"190":{"start":{"line":468,"column":4},"end":{"line":468,"column":23}},"191":{"start":{"line":469,"column":4},"end":{"line":469,"column":17}},"192":{"start":{"line":471,"column":2},"end":{"line":471,"column":26}},"193":{"start":{"line":474,"column":2},"end":{"line":476,"column":3}},"194":{"start":{"line":475,"column":4},"end":{"line":475,"column":60}},"195":{"start":{"line":477,"column":2},"end":{"line":479,"column":3}},"196":{"start":{"line":478,"column":4},"end":{"line":478,"column":49}},"197":{"start":{"line":480,"column":2},"end":{"line":482,"column":3}},"198":{"start":{"line":481,"column":4},"end":{"line":481,"column":28}},"199":{"start":{"line":483,"column":2},"end":{"line":483,"column":47}},"200":{"start":{"line":484,"column":2},"end":{"line":486,"column":3}},"201":{"start":{"line":485,"column":4},"end":{"line":485,"column":30}},"202":{"start":{"line":487,"column":2},"end":{"line":487,"column":53}},"203":{"start":{"line":489,"column":2},"end":{"line":524,"column":5}},"204":{"start":{"line":491,"column":4},"end":{"line":521,"column":5}},"205":{"start":{"line":492,"column":6},"end":{"line":515,"column":8}},"206":{"start":{"line":493,"column":8},"end":{"line":495,"column":9}},"207":{"start":{"line":494,"column":10},"end":{"line":494,"column":31}},"208":{"start":{"line":496,"column":8},"end":{"line":513,"column":9}},"209":{"start":{"line":497,"column":10},"end":{"line":501,"column":11}},"210":{"start":{"line":498,"column":12},"end":{"line":500,"column":43}},"211":{"start":{"line":502,"column":10},"end":{"line":504,"column":11}},"212":{"start":{"line":503,"column":12},"end":{"line":503,"column":64}},"213":{"start":{"line":506,"column":10},"end":{"line":512,"column":14}},"214":{"start":{"line":514,"column":8},"end":{"line":514,"column":27}},"215":{"start":{"line":516,"column":6},"end":{"line":516,"column":56}},"216":{"start":{"line":517,"column":6},"end":{"line":519,"column":7}},"217":{"start":{"line":518,"column":8},"end":{"line":518,"column":50}},"218":{"start":{"line":520,"column":6},"end":{"line":520,"column":13}},"219":{"start":{"line":523,"column":4},"end":{"line":523,"column":68}},"220":{"start":{"line":526,"column":2},"end":{"line":595,"column":3}},"221":{"start":{"line":528,"column":4},"end":{"line":528,"column":37}},"222":{"start":{"line":529,"column":4},"end":{"line":529,"column":12}},"223":{"start":{"line":530,"column":4},"end":{"line":546,"column":5}},"224":{"start":{"line":531,"column":6},"end":{"line":531,"column":30}},"225":{"start":{"line":532,"column":6},"end":{"line":543,"column":7}},"226":{"start":{"line":533,"column":8},"end":{"line":539,"column":9}},"227":{"start":{"line":534,"column":10},"end":{"line":534,"column":39}},"228":{"start":{"line":535,"column":15},"end":{"line":539,"column":9}},"229":{"start":{"line":536,"column":10},"end":{"line":536,"column":43}},"230":{"start":{"line":538,"column":10},"end":{"line":538,"column":46}},"231":{"start":{"line":540,"column":8},"end":{"line":540,"column":32}},"232":{"start":{"line":542,"column":8},"end":{"line":542,"column":24}},"233":{"start":{"line":545,"column":6},"end":{"line":545,"column":15}},"234":{"start":{"line":549,"column":4},"end":{"line":594,"column":7}},"235":{"start":{"line":550,"column":6},"end":{"line":554,"column":7}},"236":{"start":{"line":551,"column":8},"end":{"line":553,"column":46}},"237":{"start":{"line":557,"column":6},"end":{"line":557,"column":33}},"238":{"start":{"line":558,"column":6},"end":{"line":558,"column":26}},"239":{"start":{"line":559,"column":6},"end":{"line":559,"column":40}},"240":{"start":{"line":560,"column":6},"end":{"line":593,"column":9}},"241":{"start":{"line":561,"column":8},"end":{"line":565,"column":9}},"242":{"start":{"line":562,"column":10},"end":{"line":564,"column":48}},"243":{"start":{"line":567,"column":8},"end":{"line":567,"column":19}},"244":{"start":{"line":568,"column":8},"end":{"line":573,"column":9}},"245":{"start":{"line":570,"column":10},"end":{"line":570,"column":72}},"246":{"start":{"line":572,"column":10},"end":{"line":572,"column":30}},"247":{"start":{"line":577,"column":8},"end":{"line":577,"column":26}},"248":{"start":{"line":578,"column":8},"end":{"line":578,"column":34}},"249":{"start":{"line":579,"column":8},"end":{"line":579,"column":23}},"250":{"start":{"line":580,"column":8},"end":{"line":592,"column":11}},"251":{"start":{"line":581,"column":10},"end":{"line":585,"column":11}},"252":{"start":{"line":582,"column":12},"end":{"line":584,"column":50}},"253":{"start":{"line":587,"column":10},"end":{"line":587,"column":49}},"254":{"start":{"line":589,"column":10},"end":{"line":589,"column":25}},"255":{"start":{"line":590,"column":10},"end":{"line":590,"column":74}},"256":{"start":{"line":591,"column":10},"end":{"line":591,"column":36}},"257":{"start":{"line":611,"column":0},"end":{"line":620,"column":2}},"258":{"start":{"line":614,"column":2},"end":{"line":614,"column":17}},"259":{"start":{"line":615,"column":2},"end":{"line":617,"column":3}},"260":{"start":{"line":616,"column":4},"end":{"line":616,"column":28}},"261":{"start":{"line":618,"column":2},"end":{"line":618,"column":28}},"262":{"start":{"line":619,"column":2},"end":{"line":619,"column":48}},"263":{"start":{"line":635,"column":0},"end":{"line":744,"column":2}},"264":{"start":{"line":636,"column":2},"end":{"line":639,"column":3}},"265":{"start":{"line":637,"column":4},"end":{"line":637,"column":23}},"266":{"start":{"line":638,"column":4},"end":{"line":638,"column":17}},"267":{"start":{"line":640,"column":2},"end":{"line":640,"column":26}},"268":{"start":{"line":643,"column":2},"end":{"line":645,"column":3}},"269":{"start":{"line":644,"column":4},"end":{"line":644,"column":60}},"270":{"start":{"line":646,"column":2},"end":{"line":648,"column":3}},"271":{"start":{"line":647,"column":4},"end":{"line":647,"column":49}},"272":{"start":{"line":651,"column":2},"end":{"line":743,"column":5}},"273":{"start":{"line":652,"column":4},"end":{"line":656,"column":5}},"274":{"start":{"line":653,"column":6},"end":{"line":655,"column":43}},"275":{"start":{"line":658,"column":4},"end":{"line":658,"column":18}},"276":{"start":{"line":659,"column":4},"end":{"line":664,"column":5}},"277":{"start":{"line":661,"column":6},"end":{"line":661,"column":50}},"278":{"start":{"line":663,"column":6},"end":{"line":663,"column":26}},"279":{"start":{"line":667,"column":4},"end":{"line":667,"column":25}},"280":{"start":{"line":668,"column":4},"end":{"line":668,"column":33}},"281":{"start":{"line":669,"column":4},"end":{"line":742,"column":7}},"282":{"start":{"line":670,"column":6},"end":{"line":674,"column":7}},"283":{"start":{"line":671,"column":8},"end":{"line":673,"column":45}},"284":{"start":{"line":676,"column":6},"end":{"line":676,"column":45}},"285":{"start":{"line":677,"column":6},"end":{"line":677,"column":36}},"286":{"start":{"line":679,"column":6},"end":{"line":721,"column":8}},"287":{"start":{"line":681,"column":8},"end":{"line":683,"column":9}},"288":{"start":{"line":682,"column":10},"end":{"line":682,"column":17}},"289":{"start":{"line":686,"column":8},"end":{"line":691,"column":9}},"290":{"start":{"line":687,"column":10},"end":{"line":689,"column":11}},"291":{"start":{"line":688,"column":12},"end":{"line":688,"column":19}},"292":{"start":{"line":690,"column":10},"end":{"line":690,"column":49}},"293":{"start":{"line":694,"column":8},"end":{"line":720,"column":9}},"294":{"start":{"line":695,"column":10},"end":{"line":695,"column":31}},"295":{"start":{"line":696,"column":10},"end":{"line":696,"column":73}},"296":{"start":{"line":699,"column":10},"end":{"line":701,"column":11}},"297":{"start":{"line":700,"column":12},"end":{"line":700,"column":21}},"298":{"start":{"line":703,"column":10},"end":{"line":719,"column":11}},"299":{"start":{"line":704,"column":12},"end":{"line":704,"column":40}},"300":{"start":{"line":705,"column":12},"end":{"line":705,"column":25}},"301":{"start":{"line":706,"column":17},"end":{"line":719,"column":11}},"302":{"start":{"line":707,"column":12},"end":{"line":714,"column":13}},"303":{"start":{"line":708,"column":14},"end":{"line":712,"column":15}},"304":{"start":{"line":709,"column":16},"end":{"line":709,"column":37}},"305":{"start":{"line":710,"column":21},"end":{"line":712,"column":15}},"306":{"start":{"line":711,"column":16},"end":{"line":711,"column":44}},"307":{"start":{"line":713,"column":14},"end":{"line":713,"column":30}},"308":{"start":{"line":715,"column":17},"end":{"line":719,"column":11}},"309":{"start":{"line":716,"column":12},"end":{"line":716,"column":33}},"310":{"start":{"line":717,"column":12},"end":{"line":717,"column":40}},"311":{"start":{"line":718,"column":12},"end":{"line":718,"column":25}},"312":{"start":{"line":722,"column":6},"end":{"line":722,"column":27}},"313":{"start":{"line":723,"column":6},"end":{"line":723,"column":19}},"314":{"start":{"line":725,"column":6},"end":{"line":725,"column":29}},"315":{"start":{"line":726,"column":6},"end":{"line":740,"column":7}},"316":{"start":{"line":727,"column":8},"end":{"line":729,"column":9}},"317":{"start":{"line":728,"column":10},"end":{"line":728,"column":19}},"318":{"start":{"line":730,"column":8},"end":{"line":730,"column":36}},"319":{"start":{"line":731,"column":8},"end":{"line":733,"column":9}},"320":{"start":{"line":732,"column":10},"end":{"line":732,"column":26}},"321":{"start":{"line":734,"column":8},"end":{"line":739,"column":9}},"322":{"start":{"line":735,"column":10},"end":{"line":737,"column":11}},"323":{"start":{"line":736,"column":12},"end":{"line":736,"column":45}},"324":{"start":{"line":738,"column":10},"end":{"line":738,"column":51}},"325":{"start":{"line":741,"column":6},"end":{"line":741,"column":32}},"326":{"start":{"line":765,"column":0},"end":{"line":814,"column":2}},"327":{"start":{"line":766,"column":2},"end":{"line":770,"column":3}},"328":{"start":{"line":767,"column":4},"end":{"line":769,"column":7}},"329":{"start":{"line":768,"column":6},"end":{"line":768,"column":73}},"330":{"start":{"line":773,"column":2},"end":{"line":776,"column":3}},"331":{"start":{"line":774,"column":4},"end":{"line":774,"column":23}},"332":{"start":{"line":775,"column":4},"end":{"line":775,"column":17}},"333":{"start":{"line":777,"column":2},"end":{"line":777,"column":26}},"334":{"start":{"line":780,"column":2},"end":{"line":782,"column":3}},"335":{"start":{"line":781,"column":4},"end":{"line":781,"column":36}},"336":{"start":{"line":783,"column":2},"end":{"line":785,"column":3}},"337":{"start":{"line":784,"column":4},"end":{"line":784,"column":60}},"338":{"start":{"line":786,"column":2},"end":{"line":788,"column":3}},"339":{"start":{"line":787,"column":4},"end":{"line":787,"column":49}},"340":{"start":{"line":790,"column":2},"end":{"line":813,"column":3}},"341":{"start":{"line":791,"column":4},"end":{"line":795,"column":5}},"342":{"start":{"line":792,"column":6},"end":{"line":794,"column":34}},"343":{"start":{"line":796,"column":4},"end":{"line":796,"column":42}},"344":{"start":{"line":798,"column":4},"end":{"line":798,"column":62}},"345":{"start":{"line":801,"column":4},"end":{"line":801,"column":31}},"346":{"start":{"line":802,"column":4},"end":{"line":802,"column":23}},"347":{"start":{"line":803,"column":4},"end":{"line":803,"column":39}},"348":{"start":{"line":804,"column":4},"end":{"line":812,"column":7}},"349":{"start":{"line":805,"column":6},"end":{"line":809,"column":7}},"350":{"start":{"line":806,"column":8},"end":{"line":808,"column":50}},"351":{"start":{"line":811,"column":6},"end":{"line":811,"column":60}},"352":{"start":{"line":831,"column":0},"end":{"line":911,"column":2}},"353":{"start":{"line":832,"column":2},"end":{"line":836,"column":3}},"354":{"start":{"line":833,"column":4},"end":{"line":835,"column":7}},"355":{"start":{"line":834,"column":6},"end":{"line":834,"column":80}},"356":{"start":{"line":839,"column":2},"end":{"line":842,"column":3}},"357":{"start":{"line":840,"column":4},"end":{"line":840,"column":23}},"358":{"start":{"line":841,"column":4},"end":{"line":841,"column":17}},"359":{"start":{"line":843,"column":2},"end":{"line":843,"column":26}},"360":{"start":{"line":846,"column":2},"end":{"line":848,"column":3}},"361":{"start":{"line":847,"column":4},"end":{"line":847,"column":31}},"362":{"start":{"line":849,"column":2},"end":{"line":851,"column":3}},"363":{"start":{"line":850,"column":4},"end":{"line":850,"column":35}},"364":{"start":{"line":853,"column":2},"end":{"line":858,"column":3}},"365":{"start":{"line":855,"column":4},"end":{"line":857,"column":5}},"366":{"start":{"line":856,"column":6},"end":{"line":856,"column":44}},"367":{"start":{"line":860,"column":2},"end":{"line":910,"column":5}},"368":{"start":{"line":862,"column":4},"end":{"line":862,"column":18}},"369":{"start":{"line":863,"column":4},"end":{"line":876,"column":5}},"370":{"start":{"line":865,"column":6},"end":{"line":865,"column":67}},"371":{"start":{"line":866,"column":6},"end":{"line":870,"column":7}},"372":{"start":{"line":867,"column":8},"end":{"line":869,"column":61}},"373":{"start":{"line":873,"column":6},"end":{"line":875,"column":8}},"374":{"start":{"line":874,"column":8},"end":{"line":874,"column":23}},"375":{"start":{"line":878,"column":4},"end":{"line":878,"column":31}},"376":{"start":{"line":879,"column":4},"end":{"line":893,"column":5}},"377":{"start":{"line":881,"column":6},"end":{"line":887,"column":9}},"378":{"start":{"line":882,"column":8},"end":{"line":882,"column":30}},"379":{"start":{"line":883,"column":8},"end":{"line":885,"column":9}},"380":{"start":{"line":884,"column":10},"end":{"line":884,"column":31}},"381":{"start":{"line":886,"column":8},"end":{"line":886,"column":44}},"382":{"start":{"line":889,"column":6},"end":{"line":891,"column":7}},"383":{"start":{"line":890,"column":8},"end":{"line":890,"column":27}},"384":{"start":{"line":892,"column":6},"end":{"line":892,"column":14}},"385":{"start":{"line":895,"column":4},"end":{"line":904,"column":5}},"386":{"start":{"line":897,"column":6},"end":{"line":901,"column":7}},"387":{"start":{"line":898,"column":8},"end":{"line":900,"column":21}},"388":{"start":{"line":899,"column":10},"end":{"line":899,"column":46}},"389":{"start":{"line":903,"column":6},"end":{"line":903,"column":42}},"390":{"start":{"line":906,"column":4},"end":{"line":909,"column":5}},"391":{"start":{"line":908,"column":6},"end":{"line":908,"column":58}},"392":{"start":{"line":927,"column":0},"end":{"line":974,"column":2}},"393":{"start":{"line":928,"column":2},"end":{"line":932,"column":3}},"394":{"start":{"line":929,"column":4},"end":{"line":931,"column":7}},"395":{"start":{"line":930,"column":6},"end":{"line":930,"column":78}},"396":{"start":{"line":935,"column":2},"end":{"line":938,"column":3}},"397":{"start":{"line":936,"column":4},"end":{"line":936,"column":23}},"398":{"start":{"line":937,"column":4},"end":{"line":937,"column":17}},"399":{"start":{"line":939,"column":2},"end":{"line":939,"column":26}},"400":{"start":{"line":942,"column":2},"end":{"line":944,"column":3}},"401":{"start":{"line":943,"column":4},"end":{"line":943,"column":60}},"402":{"start":{"line":945,"column":2},"end":{"line":947,"column":3}},"403":{"start":{"line":946,"column":4},"end":{"line":946,"column":49}},"404":{"start":{"line":950,"column":2},"end":{"line":973,"column":5}},"405":{"start":{"line":951,"column":4},"end":{"line":955,"column":5}},"406":{"start":{"line":952,"column":6},"end":{"line":954,"column":42}},"407":{"start":{"line":957,"column":4},"end":{"line":957,"column":16}},"408":{"start":{"line":958,"column":4},"end":{"line":971,"column":5}},"409":{"start":{"line":960,"column":6},"end":{"line":960,"column":61}},"410":{"start":{"line":961,"column":6},"end":{"line":968,"column":7}},"411":{"start":{"line":962,"column":8},"end":{"line":964,"column":9}},"412":{"start":{"line":963,"column":10},"end":{"line":963,"column":52}},"413":{"start":{"line":965,"column":8},"end":{"line":967,"column":60}},"414":{"start":{"line":970,"column":6},"end":{"line":970,"column":26}},"415":{"start":{"line":972,"column":4},"end":{"line":972,"column":28}},"416":{"start":{"line":991,"column":0},"end":{"line":1030,"column":2}},"417":{"start":{"line":992,"column":2},"end":{"line":996,"column":3}},"418":{"start":{"line":993,"column":4},"end":{"line":995,"column":7}},"419":{"start":{"line":994,"column":6},"end":{"line":994,"column":79}},"420":{"start":{"line":999,"column":2},"end":{"line":1002,"column":3}},"421":{"start":{"line":1000,"column":4},"end":{"line":1000,"column":23}},"422":{"start":{"line":1001,"column":4},"end":{"line":1001,"column":17}},"423":{"start":{"line":1003,"column":2},"end":{"line":1003,"column":26}},"424":{"start":{"line":1006,"column":2},"end":{"line":1008,"column":3}},"425":{"start":{"line":1007,"column":4},"end":{"line":1007,"column":60}},"426":{"start":{"line":1009,"column":2},"end":{"line":1011,"column":3}},"427":{"start":{"line":1010,"column":4},"end":{"line":1010,"column":49}},"428":{"start":{"line":1014,"column":2},"end":{"line":1029,"column":5}},"429":{"start":{"line":1015,"column":4},"end":{"line":1019,"column":5}},"430":{"start":{"line":1016,"column":6},"end":{"line":1018,"column":52}},"431":{"start":{"line":1021,"column":4},"end":{"line":1021,"column":16}},"432":{"start":{"line":1022,"column":4},"end":{"line":1026,"column":5}},"433":{"start":{"line":1023,"column":6},"end":{"line":1023,"column":63}},"434":{"start":{"line":1025,"column":6},"end":{"line":1025,"column":26}},"435":{"start":{"line":1028,"column":4},"end":{"line":1028,"column":28}},"436":{"start":{"line":1052,"column":0},"end":{"line":1177,"column":2}},"437":{"start":{"line":1053,"column":2},"end":{"line":1057,"column":3}},"438":{"start":{"line":1054,"column":4},"end":{"line":1056,"column":7}},"439":{"start":{"line":1055,"column":6},"end":{"line":1055,"column":69}},"440":{"start":{"line":1058,"column":2},"end":{"line":1062,"column":3}},"441":{"start":{"line":1059,"column":4},"end":{"line":1061,"column":7}},"442":{"start":{"line":1060,"column":6},"end":{"line":1060,"column":75}},"443":{"start":{"line":1065,"column":2},"end":{"line":1072,"column":3}},"444":{"start":{"line":1066,"column":4},"end":{"line":1066,"column":23}},"445":{"start":{"line":1067,"column":4},"end":{"line":1067,"column":17}},"446":{"start":{"line":1068,"column":9},"end":{"line":1072,"column":3}},"447":{"start":{"line":1069,"column":4},"end":{"line":1069,"column":19}},"448":{"start":{"line":1070,"column":4},"end":{"line":1070,"column":15}},"449":{"start":{"line":1071,"column":4},"end":{"line":1071,"column":17}},"450":{"start":{"line":1073,"column":2},"end":{"line":1073,"column":26}},"451":{"start":{"line":1076,"column":2},"end":{"line":1076,"column":20}},"452":{"start":{"line":1077,"column":2},"end":{"line":1077,"column":19}},"453":{"start":{"line":1078,"column":2},"end":{"line":1078,"column":26}},"454":{"start":{"line":1079,"column":2},"end":{"line":1085,"column":3}},"455":{"start":{"line":1080,"column":4},"end":{"line":1080,"column":18}},"456":{"start":{"line":1081,"column":4},"end":{"line":1083,"column":5}},"457":{"start":{"line":1082,"column":6},"end":{"line":1082,"column":31}},"458":{"start":{"line":1084,"column":4},"end":{"line":1084,"column":49}},"459":{"start":{"line":1087,"column":2},"end":{"line":1101,"column":3}},"460":{"start":{"line":1088,"column":4},"end":{"line":1090,"column":5}},"461":{"start":{"line":1089,"column":6},"end":{"line":1089,"column":13}},"462":{"start":{"line":1091,"column":4},"end":{"line":1096,"column":5}},"463":{"start":{"line":1092,"column":6},"end":{"line":1092,"column":18}},"464":{"start":{"line":1093,"column":6},"end":{"line":1095,"column":46}},"465":{"start":{"line":1097,"column":4},"end":{"line":1097,"column":26}},"466":{"start":{"line":1098,"column":4},"end":{"line":1100,"column":5}},"467":{"start":{"line":1099,"column":6},"end":{"line":1099,"column":22}},"468":{"start":{"line":1103,"column":2},"end":{"line":1176,"column":3}},"469":{"start":{"line":1104,"column":4},"end":{"line":1104,"column":26}},"470":{"start":{"line":1105,"column":4},"end":{"line":1107,"column":5}},"471":{"start":{"line":1106,"column":6},"end":{"line":1106,"column":38}},"472":{"start":{"line":1109,"column":4},"end":{"line":1109,"column":80}},"473":{"start":{"line":1110,"column":4},"end":{"line":1110,"column":34}},"474":{"start":{"line":1112,"column":4},"end":{"line":1112,"column":21}},"475":{"start":{"line":1113,"column":4},"end":{"line":1148,"column":5}},"476":{"start":{"line":1114,"column":6},"end":{"line":1142,"column":7}},"477":{"start":{"line":1116,"column":8},"end":{"line":1116,"column":30}},"478":{"start":{"line":1117,"column":8},"end":{"line":1119,"column":11}},"479":{"start":{"line":1123,"column":8},"end":{"line":1123,"column":74}},"480":{"start":{"line":1124,"column":8},"end":{"line":1124,"column":57}},"481":{"start":{"line":1126,"column":8},"end":{"line":1141,"column":9}},"482":{"start":{"line":1128,"column":10},"end":{"line":1140,"column":11}},"483":{"start":{"line":1129,"column":12},"end":{"line":1129,"column":46}},"484":{"start":{"line":1130,"column":12},"end":{"line":1133,"column":13}},"485":{"start":{"line":1131,"column":14},"end":{"line":1131,"column":43}},"486":{"start":{"line":1132,"column":14},"end":{"line":1132,"column":23}},"487":{"start":{"line":1134,"column":12},"end":{"line":1134,"column":44}},"488":{"start":{"line":1135,"column":12},"end":{"line":1139,"column":13}},"489":{"start":{"line":1136,"column":14},"end":{"line":1138,"column":15}},"490":{"start":{"line":1137,"column":16},"end":{"line":1137,"column":45}},"491":{"start":{"line":1145,"column":6},"end":{"line":1145,"column":44}},"492":{"start":{"line":1147,"column":6},"end":{"line":1147,"column":26}},"493":{"start":{"line":1151,"column":4},"end":{"line":1151,"column":23}},"494":{"start":{"line":1152,"column":4},"end":{"line":1152,"column":48}},"495":{"start":{"line":1153,"column":4},"end":{"line":1159,"column":5}},"496":{"start":{"line":1154,"column":6},"end":{"line":1154,"column":40}},"497":{"start":{"line":1156,"column":6},"end":{"line":1158,"column":7}},"498":{"start":{"line":1157,"column":8},"end":{"line":1157,"column":29}},"499":{"start":{"line":1161,"column":4},"end":{"line":1163,"column":5}},"500":{"start":{"line":1162,"column":6},"end":{"line":1162,"column":39}},"501":{"start":{"line":1166,"column":4},"end":{"line":1166,"column":25}},"502":{"start":{"line":1167,"column":4},"end":{"line":1167,"column":33}},"503":{"start":{"line":1168,"column":4},"end":{"line":1175,"column":7}},"504":{"start":{"line":1169,"column":6},"end":{"line":1173,"column":7}},"505":{"start":{"line":1170,"column":8},"end":{"line":1172,"column":46}},"506":{"start":{"line":1174,"column":6},"end":{"line":1174,"column":32}},"507":{"start":{"line":1187,"column":0},"end":{"line":1191,"column":2}},"508":{"start":{"line":1188,"column":2},"end":{"line":1188,"column":26}},"509":{"start":{"line":1189,"column":2},"end":{"line":1189,"column":78}},"510":{"start":{"line":1190,"column":2},"end":{"line":1190,"column":41}},"511":{"start":{"line":1201,"column":0},"end":{"line":1203,"column":2}},"512":{"start":{"line":1202,"column":2},"end":{"line":1202,"column":33}},"513":{"start":{"line":1216,"column":0},"end":{"line":1227,"column":2}},"514":{"start":{"line":1217,"column":2},"end":{"line":1220,"column":39}},"515":{"start":{"line":1221,"column":2},"end":{"line":1223,"column":3}},"516":{"start":{"line":1222,"column":4},"end":{"line":1222,"column":79}},"517":{"start":{"line":1224,"column":2},"end":{"line":1226,"column":5}},"518":{"start":{"line":1225,"column":4},"end":{"line":1225,"column":18}},"519":{"start":{"line":1233,"column":0},"end":{"line":1238,"column":2}},"520":{"start":{"line":1234,"column":2},"end":{"line":1234,"column":53}},"521":{"start":{"line":1235,"column":2},"end":{"line":1237,"column":3}},"522":{"start":{"line":1236,"column":4},"end":{"line":1236,"column":54}},"523":{"start":{"line":1253,"column":0},"end":{"line":1354,"column":2}},"524":{"start":{"line":1254,"column":2},"end":{"line":1254,"column":26}},"525":{"start":{"line":1255,"column":2},"end":{"line":1255,"column":36}},"526":{"start":{"line":1256,"column":2},"end":{"line":1256,"column":35}},"527":{"start":{"line":1259,"column":2},"end":{"line":1259,"column":30}},"528":{"start":{"line":1260,"column":2},"end":{"line":1260,"column":47}},"529":{"start":{"line":1261,"column":2},"end":{"line":1266,"column":3}},"530":{"start":{"line":1262,"column":4},"end":{"line":1264,"column":5}},"531":{"start":{"line":1263,"column":6},"end":{"line":1263,"column":28}},"532":{"start":{"line":1265,"column":4},"end":{"line":1265,"column":13}},"533":{"start":{"line":1268,"column":2},"end":{"line":1273,"column":4}},"534":{"start":{"line":1269,"column":4},"end":{"line":1271,"column":5}},"535":{"start":{"line":1270,"column":6},"end":{"line":1270,"column":66}},"536":{"start":{"line":1272,"column":4},"end":{"line":1272,"column":80}},"537":{"start":{"line":1274,"column":2},"end":{"line":1285,"column":4}},"538":{"start":{"line":1275,"column":4},"end":{"line":1277,"column":5}},"539":{"start":{"line":1276,"column":6},"end":{"line":1276,"column":67}},"540":{"start":{"line":1278,"column":4},"end":{"line":1283,"column":6}},"541":{"start":{"line":1280,"column":6},"end":{"line":1282,"column":9}},"542":{"start":{"line":1281,"column":8},"end":{"line":1281,"column":33}},"543":{"start":{"line":1284,"column":4},"end":{"line":1284,"column":74}},"544":{"start":{"line":1286,"column":2},"end":{"line":1292,"column":4}},"545":{"start":{"line":1287,"column":4},"end":{"line":1289,"column":5}},"546":{"start":{"line":1288,"column":6},"end":{"line":1288,"column":67}},"547":{"start":{"line":1290,"column":4},"end":{"line":1291,"column":60}},"548":{"start":{"line":1293,"column":2},"end":{"line":1298,"column":4}},"549":{"start":{"line":1294,"column":4},"end":{"line":1296,"column":5}},"550":{"start":{"line":1295,"column":6},"end":{"line":1295,"column":65}},"551":{"start":{"line":1297,"column":4},"end":{"line":1297,"column":79}},"552":{"start":{"line":1299,"column":2},"end":{"line":1305,"column":4}},"553":{"start":{"line":1300,"column":4},"end":{"line":1302,"column":5}},"554":{"start":{"line":1301,"column":6},"end":{"line":1301,"column":76}},"555":{"start":{"line":1303,"column":4},"end":{"line":1304,"column":60}},"556":{"start":{"line":1306,"column":2},"end":{"line":1311,"column":4}},"557":{"start":{"line":1307,"column":4},"end":{"line":1309,"column":5}},"558":{"start":{"line":1308,"column":6},"end":{"line":1308,"column":74}},"559":{"start":{"line":1310,"column":4},"end":{"line":1310,"column":79}},"560":{"start":{"line":1312,"column":2},"end":{"line":1318,"column":4}},"561":{"start":{"line":1313,"column":4},"end":{"line":1315,"column":5}},"562":{"start":{"line":1314,"column":6},"end":{"line":1314,"column":69}},"563":{"start":{"line":1316,"column":4},"end":{"line":1317,"column":62}},"564":{"start":{"line":1320,"column":2},"end":{"line":1340,"column":3}},"565":{"start":{"line":1321,"column":4},"end":{"line":1327,"column":6}},"566":{"start":{"line":1322,"column":6},"end":{"line":1324,"column":7}},"567":{"start":{"line":1323,"column":8},"end":{"line":1323,"column":66}},"568":{"start":{"line":1325,"column":6},"end":{"line":1326,"column":59}},"569":{"start":{"line":1328,"column":4},"end":{"line":1331,"column":6}},"570":{"start":{"line":1329,"column":6},"end":{"line":1330,"column":64}},"571":{"start":{"line":1332,"column":4},"end":{"line":1335,"column":6}},"572":{"start":{"line":1333,"column":6},"end":{"line":1334,"column":68}},"573":{"start":{"line":1336,"column":4},"end":{"line":1339,"column":6}},"574":{"start":{"line":1337,"column":6},"end":{"line":1338,"column":60}},"575":{"start":{"line":1342,"column":2},"end":{"line":1351,"column":3}},"576":{"start":{"line":1343,"column":4},"end":{"line":1343,"column":70}},"577":{"start":{"line":1345,"column":4},"end":{"line":1347,"column":6}},"578":{"start":{"line":1346,"column":6},"end":{"line":1346,"column":66}},"579":{"start":{"line":1348,"column":4},"end":{"line":1350,"column":5}},"580":{"start":{"line":1349,"column":6},"end":{"line":1349,"column":22}},"581":{"start":{"line":1353,"column":2},"end":{"line":1353,"column":13}},"582":{"start":{"line":1363,"column":0},"end":{"line":1381,"column":2}},"583":{"start":{"line":1364,"column":2},"end":{"line":1370,"column":3}},"584":{"start":{"line":1365,"column":4},"end":{"line":1369,"column":5}},"585":{"start":{"line":1366,"column":6},"end":{"line":1366,"column":72}},"586":{"start":{"line":1368,"column":6},"end":{"line":1368,"column":66}},"587":{"start":{"line":1371,"column":2},"end":{"line":1371,"column":54}},"588":{"start":{"line":1372,"column":2},"end":{"line":1380,"column":5}},"589":{"start":{"line":1373,"column":4},"end":{"line":1379,"column":8}},"590":{"start":{"line":1374,"column":6},"end":{"line":1378,"column":7}},"591":{"start":{"line":1375,"column":8},"end":{"line":1375,"column":23}},"592":{"start":{"line":1377,"column":8},"end":{"line":1377,"column":20}},"593":{"start":{"line":1384,"column":0},"end":{"line":1384,"column":40}},"594":{"start":{"line":1388,"column":0},"end":{"line":1388,"column":29}},"595":{"start":{"line":1389,"column":0},"end":{"line":1389,"column":70}},"596":{"start":{"line":1390,"column":0},"end":{"line":1395,"column":2}},"597":{"start":{"line":1391,"column":2},"end":{"line":1393,"column":3}},"598":{"start":{"line":1392,"column":4},"end":{"line":1392,"column":38}},"599":{"start":{"line":1394,"column":2},"end":{"line":1394,"column":45}},"600":{"start":{"line":1396,"column":0},"end":{"line":1396,"column":41}},"601":{"start":{"line":1401,"column":0},"end":{"line":1401,"column":48}},"602":{"start":{"line":1402,"column":0},"end":{"line":1408,"column":1}},"603":{"start":{"line":1403,"column":2},"end":{"line":1407,"column":3}},"604":{"start":{"line":1404,"column":4},"end":{"line":1404,"column":39}},"605":{"start":{"line":1406,"column":4},"end":{"line":1406,"column":30}},"606":{"start":{"line":1410,"column":0},"end":{"line":1421,"column":1}},"607":{"start":{"line":1411,"column":2},"end":{"line":1414,"column":5}},"608":{"start":{"line":1415,"column":2},"end":{"line":1420,"column":5}},"609":{"start":{"line":1424,"column":0},"end":{"line":1435,"column":1}},"610":{"start":{"line":1425,"column":2},"end":{"line":1434,"column":3}},"611":{"start":{"line":1426,"column":4},"end":{"line":1431,"column":7}},"612":{"start":{"line":1433,"column":4},"end":{"line":1433,"column":45}},"613":{"start":{"line":1444,"column":0},"end":{"line":1444,"column":71}},"614":{"start":{"line":1446,"column":0},"end":{"line":1451,"column":2}},"615":{"start":{"line":1448,"column":2},"end":{"line":1448,"column":20}},"616":{"start":{"line":1450,"column":2},"end":{"line":1450,"column":20}},"617":{"start":{"line":1453,"column":0},"end":{"line":1457,"column":1}},"618":{"start":{"line":1454,"column":2},"end":{"line":1454,"column":37}},"619":{"start":{"line":1456,"column":2},"end":{"line":1456,"column":27}},"620":{"start":{"line":1458,"column":0},"end":{"line":1458,"column":63}},"621":{"start":{"line":1477,"column":0},"end":{"line":1503,"column":2}},"622":{"start":{"line":1478,"column":2},"end":{"line":1478,"column":16}},"623":{"start":{"line":1480,"column":2},"end":{"line":1480,"column":61}},"624":{"start":{"line":1481,"column":2},"end":{"line":1481,"column":52}},"625":{"start":{"line":1482,"column":2},"end":{"line":1501,"column":3}},"626":{"start":{"line":1483,"column":4},"end":{"line":1483,"column":46}},"627":{"start":{"line":1484,"column":4},"end":{"line":1486,"column":5}},"628":{"start":{"line":1485,"column":6},"end":{"line":1485,"column":15}},"629":{"start":{"line":1487,"column":4},"end":{"line":1487,"column":36}},"630":{"start":{"line":1488,"column":4},"end":{"line":1488,"column":26}},"631":{"start":{"line":1489,"column":4},"end":{"line":1489,"column":72}},"632":{"start":{"line":1490,"column":4},"end":{"line":1492,"column":5}},"633":{"start":{"line":1491,"column":6},"end":{"line":1491,"column":72}},"634":{"start":{"line":1493,"column":4},"end":{"line":1493,"column":34}},"635":{"start":{"line":1494,"column":4},"end":{"line":1500,"column":5}},"636":{"start":{"line":1495,"column":6},"end":{"line":1495,"column":29}},"637":{"start":{"line":1496,"column":11},"end":{"line":1500,"column":5}},"638":{"start":{"line":1497,"column":6},"end":{"line":1497,"column":38}},"639":{"start":{"line":1499,"column":6},"end":{"line":1499,"column":25}},"640":{"start":{"line":1502,"column":2},"end":{"line":1502,"column":14}},"641":{"start":{"line":1508,"column":0},"end":{"line":1510,"column":2}},"642":{"start":{"line":1509,"column":2},"end":{"line":1509,"column":22}},"643":{"start":{"line":1511,"column":0},"end":{"line":1515,"column":2}},"644":{"start":{"line":1512,"column":2},"end":{"line":1512,"column":24}},"645":{"start":{"line":1513,"column":2},"end":{"line":1513,"column":43}},"646":{"start":{"line":1514,"column":2},"end":{"line":1514,"column":29}},"647":{"start":{"line":1516,"column":0},"end":{"line":1561,"column":2}},"648":{"start":{"line":1517,"column":2},"end":{"line":1517,"column":18}},"649":{"start":{"line":1520,"column":2},"end":{"line":1522,"column":3}},"650":{"start":{"line":1521,"column":4},"end":{"line":1521,"column":51}},"651":{"start":{"line":1525,"column":2},"end":{"line":1546,"column":3}},"652":{"start":{"line":1526,"column":4},"end":{"line":1545,"column":7}},"653":{"start":{"line":1527,"column":6},"end":{"line":1527,"column":37}},"654":{"start":{"line":1528,"column":6},"end":{"line":1538,"column":7}},"655":{"start":{"line":1530,"column":8},"end":{"line":1537,"column":13}},"656":{"start":{"line":1532,"column":12},"end":{"line":1532,"column":39}},"657":{"start":{"line":1533,"column":12},"end":{"line":1533,"column":29}},"658":{"start":{"line":1535,"column":12},"end":{"line":1535,"column":39}},"659":{"start":{"line":1536,"column":12},"end":{"line":1536,"column":22}},"660":{"start":{"line":1540,"column":6},"end":{"line":1544,"column":9}},"661":{"start":{"line":1541,"column":8},"end":{"line":1541,"column":27}},"662":{"start":{"line":1543,"column":8},"end":{"line":1543,"column":20}},"663":{"start":{"line":1549,"column":2},"end":{"line":1560,"column":3}},"664":{"start":{"line":1550,"column":4},"end":{"line":1550,"column":39}},"665":{"start":{"line":1552,"column":4},"end":{"line":1552,"column":37}},"666":{"start":{"line":1553,"column":4},"end":{"line":1559,"column":7}},"667":{"start":{"line":1554,"column":6},"end":{"line":1554,"column":42}},"668":{"start":{"line":1555,"column":6},"end":{"line":1555,"column":33}},"669":{"start":{"line":1556,"column":6},"end":{"line":1558,"column":7}},"670":{"start":{"line":1557,"column":8},"end":{"line":1557,"column":37}},"671":{"start":{"line":1571,"column":0},"end":{"line":1576,"column":2}},"672":{"start":{"line":1572,"column":2},"end":{"line":1572,"column":18}},"673":{"start":{"line":1573,"column":2},"end":{"line":1573,"column":18}},"674":{"start":{"line":1574,"column":2},"end":{"line":1574,"column":25}},"675":{"start":{"line":1575,"column":2},"end":{"line":1575,"column":27}},"676":{"start":{"line":1577,"column":0},"end":{"line":1587,"column":2}},"677":{"start":{"line":1578,"column":2},"end":{"line":1585,"column":3}},"678":{"start":{"line":1579,"column":4},"end":{"line":1579,"column":32}},"679":{"start":{"line":1580,"column":4},"end":{"line":1582,"column":5}},"680":{"start":{"line":1581,"column":6},"end":{"line":1581,"column":23}},"681":{"start":{"line":1583,"column":4},"end":{"line":1583,"column":27}},"682":{"start":{"line":1584,"column":4},"end":{"line":1584,"column":50}},"683":{"start":{"line":1586,"column":2},"end":{"line":1586,"column":14}},"684":{"start":{"line":1588,"column":0},"end":{"line":1594,"column":2}},"685":{"start":{"line":1589,"column":2},"end":{"line":1591,"column":3}},"686":{"start":{"line":1590,"column":4},"end":{"line":1590,"column":42}},"687":{"start":{"line":1592,"column":2},"end":{"line":1592,"column":23}},"688":{"start":{"line":1593,"column":2},"end":{"line":1593,"column":70}},"689":{"start":{"line":1601,"column":0},"end":{"line":1605,"column":2}},"690":{"start":{"line":1602,"column":2},"end":{"line":1602,"column":18}},"691":{"start":{"line":1603,"column":2},"end":{"line":1603,"column":18}},"692":{"start":{"line":1604,"column":2},"end":{"line":1604,"column":26}},"693":{"start":{"line":1606,"column":0},"end":{"line":1614,"column":2}},"694":{"start":{"line":1607,"column":2},"end":{"line":1607,"column":39}},"695":{"start":{"line":1608,"column":2},"end":{"line":1608,"column":38}},"696":{"start":{"line":1609,"column":2},"end":{"line":1609,"column":32}},"697":{"start":{"line":1610,"column":2},"end":{"line":1612,"column":3}},"698":{"start":{"line":1611,"column":4},"end":{"line":1611,"column":24}},"699":{"start":{"line":1613,"column":2},"end":{"line":1613,"column":14}},"700":{"start":{"line":1615,"column":0},"end":{"line":1628,"column":2}},"701":{"start":{"line":1617,"column":2},"end":{"line":1620,"column":3}},"702":{"start":{"line":1618,"column":4},"end":{"line":1618,"column":35}},"703":{"start":{"line":1619,"column":4},"end":{"line":1619,"column":55}},"704":{"start":{"line":1621,"column":2},"end":{"line":1621,"column":39}},"705":{"start":{"line":1622,"column":2},"end":{"line":1622,"column":38}},"706":{"start":{"line":1623,"column":2},"end":{"line":1623,"column":53}},"707":{"start":{"line":1624,"column":2},"end":{"line":1626,"column":3}},"708":{"start":{"line":1625,"column":4},"end":{"line":1625,"column":26}},"709":{"start":{"line":1627,"column":2},"end":{"line":1627,"column":42}},"710":{"start":{"line":1633,"column":0},"end":{"line":1635,"column":2}},"711":{"start":{"line":1640,"column":0},"end":{"line":1640,"column":28}},"712":{"start":{"line":1654,"column":0},"end":{"line":1726,"column":2}},"713":{"start":{"line":1655,"column":2},"end":{"line":1655,"column":26}},"714":{"start":{"line":1656,"column":2},"end":{"line":1656,"column":40}},"715":{"start":{"line":1659,"column":2},"end":{"line":1660,"column":59}},"716":{"start":{"line":1661,"column":2},"end":{"line":1665,"column":3}},"717":{"start":{"line":1662,"column":4},"end":{"line":1664,"column":7}},"718":{"start":{"line":1663,"column":6},"end":{"line":1663,"column":43}},"719":{"start":{"line":1666,"column":2},"end":{"line":1666,"column":34}},"720":{"start":{"line":1668,"column":2},"end":{"line":1725,"column":3}},"721":{"start":{"line":1669,"column":4},"end":{"line":1675,"column":5}},"722":{"start":{"line":1670,"column":6},"end":{"line":1674,"column":62}},"723":{"start":{"line":1676,"column":4},"end":{"line":1682,"column":5}},"724":{"start":{"line":1677,"column":6},"end":{"line":1681,"column":62}},"725":{"start":{"line":1683,"column":4},"end":{"line":1724,"column":7}},"726":{"start":{"line":1695,"column":8},"end":{"line":1695,"column":71}},"727":{"start":{"line":1698,"column":8},"end":{"line":1698,"column":66}},"728":{"start":{"line":1699,"column":8},"end":{"line":1699,"column":57}},"729":{"start":{"line":1700,"column":8},"end":{"line":1713,"column":9}},"730":{"start":{"line":1702,"column":10},"end":{"line":1702,"column":75}},"731":{"start":{"line":1703,"column":10},"end":{"line":1709,"column":11}},"732":{"start":{"line":1704,"column":12},"end":{"line":1708,"column":71}},"733":{"start":{"line":1710,"column":10},"end":{"line":1712,"column":11}},"734":{"start":{"line":1711,"column":12},"end":{"line":1711,"column":47}},"735":{"start":{"line":1715,"column":8},"end":{"line":1715,"column":28}},"736":{"start":{"line":1718,"column":8},"end":{"line":1722,"column":64}},"737":{"start":{"line":1746,"column":0},"end":{"line":1877,"column":2}},"738":{"start":{"line":1747,"column":2},"end":{"line":1747,"column":26}},"739":{"start":{"line":1748,"column":2},"end":{"line":1748,"column":70}},"740":{"start":{"line":1749,"column":2},"end":{"line":1749,"column":77}},"741":{"start":{"line":1750,"column":2},"end":{"line":1750,"column":78}},"742":{"start":{"line":1751,"column":2},"end":{"line":1751,"column":61}},"743":{"start":{"line":1752,"column":2},"end":{"line":1752,"column":29}},"744":{"start":{"line":1756,"column":2},"end":{"line":1756,"column":40}},"745":{"start":{"line":1757,"column":2},"end":{"line":1761,"column":3}},"746":{"start":{"line":1758,"column":4},"end":{"line":1760,"column":7}},"747":{"start":{"line":1759,"column":6},"end":{"line":1759,"column":53}},"748":{"start":{"line":1762,"column":2},"end":{"line":1762,"column":38}},"749":{"start":{"line":1763,"column":2},"end":{"line":1767,"column":3}},"750":{"start":{"line":1764,"column":4},"end":{"line":1766,"column":40}},"751":{"start":{"line":1768,"column":2},"end":{"line":1770,"column":5}},"752":{"start":{"line":1769,"column":4},"end":{"line":1769,"column":36}},"753":{"start":{"line":1772,"column":2},"end":{"line":1876,"column":3}},"754":{"start":{"line":1773,"column":4},"end":{"line":1779,"column":5}},"755":{"start":{"line":1774,"column":6},"end":{"line":1778,"column":62}},"756":{"start":{"line":1780,"column":4},"end":{"line":1786,"column":5}},"757":{"start":{"line":1781,"column":6},"end":{"line":1785,"column":62}},"758":{"start":{"line":1788,"column":4},"end":{"line":1788,"column":19}},"759":{"start":{"line":1789,"column":4},"end":{"line":1791,"column":5}},"760":{"start":{"line":1790,"column":6},"end":{"line":1790,"column":33}},"761":{"start":{"line":1792,"column":4},"end":{"line":1792,"column":43}},"762":{"start":{"line":1793,"column":4},"end":{"line":1793,"column":70}},"763":{"start":{"line":1793,"column":36},"end":{"line":1793,"column":68}},"764":{"start":{"line":1794,"column":4},"end":{"line":1799,"column":23}},"765":{"start":{"line":1801,"column":4},"end":{"line":1875,"column":5}},"766":{"start":{"line":1802,"column":6},"end":{"line":1802,"column":73}},"767":{"start":{"line":1805,"column":6},"end":{"line":1810,"column":7}},"768":{"start":{"line":1806,"column":8},"end":{"line":1809,"column":73}},"769":{"start":{"line":1811,"column":6},"end":{"line":1811,"column":57}},"770":{"start":{"line":1812,"column":6},"end":{"line":1820,"column":7}},"771":{"start":{"line":1813,"column":8},"end":{"line":1819,"column":19}},"772":{"start":{"line":1823,"column":6},"end":{"line":1838,"column":7}},"773":{"start":{"line":1826,"column":8},"end":{"line":1827,"column":45}},"774":{"start":{"line":1828,"column":8},"end":{"line":1834,"column":9}},"775":{"start":{"line":1829,"column":10},"end":{"line":1833,"column":69}},"776":{"start":{"line":1835,"column":8},"end":{"line":1837,"column":9}},"777":{"start":{"line":1836,"column":10},"end":{"line":1836,"column":45}},"778":{"start":{"line":1841,"column":6},"end":{"line":1865,"column":7}},"779":{"start":{"line":1843,"column":8},"end":{"line":1852,"column":9}},"780":{"start":{"line":1844,"column":10},"end":{"line":1851,"column":21}},"781":{"start":{"line":1853,"column":8},"end":{"line":1862,"column":9}},"782":{"start":{"line":1854,"column":10},"end":{"line":1861,"column":21}},"783":{"start":{"line":1863,"column":8},"end":{"line":1863,"column":28}},"784":{"start":{"line":1864,"column":8},"end":{"line":1864,"column":71}},"785":{"start":{"line":1867,"column":6},"end":{"line":1867,"column":26}},"786":{"start":{"line":1874,"column":6},"end":{"line":1874,"column":25}},"787":{"start":{"line":1891,"column":0},"end":{"line":1970,"column":2}},"788":{"start":{"line":1892,"column":2},"end":{"line":1892,"column":26}},"789":{"start":{"line":1893,"column":2},"end":{"line":1893,"column":33}},"790":{"start":{"line":1894,"column":2},"end":{"line":1894,"column":40}},"791":{"start":{"line":1897,"column":2},"end":{"line":1898,"column":59}},"792":{"start":{"line":1899,"column":2},"end":{"line":1903,"column":3}},"793":{"start":{"line":1900,"column":4},"end":{"line":1902,"column":7}},"794":{"start":{"line":1901,"column":6},"end":{"line":1901,"column":43}},"795":{"start":{"line":1904,"column":2},"end":{"line":1904,"column":34}},"796":{"start":{"line":1906,"column":2},"end":{"line":1969,"column":3}},"797":{"start":{"line":1907,"column":4},"end":{"line":1913,"column":5}},"798":{"start":{"line":1908,"column":6},"end":{"line":1912,"column":62}},"799":{"start":{"line":1914,"column":4},"end":{"line":1920,"column":5}},"800":{"start":{"line":1915,"column":6},"end":{"line":1919,"column":62}},"801":{"start":{"line":1921,"column":4},"end":{"line":1921,"column":44}},"802":{"start":{"line":1922,"column":4},"end":{"line":1922,"column":24}},"803":{"start":{"line":1923,"column":4},"end":{"line":1958,"column":6}},"804":{"start":{"line":1924,"column":6},"end":{"line":1932,"column":7}},"805":{"start":{"line":1925,"column":8},"end":{"line":1931,"column":68}},"806":{"start":{"line":1934,"column":6},"end":{"line":1934,"column":77}},"807":{"start":{"line":1937,"column":6},"end":{"line":1937,"column":62}},"808":{"start":{"line":1938,"column":6},"end":{"line":1938,"column":21}},"809":{"start":{"line":1939,"column":6},"end":{"line":1941,"column":7}},"810":{"start":{"line":1940,"column":8},"end":{"line":1940,"column":51}},"811":{"start":{"line":1942,"column":6},"end":{"line":1955,"column":7}},"812":{"start":{"line":1944,"column":8},"end":{"line":1944,"column":73}},"813":{"start":{"line":1945,"column":8},"end":{"line":1951,"column":9}},"814":{"start":{"line":1946,"column":10},"end":{"line":1950,"column":69}},"815":{"start":{"line":1952,"column":8},"end":{"line":1954,"column":9}},"816":{"start":{"line":1953,"column":10},"end":{"line":1953,"column":45}},"817":{"start":{"line":1957,"column":6},"end":{"line":1957,"column":26}},"818":{"start":{"line":1959,"column":4},"end":{"line":1965,"column":6}},"819":{"start":{"line":1960,"column":6},"end":{"line":1964,"column":62}},"820":{"start":{"line":1966,"column":4},"end":{"line":1966,"column":31}},"821":{"start":{"line":1967,"column":4},"end":{"line":1967,"column":76}},"822":{"start":{"line":1968,"column":4},"end":{"line":1968,"column":15}},"823":{"start":{"line":1982,"column":0},"end":{"line":1993,"column":2}},"824":{"start":{"line":1983,"column":2},"end":{"line":1988,"column":3}},"825":{"start":{"line":1984,"column":4},"end":{"line":1987,"column":20}},"826":{"start":{"line":1991,"column":2},"end":{"line":1992,"column":54}},"827":{"start":{"line":2005,"column":0},"end":{"line":2045,"column":2}},"828":{"start":{"line":2007,"column":2},"end":{"line":2007,"column":19}},"829":{"start":{"line":2008,"column":2},"end":{"line":2008,"column":22}},"830":{"start":{"line":2009,"column":2},"end":{"line":2012,"column":3}},"831":{"start":{"line":2010,"column":4},"end":{"line":2010,"column":33}},"832":{"start":{"line":2011,"column":4},"end":{"line":2011,"column":21}},"833":{"start":{"line":2013,"column":2},"end":{"line":2013,"column":40}},"834":{"start":{"line":2016,"column":2},"end":{"line":2018,"column":3}},"835":{"start":{"line":2017,"column":4},"end":{"line":2017,"column":22}},"836":{"start":{"line":2019,"column":2},"end":{"line":2021,"column":3}},"837":{"start":{"line":2020,"column":4},"end":{"line":2020,"column":49}},"838":{"start":{"line":2024,"column":2},"end":{"line":2026,"column":3}},"839":{"start":{"line":2025,"column":4},"end":{"line":2025,"column":55}},"840":{"start":{"line":2029,"column":2},"end":{"line":2029,"column":30}},"841":{"start":{"line":2030,"column":2},"end":{"line":2032,"column":3}},"842":{"start":{"line":2031,"column":4},"end":{"line":2031,"column":38}},"843":{"start":{"line":2033,"column":2},"end":{"line":2044,"column":5}},"844":{"start":{"line":2034,"column":4},"end":{"line":2036,"column":5}},"845":{"start":{"line":2035,"column":6},"end":{"line":2035,"column":27}},"846":{"start":{"line":2037,"column":4},"end":{"line":2042,"column":5}},"847":{"start":{"line":2039,"column":6},"end":{"line":2039,"column":68}},"848":{"start":{"line":2041,"column":6},"end":{"line":2041,"column":26}},"849":{"start":{"line":2043,"column":4},"end":{"line":2043,"column":24}},"850":{"start":{"line":2055,"column":0},"end":{"line":2062,"column":2}},"851":{"start":{"line":2056,"column":2},"end":{"line":2056,"column":19}},"852":{"start":{"line":2057,"column":2},"end":{"line":2060,"column":3}},"853":{"start":{"line":2058,"column":4},"end":{"line":2058,"column":34}},"854":{"start":{"line":2059,"column":4},"end":{"line":2059,"column":50}},"855":{"start":{"line":2061,"column":2},"end":{"line":2061,"column":14}},"856":{"start":{"line":2073,"column":0},"end":{"line":2094,"column":2}},"857":{"start":{"line":2074,"column":2},"end":{"line":2074,"column":19}},"858":{"start":{"line":2075,"column":2},"end":{"line":2092,"column":3}},"859":{"start":{"line":2076,"column":4},"end":{"line":2076,"column":32}},"860":{"start":{"line":2077,"column":4},"end":{"line":2077,"column":30}},"861":{"start":{"line":2078,"column":4},"end":{"line":2091,"column":5}},"862":{"start":{"line":2079,"column":6},"end":{"line":2081,"column":7}},"863":{"start":{"line":2080,"column":8},"end":{"line":2080,"column":27}},"864":{"start":{"line":2082,"column":6},"end":{"line":2087,"column":7}},"865":{"start":{"line":2083,"column":8},"end":{"line":2086,"column":9}},"866":{"start":{"line":2084,"column":10},"end":{"line":2084,"column":22}},"867":{"start":{"line":2085,"column":10},"end":{"line":2085,"column":16}},"868":{"start":{"line":2088,"column":11},"end":{"line":2091,"column":5}},"869":{"start":{"line":2090,"column":6},"end":{"line":2090,"column":46}},"870":{"start":{"line":2093,"column":2},"end":{"line":2093,"column":14}},"871":{"start":{"line":2109,"column":0},"end":{"line":2145,"column":2}},"872":{"start":{"line":2110,"column":2},"end":{"line":2110,"column":26}},"873":{"start":{"line":2111,"column":2},"end":{"line":2113,"column":3}},"874":{"start":{"line":2112,"column":4},"end":{"line":2112,"column":36}},"875":{"start":{"line":2114,"column":2},"end":{"line":2116,"column":3}},"876":{"start":{"line":2115,"column":4},"end":{"line":2115,"column":34}},"877":{"start":{"line":2118,"column":2},"end":{"line":2144,"column":3}},"878":{"start":{"line":2119,"column":4},"end":{"line":2122,"column":5}},"879":{"start":{"line":2121,"column":6},"end":{"line":2121,"column":29}},"880":{"start":{"line":2123,"column":4},"end":{"line":2125,"column":5}},"881":{"start":{"line":2124,"column":6},"end":{"line":2124,"column":60}},"882":{"start":{"line":2126,"column":9},"end":{"line":2144,"column":3}},"883":{"start":{"line":2128,"column":4},"end":{"line":2129,"column":49}},"884":{"start":{"line":2132,"column":4},"end":{"line":2135,"column":5}},"885":{"start":{"line":2134,"column":6},"end":{"line":2134,"column":46}},"886":{"start":{"line":2138,"column":4},"end":{"line":2140,"column":5}},"887":{"start":{"line":2139,"column":6},"end":{"line":2139,"column":36}},"888":{"start":{"line":2143,"column":4},"end":{"line":2143,"column":66}},"889":{"start":{"line":2155,"column":0},"end":{"line":2161,"column":2}},"890":{"start":{"line":2156,"column":2},"end":{"line":2156,"column":37}},"891":{"start":{"line":2157,"column":2},"end":{"line":2159,"column":3}},"892":{"start":{"line":2158,"column":4},"end":{"line":2158,"column":18}},"893":{"start":{"line":2160,"column":2},"end":{"line":2160,"column":14}},"894":{"start":{"line":2169,"column":0},"end":{"line":2171,"column":2}},"895":{"start":{"line":2170,"column":2},"end":{"line":2170,"column":27}},"896":{"start":{"line":2183,"column":0},"end":{"line":2201,"column":2}},"897":{"start":{"line":2184,"column":2},"end":{"line":2184,"column":26}},"898":{"start":{"line":2185,"column":2},"end":{"line":2187,"column":3}},"899":{"start":{"line":2186,"column":4},"end":{"line":2186,"column":36}},"900":{"start":{"line":2190,"column":2},"end":{"line":2192,"column":5}},"901":{"start":{"line":2191,"column":4},"end":{"line":2191,"column":43}},"902":{"start":{"line":2194,"column":2},"end":{"line":2200,"column":3}},"903":{"start":{"line":2195,"column":4},"end":{"line":2195,"column":45}},"904":{"start":{"line":2196,"column":9},"end":{"line":2200,"column":3}},"905":{"start":{"line":2197,"column":4},"end":{"line":2197,"column":34}},"906":{"start":{"line":2199,"column":4},"end":{"line":2199,"column":31}},"907":{"start":{"line":2217,"column":0},"end":{"line":2238,"column":2}},"908":{"start":{"line":2219,"column":2},"end":{"line":2221,"column":3}},"909":{"start":{"line":2220,"column":4},"end":{"line":2220,"column":16}},"910":{"start":{"line":2224,"column":2},"end":{"line":2230,"column":3}},"911":{"start":{"line":2229,"column":4},"end":{"line":2229,"column":16}},"912":{"start":{"line":2233,"column":2},"end":{"line":2235,"column":3}},"913":{"start":{"line":2234,"column":4},"end":{"line":2234,"column":35}},"914":{"start":{"line":2237,"column":2},"end":{"line":2237,"column":15}},"915":{"start":{"line":2251,"column":0},"end":{"line":2278,"column":2}},"916":{"start":{"line":2252,"column":2},"end":{"line":2252,"column":18}},"917":{"start":{"line":2255,"column":2},"end":{"line":2257,"column":3}},"918":{"start":{"line":2256,"column":4},"end":{"line":2256,"column":16}},"919":{"start":{"line":2260,"column":2},"end":{"line":2262,"column":3}},"920":{"start":{"line":2261,"column":4},"end":{"line":2261,"column":21}},"921":{"start":{"line":2265,"column":2},"end":{"line":2275,"column":3}},"922":{"start":{"line":2266,"column":4},"end":{"line":2266,"column":34}},"923":{"start":{"line":2268,"column":4},"end":{"line":2274,"column":5}},"924":{"start":{"line":2270,"column":6},"end":{"line":2270,"column":19}},"925":{"start":{"line":2271,"column":11},"end":{"line":2274,"column":5}},"926":{"start":{"line":2273,"column":6},"end":{"line":2273,"column":25}},"927":{"start":{"line":2277,"column":2},"end":{"line":2277,"column":14}},"928":{"start":{"line":2281,"column":0},"end":{"line":2281,"column":21}},"929":{"start":{"line":2304,"column":0},"end":{"line":2306,"column":2}},"930":{"start":{"line":2305,"column":2},"end":{"line":2305,"column":36}},"931":{"start":{"line":2313,"column":0},"end":{"line":2315,"column":2}},"932":{"start":{"line":2314,"column":2},"end":{"line":2314,"column":34}},"933":{"start":{"line":2317,"column":0},"end":{"line":2338,"column":1}},"934":{"start":{"line":2319,"column":2},"end":{"line":2321,"column":3}},"935":{"start":{"line":2320,"column":4},"end":{"line":2320,"column":29}},"936":{"start":{"line":2322,"column":2},"end":{"line":2337,"column":3}},"937":{"start":{"line":2323,"column":4},"end":{"line":2336,"column":6}},"938":{"start":{"line":2341,"column":0},"end":{"line":2341,"column":61}},"939":{"start":{"line":2342,"column":0},"end":{"line":2342,"column":59}},"940":{"start":{"line":2343,"column":0},"end":{"line":2343,"column":61}},"941":{"start":{"line":2344,"column":0},"end":{"line":2344,"column":59}},"942":{"start":{"line":2346,"column":0},"end":{"line":2346,"column":56}},"943":{"start":{"line":2347,"column":0},"end":{"line":2347,"column":28}},"944":{"start":{"line":2348,"column":0},"end":{"line":2348,"column":30}},"945":{"start":{"line":2349,"column":0},"end":{"line":2349,"column":28}},"946":{"start":{"line":2350,"column":0},"end":{"line":2350,"column":26}},"947":{"start":{"line":2351,"column":0},"end":{"line":2351,"column":28}},"948":{"start":{"line":2352,"column":0},"end":{"line":2352,"column":45}},"949":{"start":{"line":2353,"column":0},"end":{"line":2353,"column":41}},"950":{"start":{"line":2354,"column":0},"end":{"line":2354,"column":32}},"951":{"start":{"line":2355,"column":0},"end":{"line":2355,"column":40}},"952":{"start":{"line":2357,"column":0},"end":{"line":2357,"column":61}},"953":{"start":{"line":2358,"column":0},"end":{"line":2358,"column":26}},"954":{"start":{"line":2367,"column":0},"end":{"line":2377,"column":2}},"955":{"start":{"line":2368,"column":2},"end":{"line":2373,"column":3}},"956":{"start":{"line":2369,"column":4},"end":{"line":2369,"column":21}},"957":{"start":{"line":2370,"column":4},"end":{"line":2370,"column":52}},"958":{"start":{"line":2371,"column":9},"end":{"line":2373,"column":3}},"959":{"start":{"line":2372,"column":4},"end":{"line":2372,"column":37}},"960":{"start":{"line":2374,"column":2},"end":{"line":2374,"column":37}},"961":{"start":{"line":2375,"column":2},"end":{"line":2375,"column":65}},"962":{"start":{"line":2376,"column":2},"end":{"line":2376,"column":31}},"963":{"start":{"line":2378,"column":0},"end":{"line":2382,"column":1}},"964":{"start":{"line":2379,"column":2},"end":{"line":2379,"column":47}},"965":{"start":{"line":2380,"column":7},"end":{"line":2382,"column":1}},"966":{"start":{"line":2381,"column":2},"end":{"line":2381,"column":38}},"967":{"start":{"line":2387,"column":0},"end":{"line":2387,"column":30}},"968":{"start":{"line":2401,"column":0},"end":{"line":2651,"column":2}},"969":{"start":{"line":2404,"column":2},"end":{"line":2423,"column":3}},"970":{"start":{"line":2405,"column":4},"end":{"line":2405,"column":18}},"971":{"start":{"line":2406,"column":4},"end":{"line":2413,"column":5}},"972":{"start":{"line":2408,"column":6},"end":{"line":2409,"column":56}},"973":{"start":{"line":2410,"column":6},"end":{"line":2412,"column":7}},"974":{"start":{"line":2411,"column":8},"end":{"line":2411,"column":29}},"975":{"start":{"line":2414,"column":4},"end":{"line":2421,"column":5}},"976":{"start":{"line":2416,"column":6},"end":{"line":2417,"column":49}},"977":{"start":{"line":2418,"column":6},"end":{"line":2420,"column":7}},"978":{"start":{"line":2419,"column":8},"end":{"line":2419,"column":23}},"979":{"start":{"line":2422,"column":4},"end":{"line":2422,"column":16}},"980":{"start":{"line":2426,"column":2},"end":{"line":2647,"column":3}},"981":{"start":{"line":2427,"column":4},"end":{"line":2435,"column":5}},"982":{"start":{"line":2429,"column":6},"end":{"line":2429,"column":48}},"983":{"start":{"line":2430,"column":6},"end":{"line":2434,"column":7}},"984":{"start":{"line":2431,"column":8},"end":{"line":2433,"column":9}},"985":{"start":{"line":2432,"column":10},"end":{"line":2432,"column":37}},"986":{"start":{"line":2438,"column":4},"end":{"line":2448,"column":5}},"987":{"start":{"line":2439,"column":6},"end":{"line":2439,"column":67}},"988":{"start":{"line":2440,"column":6},"end":{"line":2446,"column":7}},"989":{"start":{"line":2442,"column":8},"end":{"line":2444,"column":9}},"990":{"start":{"line":2443,"column":10},"end":{"line":2443,"column":44}},"991":{"start":{"line":2445,"column":8},"end":{"line":2445,"column":80}},"992":{"start":{"line":2447,"column":6},"end":{"line":2447,"column":18}},"993":{"start":{"line":2451,"column":4},"end":{"line":2451,"column":56}},"994":{"start":{"line":2453,"column":4},"end":{"line":2453,"column":18}},"995":{"start":{"line":2455,"column":4},"end":{"line":2461,"column":5}},"996":{"start":{"line":2457,"column":6},"end":{"line":2459,"column":7}},"997":{"start":{"line":2458,"column":8},"end":{"line":2458,"column":42}},"998":{"start":{"line":2460,"column":6},"end":{"line":2460,"column":78}},"999":{"start":{"line":2464,"column":4},"end":{"line":2464,"column":43}},"1000":{"start":{"line":2465,"column":4},"end":{"line":2644,"column":5}},"1001":{"start":{"line":2466,"column":6},"end":{"line":2466,"column":38}},"1002":{"start":{"line":2467,"column":6},"end":{"line":2467,"column":52}},"1003":{"start":{"line":2470,"column":6},"end":{"line":2493,"column":7}},"1004":{"start":{"line":2471,"column":8},"end":{"line":2471,"column":27}},"1005":{"start":{"line":2474,"column":8},"end":{"line":2485,"column":9}},"1006":{"start":{"line":2475,"column":10},"end":{"line":2477,"column":53}},"1007":{"start":{"line":2480,"column":10},"end":{"line":2480,"column":30}},"1008":{"start":{"line":2481,"column":10},"end":{"line":2484,"column":11}},"1009":{"start":{"line":2482,"column":12},"end":{"line":2483,"column":66}},"1010":{"start":{"line":2488,"column":8},"end":{"line":2488,"column":61}},"1011":{"start":{"line":2489,"column":8},"end":{"line":2489,"column":79}},"1012":{"start":{"line":2490,"column":8},"end":{"line":2491,"column":67}},"1013":{"start":{"line":2492,"column":8},"end":{"line":2492,"column":17}},"1014":{"start":{"line":2496,"column":6},"end":{"line":2522,"column":7}},"1015":{"start":{"line":2498,"column":8},"end":{"line":2499,"column":57}},"1016":{"start":{"line":2502,"column":8},"end":{"line":2513,"column":9}},"1017":{"start":{"line":2503,"column":10},"end":{"line":2512,"column":11}},"1018":{"start":{"line":2505,"column":12},"end":{"line":2505,"column":58}},"1019":{"start":{"line":2506,"column":12},"end":{"line":2507,"column":58}},"1020":{"start":{"line":2508,"column":12},"end":{"line":2508,"column":76}},"1021":{"start":{"line":2509,"column":12},"end":{"line":2510,"column":75}},"1022":{"start":{"line":2511,"column":12},"end":{"line":2511,"column":53}},"1023":{"start":{"line":2515,"column":8},"end":{"line":2519,"column":9}},"1024":{"start":{"line":2517,"column":10},"end":{"line":2517,"column":63}},"1025":{"start":{"line":2518,"column":10},"end":{"line":2518,"column":55}},"1026":{"start":{"line":2521,"column":8},"end":{"line":2521,"column":17}},"1027":{"start":{"line":2525,"column":6},"end":{"line":2537,"column":7}},"1028":{"start":{"line":2527,"column":8},"end":{"line":2528,"column":51}},"1029":{"start":{"line":2529,"column":8},"end":{"line":2531,"column":9}},"1030":{"start":{"line":2530,"column":10},"end":{"line":2530,"column":19}},"1031":{"start":{"line":2534,"column":8},"end":{"line":2534,"column":61}},"1032":{"start":{"line":2535,"column":8},"end":{"line":2535,"column":52}},"1033":{"start":{"line":2536,"column":8},"end":{"line":2536,"column":17}},"1034":{"start":{"line":2540,"column":6},"end":{"line":2546,"column":7}},"1035":{"start":{"line":2543,"column":8},"end":{"line":2543,"column":61}},"1036":{"start":{"line":2544,"column":8},"end":{"line":2544,"column":52}},"1037":{"start":{"line":2545,"column":8},"end":{"line":2545,"column":17}},"1038":{"start":{"line":2551,"column":6},"end":{"line":2557,"column":7}},"1039":{"start":{"line":2552,"column":8},"end":{"line":2554,"column":25}},"1040":{"start":{"line":2555,"column":8},"end":{"line":2556,"column":76}},"1041":{"start":{"line":2560,"column":6},"end":{"line":2643,"column":7}},"1042":{"start":{"line":2561,"column":8},"end":{"line":2561,"column":45}},"1043":{"start":{"line":2564,"column":8},"end":{"line":2566,"column":25}},"1044":{"start":{"line":2567,"column":8},"end":{"line":2568,"column":55}},"1045":{"start":{"line":2571,"column":8},"end":{"line":2571,"column":43}},"1046":{"start":{"line":2572,"column":8},"end":{"line":2572,"column":24}},"1047":{"start":{"line":2573,"column":8},"end":{"line":2575,"column":9}},"1048":{"start":{"line":2574,"column":10},"end":{"line":2574,"column":39}},"1049":{"start":{"line":2578,"column":8},"end":{"line":2579,"column":80}},"1050":{"start":{"line":2582,"column":8},"end":{"line":2608,"column":9}},"1051":{"start":{"line":2584,"column":10},"end":{"line":2586,"column":11}},"1052":{"start":{"line":2585,"column":12},"end":{"line":2585,"column":44}},"1053":{"start":{"line":2588,"column":10},"end":{"line":2607,"column":11}},"1054":{"start":{"line":2590,"column":12},"end":{"line":2590,"column":29}},"1055":{"start":{"line":2591,"column":12},"end":{"line":2591,"column":69}},"1056":{"start":{"line":2592,"column":12},"end":{"line":2592,"column":36}},"1057":{"start":{"line":2595,"column":12},"end":{"line":2598,"column":13}},"1058":{"start":{"line":2596,"column":14},"end":{"line":2597,"column":39}},"1059":{"start":{"line":2599,"column":17},"end":{"line":2607,"column":11}},"1060":{"start":{"line":2601,"column":12},"end":{"line":2606,"column":75}},"1061":{"start":{"line":2611,"column":8},"end":{"line":2642,"column":9}},"1062":{"start":{"line":2613,"column":10},"end":{"line":2613,"column":24}},"1063":{"start":{"line":2614,"column":10},"end":{"line":2618,"column":11}},"1064":{"start":{"line":2615,"column":12},"end":{"line":2615,"column":49}},"1065":{"start":{"line":2617,"column":12},"end":{"line":2617,"column":54}},"1066":{"start":{"line":2622,"column":10},"end":{"line":2624,"column":11}},"1067":{"start":{"line":2623,"column":12},"end":{"line":2623,"column":52}},"1068":{"start":{"line":2628,"column":10},"end":{"line":2628,"column":77}},"1069":{"start":{"line":2633,"column":10},"end":{"line":2636,"column":75}},"1070":{"start":{"line":2639,"column":10},"end":{"line":2641,"column":40}},"1071":{"start":{"line":2646,"column":4},"end":{"line":2646,"column":16}},"1072":{"start":{"line":2650,"column":2},"end":{"line":2650,"column":17}},"1073":{"start":{"line":2666,"column":0},"end":{"line":3043,"column":2}},"1074":{"start":{"line":2668,"column":2},"end":{"line":2668,"column":18}},"1075":{"start":{"line":2671,"column":2},"end":{"line":2673,"column":3}},"1076":{"start":{"line":2672,"column":4},"end":{"line":2672,"column":16}},"1077":{"start":{"line":2675,"column":2},"end":{"line":2684,"column":3}},"1078":{"start":{"line":2677,"column":4},"end":{"line":2680,"column":5}},"1079":{"start":{"line":2679,"column":6},"end":{"line":2679,"column":18}},"1080":{"start":{"line":2683,"column":4},"end":{"line":2683,"column":60}},"1081":{"start":{"line":2687,"column":2},"end":{"line":2711,"column":3}},"1082":{"start":{"line":2688,"column":4},"end":{"line":2688,"column":18}},"1083":{"start":{"line":2689,"column":4},"end":{"line":2690,"column":47}},"1084":{"start":{"line":2691,"column":4},"end":{"line":2691,"column":53}},"1085":{"start":{"line":2692,"column":4},"end":{"line":2709,"column":5}},"1086":{"start":{"line":2694,"column":6},"end":{"line":2694,"column":74}},"1087":{"start":{"line":2695,"column":6},"end":{"line":2700,"column":7}},"1088":{"start":{"line":2697,"column":8},"end":{"line":2699,"column":57}},"1089":{"start":{"line":2702,"column":6},"end":{"line":2708,"column":7}},"1090":{"start":{"line":2703,"column":8},"end":{"line":2707,"column":9}},"1091":{"start":{"line":2704,"column":10},"end":{"line":2704,"column":32}},"1092":{"start":{"line":2706,"column":10},"end":{"line":2706,"column":23}},"1093":{"start":{"line":2710,"column":4},"end":{"line":2710,"column":16}},"1094":{"start":{"line":2716,"column":2},"end":{"line":2718,"column":3}},"1095":{"start":{"line":2717,"column":4},"end":{"line":2717,"column":77}},"1096":{"start":{"line":2721,"column":2},"end":{"line":2722,"column":46}},"1097":{"start":{"line":2724,"column":2},"end":{"line":2724,"column":16}},"1098":{"start":{"line":2725,"column":2},"end":{"line":2725,"column":41}},"1099":{"start":{"line":2726,"column":2},"end":{"line":2961,"column":3}},"1100":{"start":{"line":2727,"column":4},"end":{"line":2727,"column":23}},"1101":{"start":{"line":2728,"column":4},"end":{"line":2728,"column":29}},"1102":{"start":{"line":2729,"column":4},"end":{"line":2729,"column":22}},"1103":{"start":{"line":2732,"column":4},"end":{"line":2734,"column":5}},"1104":{"start":{"line":2733,"column":6},"end":{"line":2733,"column":15}},"1105":{"start":{"line":2737,"column":4},"end":{"line":2737,"column":69}},"1106":{"start":{"line":2740,"column":4},"end":{"line":2743,"column":5}},"1107":{"start":{"line":2742,"column":6},"end":{"line":2742,"column":15}},"1108":{"start":{"line":2745,"column":4},"end":{"line":2758,"column":5}},"1109":{"start":{"line":2746,"column":6},"end":{"line":2751,"column":7}},"1110":{"start":{"line":2747,"column":8},"end":{"line":2750,"column":64}},"1111":{"start":{"line":2752,"column":6},"end":{"line":2757,"column":7}},"1112":{"start":{"line":2753,"column":8},"end":{"line":2756,"column":67}},"1113":{"start":{"line":2761,"column":4},"end":{"line":2773,"column":5}},"1114":{"start":{"line":2762,"column":6},"end":{"line":2766,"column":7}},"1115":{"start":{"line":2763,"column":8},"end":{"line":2765,"column":75}},"1116":{"start":{"line":2767,"column":6},"end":{"line":2772,"column":7}},"1117":{"start":{"line":2768,"column":8},"end":{"line":2771,"column":53}},"1118":{"start":{"line":2775,"column":4},"end":{"line":2777,"column":5}},"1119":{"start":{"line":2776,"column":6},"end":{"line":2776,"column":32}},"1120":{"start":{"line":2780,"column":4},"end":{"line":2786,"column":5}},"1121":{"start":{"line":2782,"column":6},"end":{"line":2785,"column":76}},"1122":{"start":{"line":2789,"column":4},"end":{"line":2796,"column":5}},"1123":{"start":{"line":2791,"column":6},"end":{"line":2795,"column":60}},"1124":{"start":{"line":2799,"column":4},"end":{"line":2812,"column":5}},"1125":{"start":{"line":2800,"column":6},"end":{"line":2803,"column":7}},"1126":{"start":{"line":2802,"column":8},"end":{"line":2802,"column":17}},"1127":{"start":{"line":2804,"column":6},"end":{"line":2809,"column":7}},"1128":{"start":{"line":2805,"column":8},"end":{"line":2808,"column":66}},"1129":{"start":{"line":2811,"column":6},"end":{"line":2811,"column":34}},"1130":{"start":{"line":2815,"column":4},"end":{"line":2822,"column":5}},"1131":{"start":{"line":2816,"column":6},"end":{"line":2821,"column":7}},"1132":{"start":{"line":2817,"column":8},"end":{"line":2820,"column":56}},"1133":{"start":{"line":2825,"column":4},"end":{"line":2869,"column":5}},"1134":{"start":{"line":2826,"column":6},"end":{"line":2830,"column":7}},"1135":{"start":{"line":2827,"column":8},"end":{"line":2829,"column":80}},"1136":{"start":{"line":2832,"column":6},"end":{"line":2832,"column":73}},"1137":{"start":{"line":2835,"column":6},"end":{"line":2841,"column":7}},"1138":{"start":{"line":2836,"column":8},"end":{"line":2840,"column":9}},"1139":{"start":{"line":2837,"column":10},"end":{"line":2839,"column":37}},"1140":{"start":{"line":2845,"column":6},"end":{"line":2845,"column":48}},"1141":{"start":{"line":2846,"column":6},"end":{"line":2866,"column":7}},"1142":{"start":{"line":2847,"column":8},"end":{"line":2849,"column":9}},"1143":{"start":{"line":2848,"column":10},"end":{"line":2848,"column":19}},"1144":{"start":{"line":2850,"column":8},"end":{"line":2852,"column":9}},"1145":{"start":{"line":2851,"column":10},"end":{"line":2851,"column":45}},"1146":{"start":{"line":2853,"column":8},"end":{"line":2853,"column":75}},"1147":{"start":{"line":2854,"column":8},"end":{"line":2854,"column":44}},"1148":{"start":{"line":2855,"column":8},"end":{"line":2865,"column":9}},"1149":{"start":{"line":2856,"column":10},"end":{"line":2856,"column":31}},"1150":{"start":{"line":2857,"column":10},"end":{"line":2862,"column":11}},"1151":{"start":{"line":2858,"column":12},"end":{"line":2861,"column":78}},"1152":{"start":{"line":2863,"column":10},"end":{"line":2864,"column":65}},"1153":{"start":{"line":2868,"column":6},"end":{"line":2868,"column":15}},"1154":{"start":{"line":2871,"column":4},"end":{"line":2871,"column":73}},"1155":{"start":{"line":2873,"column":4},"end":{"line":2917,"column":5}},"1156":{"start":{"line":2875,"column":6},"end":{"line":2875,"column":48}},"1157":{"start":{"line":2876,"column":11},"end":{"line":2917,"column":5}},"1158":{"start":{"line":2878,"column":6},"end":{"line":2897,"column":14}},"1159":{"start":{"line":2879,"column":8},"end":{"line":2879,"column":22}},"1160":{"start":{"line":2880,"column":8},"end":{"line":2880,"column":45}},"1161":{"start":{"line":2881,"column":8},"end":{"line":2895,"column":9}},"1162":{"start":{"line":2882,"column":10},"end":{"line":2882,"column":29}},"1163":{"start":{"line":2883,"column":10},"end":{"line":2883,"column":31}},"1164":{"start":{"line":2884,"column":10},"end":{"line":2886,"column":11}},"1165":{"start":{"line":2885,"column":12},"end":{"line":2885,"column":24}},"1166":{"start":{"line":2887,"column":10},"end":{"line":2887,"column":76}},"1167":{"start":{"line":2888,"column":10},"end":{"line":2894,"column":11}},"1168":{"start":{"line":2889,"column":12},"end":{"line":2889,"column":31}},"1169":{"start":{"line":2890,"column":12},"end":{"line":2892,"column":13}},"1170":{"start":{"line":2891,"column":14},"end":{"line":2891,"column":35}},"1171":{"start":{"line":2893,"column":12},"end":{"line":2893,"column":28}},"1172":{"start":{"line":2896,"column":8},"end":{"line":2896,"column":20}},"1173":{"start":{"line":2900,"column":6},"end":{"line":2900,"column":50}},"1174":{"start":{"line":2901,"column":6},"end":{"line":2916,"column":7}},"1175":{"start":{"line":2902,"column":8},"end":{"line":2902,"column":48}},"1176":{"start":{"line":2903,"column":8},"end":{"line":2905,"column":9}},"1177":{"start":{"line":2904,"column":10},"end":{"line":2904,"column":36}},"1178":{"start":{"line":2906,"column":8},"end":{"line":2907,"column":65}},"1179":{"start":{"line":2908,"column":8},"end":{"line":2912,"column":9}},"1180":{"start":{"line":2909,"column":10},"end":{"line":2911,"column":59}},"1181":{"start":{"line":2915,"column":8},"end":{"line":2915,"column":75}},"1182":{"start":{"line":2920,"column":4},"end":{"line":2922,"column":5}},"1183":{"start":{"line":2921,"column":6},"end":{"line":2921,"column":15}},"1184":{"start":{"line":2925,"column":4},"end":{"line":2931,"column":5}},"1185":{"start":{"line":2928,"column":6},"end":{"line":2929,"column":41}},"1186":{"start":{"line":2930,"column":6},"end":{"line":2930,"column":47}},"1187":{"start":{"line":2935,"column":4},"end":{"line":2952,"column":5}},"1188":{"start":{"line":2936,"column":6},"end":{"line":2936,"column":65}},"1189":{"start":{"line":2937,"column":6},"end":{"line":2939,"column":7}},"1190":{"start":{"line":2938,"column":8},"end":{"line":2938,"column":40}},"1191":{"start":{"line":2940,"column":6},"end":{"line":2950,"column":7}},"1192":{"start":{"line":2941,"column":8},"end":{"line":2941,"column":37}},"1193":{"start":{"line":2942,"column":8},"end":{"line":2947,"column":9}},"1194":{"start":{"line":2943,"column":10},"end":{"line":2946,"column":76}},"1195":{"start":{"line":2948,"column":8},"end":{"line":2949,"column":71}},"1196":{"start":{"line":2951,"column":6},"end":{"line":2951,"column":15}},"1197":{"start":{"line":2956,"column":4},"end":{"line":2958,"column":33}},"1198":{"start":{"line":2959,"column":4},"end":{"line":2960,"column":74}},"1199":{"start":{"line":2964,"column":2},"end":{"line":2964,"column":27}},"1200":{"start":{"line":2965,"column":2},"end":{"line":2965,"column":26}},"1201":{"start":{"line":2967,"column":2},"end":{"line":3029,"column":3}},"1202":{"start":{"line":2969,"column":4},"end":{"line":2974,"column":5}},"1203":{"start":{"line":2970,"column":6},"end":{"line":2973,"column":77}},"1204":{"start":{"line":2975,"column":4},"end":{"line":2975,"column":31}},"1205":{"start":{"line":2976,"column":4},"end":{"line":2978,"column":5}},"1206":{"start":{"line":2977,"column":6},"end":{"line":2977,"column":22}},"1207":{"start":{"line":2979,"column":4},"end":{"line":2981,"column":5}},"1208":{"start":{"line":2980,"column":6},"end":{"line":2980,"column":22}},"1209":{"start":{"line":2982,"column":4},"end":{"line":2984,"column":5}},"1210":{"start":{"line":2983,"column":6},"end":{"line":2983,"column":22}},"1211":{"start":{"line":2985,"column":4},"end":{"line":2991,"column":5}},"1212":{"start":{"line":2986,"column":6},"end":{"line":2990,"column":77}},"1213":{"start":{"line":2993,"column":4},"end":{"line":3007,"column":5}},"1214":{"start":{"line":2994,"column":6},"end":{"line":2994,"column":18}},"1215":{"start":{"line":2995,"column":11},"end":{"line":3007,"column":5}},"1216":{"start":{"line":2997,"column":6},"end":{"line":3000,"column":64}},"1217":{"start":{"line":3001,"column":11},"end":{"line":3007,"column":5}},"1218":{"start":{"line":3003,"column":6},"end":{"line":3006,"column":76}},"1219":{"start":{"line":3008,"column":9},"end":{"line":3029,"column":3}},"1220":{"start":{"line":3010,"column":4},"end":{"line":3010,"column":36}},"1221":{"start":{"line":3011,"column":9},"end":{"line":3029,"column":3}},"1222":{"start":{"line":3013,"column":4},"end":{"line":3019,"column":5}},"1223":{"start":{"line":3014,"column":6},"end":{"line":3018,"column":61}},"1224":{"start":{"line":3021,"column":4},"end":{"line":3025,"column":5}},"1225":{"start":{"line":3022,"column":6},"end":{"line":3022,"column":26}},"1226":{"start":{"line":3023,"column":6},"end":{"line":3023,"column":31}},"1227":{"start":{"line":3024,"column":6},"end":{"line":3024,"column":26}},"1228":{"start":{"line":3026,"column":9},"end":{"line":3029,"column":3}},"1229":{"start":{"line":3028,"column":4},"end":{"line":3028,"column":16}},"1230":{"start":{"line":3032,"column":2},"end":{"line":3040,"column":3}},"1231":{"start":{"line":3036,"column":4},"end":{"line":3039,"column":5}},"1232":{"start":{"line":3038,"column":6},"end":{"line":3038,"column":18}},"1233":{"start":{"line":3042,"column":2},"end":{"line":3042,"column":14}},"1234":{"start":{"line":3055,"column":0},"end":{"line":3065,"column":2}},"1235":{"start":{"line":3056,"column":2},"end":{"line":3056,"column":26}},"1236":{"start":{"line":3059,"column":2},"end":{"line":3059,"column":78}},"1237":{"start":{"line":3060,"column":2},"end":{"line":3060,"column":32}},"1238":{"start":{"line":3061,"column":2},"end":{"line":3061,"column":52}},"1239":{"start":{"line":3064,"column":2},"end":{"line":3064,"column":32}},"1240":{"start":{"line":3074,"column":0},"end":{"line":3088,"column":2}},"1241":{"start":{"line":3075,"column":2},"end":{"line":3075,"column":47}},"1242":{"start":{"line":3078,"column":2},"end":{"line":3078,"column":21}},"1243":{"start":{"line":3079,"column":2},"end":{"line":3079,"column":46}},"1244":{"start":{"line":3080,"column":2},"end":{"line":3086,"column":3}},"1245":{"start":{"line":3081,"column":4},"end":{"line":3081,"column":38}},"1246":{"start":{"line":3083,"column":4},"end":{"line":3085,"column":5}},"1247":{"start":{"line":3084,"column":6},"end":{"line":3084,"column":27}},"1248":{"start":{"line":3087,"column":2},"end":{"line":3087,"column":19}},"1249":{"start":{"line":3099,"column":0},"end":{"line":3118,"column":2}},"1250":{"start":{"line":3101,"column":2},"end":{"line":3106,"column":4}},"1251":{"start":{"line":3110,"column":2},"end":{"line":3110,"column":43}},"1252":{"start":{"line":3111,"column":2},"end":{"line":3111,"column":57}},"1253":{"start":{"line":3112,"column":2},"end":{"line":3112,"column":43}},"1254":{"start":{"line":3115,"column":2},"end":{"line":3115,"column":18}},"1255":{"start":{"line":3116,"column":2},"end":{"line":3116,"column":73}},"1256":{"start":{"line":3117,"column":2},"end":{"line":3117,"column":16}},"1257":{"start":{"line":3127,"column":0},"end":{"line":3136,"column":2}},"1258":{"start":{"line":3128,"column":2},"end":{"line":3130,"column":3}},"1259":{"start":{"line":3129,"column":4},"end":{"line":3129,"column":58}},"1260":{"start":{"line":3131,"column":2},"end":{"line":3133,"column":3}},"1261":{"start":{"line":3132,"column":4},"end":{"line":3132,"column":58}},"1262":{"start":{"line":3134,"column":2},"end":{"line":3135,"column":74}},"1263":{"start":{"line":3145,"column":0},"end":{"line":3312,"column":2}},"1264":{"start":{"line":3146,"column":2},"end":{"line":3146,"column":24}},"1265":{"start":{"line":3147,"column":2},"end":{"line":3147,"column":44}},"1266":{"start":{"line":3148,"column":2},"end":{"line":3148,"column":26}},"1267":{"start":{"line":3150,"column":2},"end":{"line":3212,"column":3}},"1268":{"start":{"line":3151,"column":4},"end":{"line":3151,"column":30}},"1269":{"start":{"line":3152,"column":4},"end":{"line":3154,"column":5}},"1270":{"start":{"line":3153,"column":6},"end":{"line":3153,"column":26}},"1271":{"start":{"line":3155,"column":4},"end":{"line":3157,"column":5}},"1272":{"start":{"line":3156,"column":6},"end":{"line":3156,"column":41}},"1273":{"start":{"line":3158,"column":4},"end":{"line":3158,"column":33}},"1274":{"start":{"line":3159,"column":4},"end":{"line":3211,"column":5}},"1275":{"start":{"line":3160,"column":6},"end":{"line":3160,"column":29}},"1276":{"start":{"line":3163,"column":6},"end":{"line":3163,"column":35}},"1277":{"start":{"line":3164,"column":6},"end":{"line":3164,"column":37}},"1278":{"start":{"line":3165,"column":6},"end":{"line":3165,"column":28}},"1279":{"start":{"line":3167,"column":6},"end":{"line":3169,"column":7}},"1280":{"start":{"line":3168,"column":8},"end":{"line":3168,"column":32}},"1281":{"start":{"line":3170,"column":6},"end":{"line":3170,"column":28}},"1282":{"start":{"line":3172,"column":6},"end":{"line":3172,"column":69}},"1283":{"start":{"line":3173,"column":6},"end":{"line":3175,"column":7}},"1284":{"start":{"line":3174,"column":8},"end":{"line":3174,"column":44}},"1285":{"start":{"line":3177,"column":6},"end":{"line":3180,"column":7}},"1286":{"start":{"line":3178,"column":8},"end":{"line":3178,"column":73}},"1287":{"start":{"line":3179,"column":8},"end":{"line":3179,"column":17}},"1288":{"start":{"line":3182,"column":6},"end":{"line":3182,"column":58}},"1289":{"start":{"line":3183,"column":6},"end":{"line":3183,"column":63}},"1290":{"start":{"line":3187,"column":6},"end":{"line":3210,"column":7}},"1291":{"start":{"line":3188,"column":8},"end":{"line":3209,"column":9}},"1292":{"start":{"line":3190,"column":10},"end":{"line":3190,"column":40}},"1293":{"start":{"line":3191,"column":10},"end":{"line":3193,"column":11}},"1294":{"start":{"line":3192,"column":12},"end":{"line":3192,"column":31}},"1295":{"start":{"line":3194,"column":10},"end":{"line":3198,"column":13}},"1296":{"start":{"line":3199,"column":15},"end":{"line":3209,"column":9}},"1297":{"start":{"line":3201,"column":10},"end":{"line":3201,"column":42}},"1298":{"start":{"line":3204,"column":10},"end":{"line":3208,"column":12}},"1299":{"start":{"line":3215,"column":2},"end":{"line":3286,"column":3}},"1300":{"start":{"line":3216,"column":4},"end":{"line":3216,"column":37}},"1301":{"start":{"line":3219,"column":4},"end":{"line":3221,"column":5}},"1302":{"start":{"line":3220,"column":6},"end":{"line":3220,"column":15}},"1303":{"start":{"line":3224,"column":4},"end":{"line":3224,"column":35}},"1304":{"start":{"line":3225,"column":4},"end":{"line":3283,"column":5}},"1305":{"start":{"line":3226,"column":6},"end":{"line":3226,"column":32}},"1306":{"start":{"line":3227,"column":6},"end":{"line":3227,"column":28}},"1307":{"start":{"line":3228,"column":6},"end":{"line":3228,"column":36}},"1308":{"start":{"line":3229,"column":6},"end":{"line":3229,"column":29}},"1309":{"start":{"line":3230,"column":6},"end":{"line":3230,"column":20}},"1310":{"start":{"line":3231,"column":6},"end":{"line":3231,"column":25}},"1311":{"start":{"line":3239,"column":6},"end":{"line":3239,"column":50}},"1312":{"start":{"line":3240,"column":6},"end":{"line":3260,"column":7}},"1313":{"start":{"line":3246,"column":8},"end":{"line":3246,"column":38}},"1314":{"start":{"line":3247,"column":8},"end":{"line":3247,"column":36}},"1315":{"start":{"line":3250,"column":8},"end":{"line":3250,"column":44}},"1316":{"start":{"line":3251,"column":8},"end":{"line":3251,"column":26}},"1317":{"start":{"line":3252,"column":8},"end":{"line":3252,"column":34}},"1318":{"start":{"line":3253,"column":8},"end":{"line":3253,"column":27}},"1319":{"start":{"line":3254,"column":8},"end":{"line":3254,"column":48}},"1320":{"start":{"line":3257,"column":8},"end":{"line":3259,"column":9}},"1321":{"start":{"line":3258,"column":10},"end":{"line":3258,"column":16}},"1322":{"start":{"line":3263,"column":6},"end":{"line":3275,"column":7}},"1323":{"start":{"line":3265,"column":8},"end":{"line":3269,"column":9}},"1324":{"start":{"line":3268,"column":10},"end":{"line":3268,"column":19}},"1325":{"start":{"line":3272,"column":8},"end":{"line":3272,"column":53}},"1326":{"start":{"line":3273,"column":8},"end":{"line":3273,"column":19}},"1327":{"start":{"line":3274,"column":8},"end":{"line":3274,"column":24}},"1328":{"start":{"line":3278,"column":6},"end":{"line":3278,"column":25}},"1329":{"start":{"line":3279,"column":6},"end":{"line":3279,"column":37}},"1330":{"start":{"line":3280,"column":6},"end":{"line":3282,"column":7}},"1331":{"start":{"line":3281,"column":8},"end":{"line":3281,"column":41}},"1332":{"start":{"line":3285,"column":4},"end":{"line":3285,"column":22}},"1333":{"start":{"line":3288,"column":2},"end":{"line":3288,"column":18}},"1334":{"start":{"line":3289,"column":2},"end":{"line":3289,"column":50}},"1335":{"start":{"line":3290,"column":2},"end":{"line":3309,"column":3}},"1336":{"start":{"line":3291,"column":4},"end":{"line":3291,"column":30}},"1337":{"start":{"line":3292,"column":4},"end":{"line":3292,"column":37}},"1338":{"start":{"line":3293,"column":4},"end":{"line":3304,"column":5}},"1339":{"start":{"line":3294,"column":6},"end":{"line":3294,"column":38}},"1340":{"start":{"line":3295,"column":6},"end":{"line":3295,"column":42}},"1341":{"start":{"line":3296,"column":6},"end":{"line":3296,"column":54}},"1342":{"start":{"line":3297,"column":6},"end":{"line":3303,"column":7}},"1343":{"start":{"line":3298,"column":8},"end":{"line":3298,"column":47}},"1344":{"start":{"line":3300,"column":8},"end":{"line":3302,"column":9}},"1345":{"start":{"line":3301,"column":10},"end":{"line":3301,"column":28}},"1346":{"start":{"line":3306,"column":4},"end":{"line":3308,"column":5}},"1347":{"start":{"line":3307,"column":6},"end":{"line":3307,"column":24}},"1348":{"start":{"line":3311,"column":2},"end":{"line":3311,"column":25}},"1349":{"start":{"line":3322,"column":0},"end":{"line":3338,"column":2}},"1350":{"start":{"line":3324,"column":2},"end":{"line":3324,"column":43}},"1351":{"start":{"line":3325,"column":2},"end":{"line":3325,"column":33}},"1352":{"start":{"line":3326,"column":2},"end":{"line":3326,"column":53}},"1353":{"start":{"line":3328,"column":2},"end":{"line":3328,"column":19}},"1354":{"start":{"line":3329,"column":2},"end":{"line":3329,"column":47}},"1355":{"start":{"line":3330,"column":2},"end":{"line":3336,"column":3}},"1356":{"start":{"line":3331,"column":4},"end":{"line":3331,"column":34}},"1357":{"start":{"line":3333,"column":4},"end":{"line":3335,"column":5}},"1358":{"start":{"line":3334,"column":6},"end":{"line":3334,"column":76}},"1359":{"start":{"line":3337,"column":2},"end":{"line":3337,"column":17}},"1360":{"start":{"line":3349,"column":0},"end":{"line":3478,"column":2}},"1361":{"start":{"line":3351,"column":2},"end":{"line":3354,"column":3}},"1362":{"start":{"line":3353,"column":4},"end":{"line":3353,"column":36}},"1363":{"start":{"line":3355,"column":2},"end":{"line":3355,"column":56}},"1364":{"start":{"line":3358,"column":2},"end":{"line":3360,"column":3}},"1365":{"start":{"line":3359,"column":4},"end":{"line":3359,"column":29}},"1366":{"start":{"line":3364,"column":2},"end":{"line":3364,"column":23}},"1367":{"start":{"line":3365,"column":2},"end":{"line":3475,"column":3}},"1368":{"start":{"line":3366,"column":4},"end":{"line":3366,"column":22}},"1369":{"start":{"line":3369,"column":4},"end":{"line":3372,"column":5}},"1370":{"start":{"line":3370,"column":6},"end":{"line":3370,"column":53}},"1371":{"start":{"line":3371,"column":6},"end":{"line":3371,"column":15}},"1372":{"start":{"line":3375,"column":4},"end":{"line":3377,"column":5}},"1373":{"start":{"line":3376,"column":6},"end":{"line":3376,"column":28}},"1374":{"start":{"line":3380,"column":4},"end":{"line":3384,"column":5}},"1375":{"start":{"line":3381,"column":6},"end":{"line":3383,"column":77}},"1376":{"start":{"line":3387,"column":4},"end":{"line":3393,"column":5}},"1377":{"start":{"line":3388,"column":6},"end":{"line":3388,"column":62}},"1378":{"start":{"line":3389,"column":6},"end":{"line":3392,"column":7}},"1379":{"start":{"line":3390,"column":8},"end":{"line":3390,"column":34}},"1380":{"start":{"line":3391,"column":8},"end":{"line":3391,"column":17}},"1381":{"start":{"line":3396,"column":4},"end":{"line":3396,"column":21}},"1382":{"start":{"line":3397,"column":4},"end":{"line":3397,"column":24}},"1383":{"start":{"line":3400,"column":4},"end":{"line":3400,"column":21}},"1384":{"start":{"line":3403,"column":4},"end":{"line":3426,"column":5}},"1385":{"start":{"line":3404,"column":6},"end":{"line":3404,"column":30}},"1386":{"start":{"line":3407,"column":6},"end":{"line":3419,"column":7}},"1387":{"start":{"line":3408,"column":8},"end":{"line":3408,"column":20}},"1388":{"start":{"line":3409,"column":13},"end":{"line":3419,"column":7}},"1389":{"start":{"line":3410,"column":8},"end":{"line":3413,"column":74}},"1390":{"start":{"line":3414,"column":13},"end":{"line":3419,"column":7}},"1391":{"start":{"line":3415,"column":8},"end":{"line":3418,"column":74}},"1392":{"start":{"line":3421,"column":6},"end":{"line":3423,"column":7}},"1393":{"start":{"line":3422,"column":8},"end":{"line":3422,"column":44}},"1394":{"start":{"line":3424,"column":6},"end":{"line":3424,"column":27}},"1395":{"start":{"line":3425,"column":6},"end":{"line":3425,"column":30}},"1396":{"start":{"line":3429,"column":4},"end":{"line":3447,"column":5}},"1397":{"start":{"line":3430,"column":6},"end":{"line":3430,"column":32}},"1398":{"start":{"line":3431,"column":6},"end":{"line":3445,"column":7}},"1399":{"start":{"line":3432,"column":8},"end":{"line":3432,"column":30}},"1400":{"start":{"line":3433,"column":13},"end":{"line":3445,"column":7}},"1401":{"start":{"line":3434,"column":8},"end":{"line":3437,"column":79}},"1402":{"start":{"line":3438,"column":13},"end":{"line":3445,"column":7}},"1403":{"start":{"line":3439,"column":8},"end":{"line":3442,"column":79}},"1404":{"start":{"line":3444,"column":8},"end":{"line":3444,"column":31}},"1405":{"start":{"line":3446,"column":6},"end":{"line":3446,"column":31}},"1406":{"start":{"line":3450,"column":4},"end":{"line":3464,"column":5}},"1407":{"start":{"line":3451,"column":6},"end":{"line":3451,"column":35}},"1408":{"start":{"line":3452,"column":6},"end":{"line":3462,"column":7}},"1409":{"start":{"line":3453,"column":8},"end":{"line":3453,"column":33}},"1410":{"start":{"line":3454,"column":13},"end":{"line":3462,"column":7}},"1411":{"start":{"line":3455,"column":8},"end":{"line":3459,"column":60}},"1412":{"start":{"line":3461,"column":8},"end":{"line":3461,"column":48}},"1413":{"start":{"line":3463,"column":6},"end":{"line":3463,"column":34}},"1414":{"start":{"line":3467,"column":4},"end":{"line":3469,"column":5}},"1415":{"start":{"line":3468,"column":6},"end":{"line":3468,"column":53}},"1416":{"start":{"line":3472,"column":4},"end":{"line":3474,"column":5}},"1417":{"start":{"line":3473,"column":6},"end":{"line":3473,"column":55}},"1418":{"start":{"line":3477,"column":2},"end":{"line":3477,"column":14}},"1419":{"start":{"line":3487,"column":0},"end":{"line":3515,"column":1}},"1420":{"start":{"line":3488,"column":2},"end":{"line":3488,"column":16}},"1421":{"start":{"line":3489,"column":2},"end":{"line":3489,"column":45}},"1422":{"start":{"line":3490,"column":2},"end":{"line":3513,"column":3}},"1423":{"start":{"line":3491,"column":4},"end":{"line":3491,"column":23}},"1424":{"start":{"line":3492,"column":4},"end":{"line":3492,"column":31}},"1425":{"start":{"line":3493,"column":4},"end":{"line":3495,"column":5}},"1426":{"start":{"line":3494,"column":6},"end":{"line":3494,"column":18}},"1427":{"start":{"line":3496,"column":4},"end":{"line":3512,"column":5}},"1428":{"start":{"line":3497,"column":6},"end":{"line":3497,"column":25}},"1429":{"start":{"line":3498,"column":6},"end":{"line":3501,"column":7}},"1430":{"start":{"line":3500,"column":10},"end":{"line":3500,"column":19}},"1431":{"start":{"line":3502,"column":6},"end":{"line":3507,"column":7}},"1432":{"start":{"line":3503,"column":8},"end":{"line":3506,"column":74}},"1433":{"start":{"line":3508,"column":6},"end":{"line":3511,"column":9}},"1434":{"start":{"line":3514,"column":2},"end":{"line":3514,"column":14}},"1435":{"start":{"line":3525,"column":0},"end":{"line":3549,"column":1}},"1436":{"start":{"line":3526,"column":2},"end":{"line":3546,"column":3}},"1437":{"start":{"line":3527,"column":4},"end":{"line":3529,"column":5}},"1438":{"start":{"line":3528,"column":6},"end":{"line":3528,"column":56}},"1439":{"start":{"line":3530,"column":9},"end":{"line":3546,"column":3}},"1440":{"start":{"line":3531,"column":4},"end":{"line":3531,"column":66}},"1441":{"start":{"line":3532,"column":9},"end":{"line":3546,"column":3}},"1442":{"start":{"line":3534,"column":4},"end":{"line":3536,"column":5}},"1443":{"start":{"line":3535,"column":6},"end":{"line":3535,"column":52}},"1444":{"start":{"line":3539,"column":4},"end":{"line":3539,"column":43}},"1445":{"start":{"line":3540,"column":4},"end":{"line":3545,"column":5}},"1446":{"start":{"line":3541,"column":6},"end":{"line":3541,"column":25}},"1447":{"start":{"line":3542,"column":6},"end":{"line":3544,"column":7}},"1448":{"start":{"line":3543,"column":8},"end":{"line":3543,"column":62}},"1449":{"start":{"line":3548,"column":2},"end":{"line":3548,"column":17}},"1450":{"start":{"line":3561,"column":0},"end":{"line":3612,"column":1}},"1451":{"start":{"line":3563,"column":2},"end":{"line":3565,"column":3}},"1452":{"start":{"line":3564,"column":4},"end":{"line":3564,"column":16}},"1453":{"start":{"line":3568,"column":2},"end":{"line":3568,"column":78}},"1454":{"start":{"line":3569,"column":2},"end":{"line":3573,"column":3}},"1455":{"start":{"line":3570,"column":4},"end":{"line":3570,"column":54}},"1456":{"start":{"line":3571,"column":9},"end":{"line":3573,"column":3}},"1457":{"start":{"line":3572,"column":4},"end":{"line":3572,"column":67}},"1458":{"start":{"line":3576,"column":2},"end":{"line":3576,"column":72}},"1459":{"start":{"line":3579,"column":2},"end":{"line":3581,"column":3}},"1460":{"start":{"line":3580,"column":4},"end":{"line":3580,"column":63}},"1461":{"start":{"line":3583,"column":2},"end":{"line":3585,"column":3}},"1462":{"start":{"line":3584,"column":4},"end":{"line":3584,"column":76}},"1463":{"start":{"line":3588,"column":2},"end":{"line":3590,"column":3}},"1464":{"start":{"line":3589,"column":4},"end":{"line":3589,"column":17}},"1465":{"start":{"line":3592,"column":2},"end":{"line":3592,"column":16}},"1466":{"start":{"line":3594,"column":2},"end":{"line":3604,"column":3}},"1467":{"start":{"line":3596,"column":4},"end":{"line":3596,"column":25}},"1468":{"start":{"line":3597,"column":9},"end":{"line":3604,"column":3}},"1469":{"start":{"line":3599,"column":4},"end":{"line":3600,"column":46}},"1470":{"start":{"line":3601,"column":4},"end":{"line":3603,"column":5}},"1471":{"start":{"line":3602,"column":6},"end":{"line":3602,"column":35}},"1472":{"start":{"line":3606,"column":2},"end":{"line":3608,"column":3}},"1473":{"start":{"line":3607,"column":4},"end":{"line":3607,"column":29}},"1474":{"start":{"line":3609,"column":2},"end":{"line":3609,"column":25}},"1475":{"start":{"line":3611,"column":2},"end":{"line":3611,"column":14}},"1476":{"start":{"line":3623,"column":0},"end":{"line":3684,"column":1}},"1477":{"start":{"line":3624,"column":2},"end":{"line":3624,"column":16}},"1478":{"start":{"line":3626,"column":2},"end":{"line":3626,"column":38}},"1479":{"start":{"line":3627,"column":2},"end":{"line":3681,"column":3}},"1480":{"start":{"line":3628,"column":4},"end":{"line":3628,"column":20}},"1481":{"start":{"line":3629,"column":4},"end":{"line":3629,"column":25}},"1482":{"start":{"line":3630,"column":4},"end":{"line":3630,"column":46}},"1483":{"start":{"line":3631,"column":4},"end":{"line":3680,"column":5}},"1484":{"start":{"line":3632,"column":6},"end":{"line":3632,"column":36}},"1485":{"start":{"line":3633,"column":6},"end":{"line":3633,"column":33}},"1486":{"start":{"line":3634,"column":6},"end":{"line":3638,"column":7}},"1487":{"start":{"line":3635,"column":8},"end":{"line":3635,"column":28}},"1488":{"start":{"line":3636,"column":13},"end":{"line":3638,"column":7}},"1489":{"start":{"line":3637,"column":8},"end":{"line":3637,"column":17}},"1490":{"start":{"line":3640,"column":6},"end":{"line":3679,"column":7}},"1491":{"start":{"line":3641,"column":8},"end":{"line":3641,"column":29}},"1492":{"start":{"line":3644,"column":8},"end":{"line":3644,"column":25}},"1493":{"start":{"line":3645,"column":8},"end":{"line":3645,"column":71}},"1494":{"start":{"line":3646,"column":8},"end":{"line":3646,"column":27}},"1495":{"start":{"line":3649,"column":8},"end":{"line":3651,"column":9}},"1496":{"start":{"line":3650,"column":10},"end":{"line":3650,"column":19}},"1497":{"start":{"line":3654,"column":8},"end":{"line":3654,"column":27}},"1498":{"start":{"line":3655,"column":8},"end":{"line":3655,"column":79}},"1499":{"start":{"line":3656,"column":8},"end":{"line":3656,"column":35}},"1500":{"start":{"line":3659,"column":8},"end":{"line":3661,"column":9}},"1501":{"start":{"line":3660,"column":10},"end":{"line":3660,"column":19}},"1502":{"start":{"line":3664,"column":8},"end":{"line":3666,"column":9}},"1503":{"start":{"line":3665,"column":10},"end":{"line":3665,"column":19}},"1504":{"start":{"line":3669,"column":8},"end":{"line":3678,"column":9}},"1505":{"start":{"line":3670,"column":10},"end":{"line":3670,"column":70}},"1506":{"start":{"line":3673,"column":10},"end":{"line":3673,"column":42}},"1507":{"start":{"line":3675,"column":10},"end":{"line":3677,"column":11}},"1508":{"start":{"line":3676,"column":12},"end":{"line":3676,"column":80}},"1509":{"start":{"line":3683,"column":2},"end":{"line":3683,"column":14}},"1510":{"start":{"line":3696,"column":0},"end":{"line":3720,"column":1}},"1511":{"start":{"line":3697,"column":2},"end":{"line":3697,"column":46}},"1512":{"start":{"line":3698,"column":2},"end":{"line":3698,"column":44}},"1513":{"start":{"line":3699,"column":2},"end":{"line":3699,"column":42}},"1514":{"start":{"line":3701,"column":2},"end":{"line":3717,"column":3}},"1515":{"start":{"line":3702,"column":4},"end":{"line":3702,"column":23}},"1516":{"start":{"line":3704,"column":4},"end":{"line":3704,"column":64}},"1517":{"start":{"line":3705,"column":4},"end":{"line":3705,"column":78}},"1518":{"start":{"line":3707,"column":4},"end":{"line":3707,"column":24}},"1519":{"start":{"line":3708,"column":4},"end":{"line":3708,"column":22}},"1520":{"start":{"line":3709,"column":4},"end":{"line":3709,"column":36}},"1521":{"start":{"line":3712,"column":4},"end":{"line":3714,"column":5}},"1522":{"start":{"line":3713,"column":6},"end":{"line":3713,"column":77}},"1523":{"start":{"line":3716,"column":4},"end":{"line":3716,"column":21}},"1524":{"start":{"line":3719,"column":2},"end":{"line":3719,"column":70}},"1525":{"start":{"line":3730,"column":0},"end":{"line":3774,"column":1}},"1526":{"start":{"line":3731,"column":2},"end":{"line":3731,"column":18}},"1527":{"start":{"line":3734,"column":2},"end":{"line":3766,"column":3}},"1528":{"start":{"line":3735,"column":4},"end":{"line":3735,"column":28}},"1529":{"start":{"line":3736,"column":4},"end":{"line":3736,"column":31}},"1530":{"start":{"line":3737,"column":4},"end":{"line":3737,"column":41}},"1531":{"start":{"line":3740,"column":4},"end":{"line":3760,"column":5}},"1532":{"start":{"line":3741,"column":6},"end":{"line":3741,"column":38}},"1533":{"start":{"line":3742,"column":6},"end":{"line":3742,"column":48}},"1534":{"start":{"line":3743,"column":11},"end":{"line":3760,"column":5}},"1535":{"start":{"line":3744,"column":6},"end":{"line":3746,"column":7}},"1536":{"start":{"line":3745,"column":8},"end":{"line":3745,"column":34}},"1537":{"start":{"line":3748,"column":6},"end":{"line":3748,"column":74}},"1538":{"start":{"line":3749,"column":6},"end":{"line":3749,"column":47}},"1539":{"start":{"line":3750,"column":11},"end":{"line":3760,"column":5}},"1540":{"start":{"line":3751,"column":6},"end":{"line":3751,"column":38}},"1541":{"start":{"line":3752,"column":6},"end":{"line":3752,"column":48}},"1542":{"start":{"line":3753,"column":11},"end":{"line":3760,"column":5}},"1543":{"start":{"line":3754,"column":6},"end":{"line":3754,"column":27}},"1544":{"start":{"line":3755,"column":6},"end":{"line":3755,"column":51}},"1545":{"start":{"line":3756,"column":6},"end":{"line":3756,"column":42}},"1546":{"start":{"line":3758,"column":6},"end":{"line":3758,"column":27}},"1547":{"start":{"line":3759,"column":6},"end":{"line":3759,"column":47}},"1548":{"start":{"line":3763,"column":4},"end":{"line":3763,"column":50}},"1549":{"start":{"line":3764,"column":4},"end":{"line":3764,"column":66}},"1550":{"start":{"line":3765,"column":4},"end":{"line":3765,"column":22}},"1551":{"start":{"line":3769,"column":2},"end":{"line":3771,"column":3}},"1552":{"start":{"line":3770,"column":4},"end":{"line":3770,"column":16}},"1553":{"start":{"line":3773,"column":2},"end":{"line":3773,"column":16}},"1554":{"start":{"line":3784,"column":0},"end":{"line":3830,"column":1}},"1555":{"start":{"line":3786,"column":2},"end":{"line":3788,"column":3}},"1556":{"start":{"line":3787,"column":4},"end":{"line":3787,"column":28}},"1557":{"start":{"line":3791,"column":2},"end":{"line":3791,"column":33}},"1558":{"start":{"line":3794,"column":2},"end":{"line":3827,"column":3}},"1559":{"start":{"line":3795,"column":4},"end":{"line":3795,"column":35}},"1560":{"start":{"line":3797,"column":4},"end":{"line":3797,"column":26}},"1561":{"start":{"line":3798,"column":4},"end":{"line":3800,"column":5}},"1562":{"start":{"line":3799,"column":6},"end":{"line":3799,"column":24}},"1563":{"start":{"line":3802,"column":4},"end":{"line":3826,"column":5}},"1564":{"start":{"line":3803,"column":6},"end":{"line":3818,"column":7}},"1565":{"start":{"line":3804,"column":8},"end":{"line":3808,"column":9}},"1566":{"start":{"line":3805,"column":10},"end":{"line":3805,"column":32}},"1567":{"start":{"line":3806,"column":15},"end":{"line":3808,"column":9}},"1568":{"start":{"line":3807,"column":10},"end":{"line":3807,"column":33}},"1569":{"start":{"line":3809,"column":13},"end":{"line":3818,"column":7}},"1570":{"start":{"line":3810,"column":8},"end":{"line":3817,"column":9}},"1571":{"start":{"line":3811,"column":10},"end":{"line":3811,"column":47}},"1572":{"start":{"line":3812,"column":10},"end":{"line":3814,"column":11}},"1573":{"start":{"line":3813,"column":12},"end":{"line":3813,"column":31}},"1574":{"start":{"line":3815,"column":15},"end":{"line":3817,"column":9}},"1575":{"start":{"line":3816,"column":10},"end":{"line":3816,"column":54}},"1576":{"start":{"line":3820,"column":6},"end":{"line":3823,"column":7}},"1577":{"start":{"line":3822,"column":8},"end":{"line":3822,"column":29}},"1578":{"start":{"line":3824,"column":11},"end":{"line":3826,"column":5}},"1579":{"start":{"line":3825,"column":6},"end":{"line":3825,"column":27}},"1580":{"start":{"line":3829,"column":2},"end":{"line":3829,"column":14}},"1581":{"start":{"line":3840,"column":0},"end":{"line":3855,"column":1}},"1582":{"start":{"line":3841,"column":2},"end":{"line":3841,"column":49}},"1583":{"start":{"line":3842,"column":2},"end":{"line":3847,"column":3}},"1584":{"start":{"line":3843,"column":4},"end":{"line":3843,"column":24}},"1585":{"start":{"line":3844,"column":4},"end":{"line":3846,"column":5}},"1586":{"start":{"line":3845,"column":6},"end":{"line":3845,"column":19}},"1587":{"start":{"line":3848,"column":2},"end":{"line":3850,"column":3}},"1588":{"start":{"line":3849,"column":4},"end":{"line":3849,"column":17}},"1589":{"start":{"line":3851,"column":2},"end":{"line":3853,"column":3}},"1590":{"start":{"line":3852,"column":4},"end":{"line":3852,"column":17}},"1591":{"start":{"line":3854,"column":2},"end":{"line":3854,"column":14}},"1592":{"start":{"line":3859,"column":0},"end":{"line":4567,"column":5}},"1593":{"start":{"line":3861,"column":0},"end":{"line":3861,"column":61}},"1594":{"start":{"line":3863,"column":0},"end":{"line":3890,"column":2}},"1595":{"start":{"line":3864,"column":2},"end":{"line":3864,"column":26}},"1596":{"start":{"line":3865,"column":2},"end":{"line":3865,"column":26}},"1597":{"start":{"line":3866,"column":2},"end":{"line":3866,"column":25}},"1598":{"start":{"line":3867,"column":2},"end":{"line":3867,"column":26}},"1599":{"start":{"line":3868,"column":2},"end":{"line":3868,"column":29}},"1600":{"start":{"line":3869,"column":2},"end":{"line":3869,"column":56}},"1601":{"start":{"line":3870,"column":2},"end":{"line":3870,"column":18}},"1602":{"start":{"line":3871,"column":2},"end":{"line":3871,"column":21}},"1603":{"start":{"line":3872,"column":2},"end":{"line":3876,"column":3}},"1604":{"start":{"line":3873,"column":4},"end":{"line":3873,"column":56}},"1605":{"start":{"line":3875,"column":4},"end":{"line":3875,"column":34}},"1606":{"start":{"line":3877,"column":2},"end":{"line":3881,"column":3}},"1607":{"start":{"line":3878,"column":4},"end":{"line":3878,"column":62}},"1608":{"start":{"line":3880,"column":4},"end":{"line":3880,"column":47}},"1609":{"start":{"line":3882,"column":2},"end":{"line":3882,"column":26}},"1610":{"start":{"line":3883,"column":2},"end":{"line":3883,"column":31}},"1611":{"start":{"line":3884,"column":2},"end":{"line":3889,"column":3}},"1612":{"start":{"line":3885,"column":4},"end":{"line":3885,"column":48}},"1613":{"start":{"line":3888,"column":4},"end":{"line":3888,"column":33}},"1614":{"start":{"line":3893,"column":0},"end":{"line":3934,"column":2}},"1615":{"start":{"line":3894,"column":2},"end":{"line":3894,"column":31}},"1616":{"start":{"line":3896,"column":2},"end":{"line":3899,"column":3}},"1617":{"start":{"line":3897,"column":4},"end":{"line":3898,"column":75}},"1618":{"start":{"line":3901,"column":2},"end":{"line":3933,"column":7}},"1619":{"start":{"line":3902,"column":4},"end":{"line":3907,"column":5}},"1620":{"start":{"line":3904,"column":6},"end":{"line":3904,"column":25}},"1621":{"start":{"line":3905,"column":6},"end":{"line":3905,"column":31}},"1622":{"start":{"line":3906,"column":6},"end":{"line":3906,"column":35}},"1623":{"start":{"line":3910,"column":4},"end":{"line":3910,"column":35}},"1624":{"start":{"line":3911,"column":4},"end":{"line":3914,"column":5}},"1625":{"start":{"line":3912,"column":6},"end":{"line":3912,"column":44}},"1626":{"start":{"line":3913,"column":6},"end":{"line":3913,"column":62}},"1627":{"start":{"line":3917,"column":4},"end":{"line":3926,"column":5}},"1628":{"start":{"line":3918,"column":6},"end":{"line":3918,"column":30}},"1629":{"start":{"line":3919,"column":6},"end":{"line":3919,"column":23}},"1630":{"start":{"line":3920,"column":6},"end":{"line":3920,"column":28}},"1631":{"start":{"line":3921,"column":6},"end":{"line":3925,"column":9}},"1632":{"start":{"line":3922,"column":8},"end":{"line":3922,"column":25}},"1633":{"start":{"line":3923,"column":8},"end":{"line":3923,"column":30}},"1634":{"start":{"line":3924,"column":8},"end":{"line":3924,"column":30}},"1635":{"start":{"line":3930,"column":4},"end":{"line":3930,"column":23}},"1636":{"start":{"line":3931,"column":4},"end":{"line":3931,"column":29}},"1637":{"start":{"line":3932,"column":4},"end":{"line":3932,"column":30}},"1638":{"start":{"line":3937,"column":0},"end":{"line":3976,"column":2}},"1639":{"start":{"line":3938,"column":2},"end":{"line":3938,"column":18}},"1640":{"start":{"line":3939,"column":2},"end":{"line":3939,"column":15}},"1641":{"start":{"line":3940,"column":2},"end":{"line":3940,"column":14}},"1642":{"start":{"line":3941,"column":2},"end":{"line":3941,"column":13}},"1643":{"start":{"line":3942,"column":2},"end":{"line":3963,"column":3}},"1644":{"start":{"line":3943,"column":4},"end":{"line":3943,"column":29}},"1645":{"start":{"line":3944,"column":4},"end":{"line":3951,"column":6}},"1646":{"start":{"line":3945,"column":6},"end":{"line":3947,"column":7}},"1647":{"start":{"line":3946,"column":8},"end":{"line":3946,"column":21}},"1648":{"start":{"line":3948,"column":6},"end":{"line":3948,"column":39}},"1649":{"start":{"line":3949,"column":6},"end":{"line":3949,"column":25}},"1650":{"start":{"line":3950,"column":6},"end":{"line":3950,"column":18}},"1651":{"start":{"line":3953,"column":4},"end":{"line":3953,"column":37}},"1652":{"start":{"line":3954,"column":4},"end":{"line":3954,"column":25}},"1653":{"start":{"line":3955,"column":4},"end":{"line":3962,"column":6}},"1654":{"start":{"line":3956,"column":6},"end":{"line":3958,"column":7}},"1655":{"start":{"line":3957,"column":8},"end":{"line":3957,"column":21}},"1656":{"start":{"line":3959,"column":6},"end":{"line":3959,"column":33}},"1657":{"start":{"line":3960,"column":6},"end":{"line":3960,"column":46}},"1658":{"start":{"line":3961,"column":6},"end":{"line":3961,"column":18}},"1659":{"start":{"line":3965,"column":2},"end":{"line":3975,"column":7}},"1660":{"start":{"line":3966,"column":4},"end":{"line":3968,"column":5}},"1661":{"start":{"line":3967,"column":6},"end":{"line":3967,"column":27}},"1662":{"start":{"line":3969,"column":4},"end":{"line":3973,"column":5}},"1663":{"start":{"line":3970,"column":6},"end":{"line":3972,"column":9}},"1664":{"start":{"line":3971,"column":8},"end":{"line":3971,"column":50}},"1665":{"start":{"line":3974,"column":4},"end":{"line":3974,"column":15}},"1666":{"start":{"line":3979,"column":0},"end":{"line":3984,"column":2}},"1667":{"start":{"line":3980,"column":2},"end":{"line":3980,"column":18}},"1668":{"start":{"line":3981,"column":2},"end":{"line":3983,"column":15}},"1669":{"start":{"line":3982,"column":4},"end":{"line":3982,"column":30}},"1670":{"start":{"line":3987,"column":0},"end":{"line":3998,"column":2}},"1671":{"start":{"line":3988,"column":2},"end":{"line":3988,"column":18}},"1672":{"start":{"line":3989,"column":2},"end":{"line":3997,"column":7}},"1673":{"start":{"line":3990,"column":4},"end":{"line":3992,"column":5}},"1674":{"start":{"line":3991,"column":6},"end":{"line":3991,"column":27}},"1675":{"start":{"line":3993,"column":4},"end":{"line":3995,"column":5}},"1676":{"start":{"line":3994,"column":6},"end":{"line":3994,"column":24}},"1677":{"start":{"line":3996,"column":4},"end":{"line":3996,"column":26}},"1678":{"start":{"line":4001,"column":0},"end":{"line":4233,"column":2}},"1679":{"start":{"line":4002,"column":2},"end":{"line":4002,"column":18}},"1680":{"start":{"line":4003,"column":2},"end":{"line":4003,"column":45}},"1681":{"start":{"line":4004,"column":2},"end":{"line":4004,"column":13}},"1682":{"start":{"line":4007,"column":2},"end":{"line":4013,"column":3}},"1683":{"start":{"line":4008,"column":4},"end":{"line":4012,"column":5}},"1684":{"start":{"line":4009,"column":6},"end":{"line":4011,"column":64}},"1685":{"start":{"line":4018,"column":2},"end":{"line":4018,"column":25}},"1686":{"start":{"line":4020,"column":2},"end":{"line":4232,"column":5}},"1687":{"start":{"line":4023,"column":6},"end":{"line":4054,"column":19}},"1688":{"start":{"line":4024,"column":8},"end":{"line":4026,"column":9}},"1689":{"start":{"line":4025,"column":10},"end":{"line":4025,"column":27}},"1690":{"start":{"line":4027,"column":8},"end":{"line":4053,"column":21}},"1691":{"start":{"line":4028,"column":10},"end":{"line":4034,"column":11}},"1692":{"start":{"line":4029,"column":12},"end":{"line":4033,"column":13}},"1693":{"start":{"line":4030,"column":14},"end":{"line":4030,"column":65}},"1694":{"start":{"line":4032,"column":14},"end":{"line":4032,"column":58}},"1695":{"start":{"line":4035,"column":10},"end":{"line":4035,"column":32}},"1696":{"start":{"line":4040,"column":10},"end":{"line":4051,"column":13}},"1697":{"start":{"line":4041,"column":12},"end":{"line":4043,"column":13}},"1698":{"start":{"line":4042,"column":14},"end":{"line":4042,"column":21}},"1699":{"start":{"line":4044,"column":12},"end":{"line":4044,"column":37}},"1700":{"start":{"line":4045,"column":12},"end":{"line":4050,"column":13}},"1701":{"start":{"line":4046,"column":14},"end":{"line":4046,"column":54}},"1702":{"start":{"line":4048,"column":14},"end":{"line":4048,"column":39}},"1703":{"start":{"line":4049,"column":14},"end":{"line":4049,"column":55}},"1704":{"start":{"line":4052,"column":10},"end":{"line":4052,"column":21}},"1705":{"start":{"line":4063,"column":6},"end":{"line":4063,"column":24}},"1706":{"start":{"line":4066,"column":6},"end":{"line":4127,"column":19}},"1707":{"start":{"line":4066,"column":31},"end":{"line":4066,"column":45}},"1708":{"start":{"line":4068,"column":8},"end":{"line":4068,"column":23}},"1709":{"start":{"line":4071,"column":8},"end":{"line":4071,"column":35}},"1710":{"start":{"line":4073,"column":8},"end":{"line":4126,"column":21}},"1711":{"start":{"line":4077,"column":12},"end":{"line":4093,"column":25}},"1712":{"start":{"line":4080,"column":14},"end":{"line":4092,"column":17}},"1713":{"start":{"line":4081,"column":16},"end":{"line":4083,"column":17}},"1714":{"start":{"line":4082,"column":18},"end":{"line":4082,"column":39}},"1715":{"start":{"line":4086,"column":16},"end":{"line":4090,"column":17}},"1716":{"start":{"line":4087,"column":18},"end":{"line":4087,"column":55}},"1717":{"start":{"line":4089,"column":18},"end":{"line":4089,"column":53}},"1718":{"start":{"line":4091,"column":16},"end":{"line":4091,"column":27}},"1719":{"start":{"line":4098,"column":12},"end":{"line":4098,"column":67}},"1720":{"start":{"line":4099,"column":12},"end":{"line":4124,"column":25}},"1721":{"start":{"line":4102,"column":14},"end":{"line":4102,"column":55}},"1722":{"start":{"line":4103,"column":14},"end":{"line":4105,"column":15}},"1723":{"start":{"line":4104,"column":16},"end":{"line":4104,"column":34}},"1724":{"start":{"line":4112,"column":14},"end":{"line":4112,"column":33}},"1725":{"start":{"line":4113,"column":14},"end":{"line":4113,"column":45}},"1726":{"start":{"line":4116,"column":14},"end":{"line":4116,"column":39}},"1727":{"start":{"line":4119,"column":14},"end":{"line":4119,"column":49}},"1728":{"start":{"line":4122,"column":14},"end":{"line":4122,"column":28}},"1729":{"start":{"line":4123,"column":14},"end":{"line":4123,"column":25}},"1730":{"start":{"line":4132,"column":6},"end":{"line":4132,"column":61}},"1731":{"start":{"line":4133,"column":6},"end":{"line":4188,"column":19}},"1732":{"start":{"line":4136,"column":8},"end":{"line":4136,"column":30}},"1733":{"start":{"line":4139,"column":8},"end":{"line":4139,"column":49}},"1734":{"start":{"line":4140,"column":8},"end":{"line":4187,"column":21}},"1735":{"start":{"line":4142,"column":12},"end":{"line":4167,"column":25}},"1736":{"start":{"line":4145,"column":14},"end":{"line":4147,"column":15}},"1737":{"start":{"line":4146,"column":16},"end":{"line":4146,"column":34}},"1738":{"start":{"line":4151,"column":14},"end":{"line":4151,"column":55}},"1739":{"start":{"line":4156,"column":14},"end":{"line":4156,"column":31}},"1740":{"start":{"line":4160,"column":14},"end":{"line":4166,"column":17}},"1741":{"start":{"line":4161,"column":16},"end":{"line":4163,"column":17}},"1742":{"start":{"line":4162,"column":18},"end":{"line":4162,"column":39}},"1743":{"start":{"line":4164,"column":16},"end":{"line":4164,"column":42}},"1744":{"start":{"line":4165,"column":16},"end":{"line":4165,"column":27}},"1745":{"start":{"line":4172,"column":12},"end":{"line":4174,"column":15}},"1746":{"start":{"line":4173,"column":14},"end":{"line":4173,"column":74}},"1747":{"start":{"line":4175,"column":12},"end":{"line":4185,"column":25}},"1748":{"start":{"line":4181,"column":14},"end":{"line":4183,"column":15}},"1749":{"start":{"line":4182,"column":16},"end":{"line":4182,"column":53}},"1750":{"start":{"line":4184,"column":14},"end":{"line":4184,"column":25}},"1751":{"start":{"line":4196,"column":6},"end":{"line":4196,"column":26}},"1752":{"start":{"line":4197,"column":6},"end":{"line":4228,"column":19}},"1753":{"start":{"line":4199,"column":10},"end":{"line":4213,"column":23}},"1754":{"start":{"line":4204,"column":12},"end":{"line":4209,"column":15}},"1755":{"start":{"line":4205,"column":14},"end":{"line":4208,"column":15}},"1756":{"start":{"line":4207,"column":16},"end":{"line":4207,"column":78}},"1757":{"start":{"line":4211,"column":12},"end":{"line":4211,"column":44}},"1758":{"start":{"line":4212,"column":12},"end":{"line":4212,"column":23}},"1759":{"start":{"line":4217,"column":10},"end":{"line":4217,"column":28}},"1760":{"start":{"line":4220,"column":10},"end":{"line":4223,"column":11}},"1761":{"start":{"line":4221,"column":12},"end":{"line":4221,"column":41}},"1762":{"start":{"line":4222,"column":12},"end":{"line":4222,"column":30}},"1763":{"start":{"line":4225,"column":10},"end":{"line":4225,"column":53}},"1764":{"start":{"line":4226,"column":10},"end":{"line":4226,"column":21}},"1765":{"start":{"line":4231,"column":4},"end":{"line":4231,"column":26}},"1766":{"start":{"line":4236,"column":0},"end":{"line":4281,"column":2}},"1767":{"start":{"line":4237,"column":2},"end":{"line":4237,"column":18}},"1768":{"start":{"line":4240,"column":2},"end":{"line":4240,"column":36}},"1769":{"start":{"line":4241,"column":2},"end":{"line":4243,"column":3}},"1770":{"start":{"line":4242,"column":4},"end":{"line":4242,"column":37}},"1771":{"start":{"line":4247,"column":2},"end":{"line":4247,"column":18}},"1772":{"start":{"line":4251,"column":2},"end":{"line":4251,"column":25}},"1773":{"start":{"line":4254,"column":2},"end":{"line":4280,"column":5}},"1774":{"start":{"line":4260,"column":4},"end":{"line":4260,"column":43}},"1775":{"start":{"line":4261,"column":4},"end":{"line":4266,"column":7}},"1776":{"start":{"line":4265,"column":6},"end":{"line":4265,"column":70}},"1777":{"start":{"line":4267,"column":4},"end":{"line":4267,"column":32}},"1778":{"start":{"line":4268,"column":4},"end":{"line":4268,"column":15}},"1779":{"start":{"line":4270,"column":4},"end":{"line":4272,"column":5}},"1780":{"start":{"line":4271,"column":6},"end":{"line":4271,"column":27}},"1781":{"start":{"line":4274,"column":4},"end":{"line":4274,"column":18}},"1782":{"start":{"line":4278,"column":4},"end":{"line":4278,"column":60}},"1783":{"start":{"line":4279,"column":4},"end":{"line":4279,"column":30}},"1784":{"start":{"line":4284,"column":0},"end":{"line":4291,"column":2}},"1785":{"start":{"line":4285,"column":2},"end":{"line":4287,"column":3}},"1786":{"start":{"line":4286,"column":4},"end":{"line":4286,"column":21}},"1787":{"start":{"line":4288,"column":2},"end":{"line":4288,"column":32}},"1788":{"start":{"line":4289,"column":2},"end":{"line":4289,"column":61}},"1789":{"start":{"line":4290,"column":2},"end":{"line":4290,"column":19}},"1790":{"start":{"line":4294,"column":0},"end":{"line":4344,"column":2}},"1791":{"start":{"line":4296,"column":2},"end":{"line":4296,"column":18}},"1792":{"start":{"line":4302,"column":2},"end":{"line":4302,"column":9}},"1793":{"start":{"line":4303,"column":2},"end":{"line":4343,"column":5}},"1794":{"start":{"line":4305,"column":6},"end":{"line":4308,"column":7}},"1795":{"start":{"line":4306,"column":8},"end":{"line":4306,"column":49}},"1796":{"start":{"line":4307,"column":8},"end":{"line":4307,"column":26}},"1797":{"start":{"line":4309,"column":6},"end":{"line":4312,"column":7}},"1798":{"start":{"line":4310,"column":8},"end":{"line":4310,"column":35}},"1799":{"start":{"line":4311,"column":8},"end":{"line":4311,"column":26}},"1800":{"start":{"line":4313,"column":6},"end":{"line":4319,"column":9}},"1801":{"start":{"line":4314,"column":8},"end":{"line":4316,"column":9}},"1802":{"start":{"line":4315,"column":10},"end":{"line":4315,"column":31}},"1803":{"start":{"line":4317,"column":8},"end":{"line":4317,"column":18}},"1804":{"start":{"line":4318,"column":8},"end":{"line":4318,"column":19}},"1805":{"start":{"line":4322,"column":4},"end":{"line":4324,"column":5}},"1806":{"start":{"line":4323,"column":6},"end":{"line":4323,"column":27}},"1807":{"start":{"line":4328,"column":4},"end":{"line":4328,"column":42}},"1808":{"start":{"line":4329,"column":4},"end":{"line":4329,"column":24}},"1809":{"start":{"line":4333,"column":4},"end":{"line":4335,"column":5}},"1810":{"start":{"line":4334,"column":6},"end":{"line":4334,"column":48}},"1811":{"start":{"line":4338,"column":4},"end":{"line":4338,"column":18}},"1812":{"start":{"line":4342,"column":4},"end":{"line":4342,"column":39}},"1813":{"start":{"line":4347,"column":0},"end":{"line":4349,"column":2}},"1814":{"start":{"line":4348,"column":2},"end":{"line":4348,"column":42}},"1815":{"start":{"line":4352,"column":0},"end":{"line":4502,"column":2}},"1816":{"start":{"line":4353,"column":2},"end":{"line":4353,"column":18}},"1817":{"start":{"line":4358,"column":2},"end":{"line":4358,"column":20}},"1818":{"start":{"line":4359,"column":2},"end":{"line":4359,"column":40}},"1819":{"start":{"line":4360,"column":2},"end":{"line":4501,"column":5}},"1820":{"start":{"line":4362,"column":6},"end":{"line":4368,"column":9}},"1821":{"start":{"line":4363,"column":8},"end":{"line":4365,"column":9}},"1822":{"start":{"line":4364,"column":10},"end":{"line":4364,"column":31}},"1823":{"start":{"line":4366,"column":8},"end":{"line":4366,"column":31}},"1824":{"start":{"line":4367,"column":8},"end":{"line":4367,"column":19}},"1825":{"start":{"line":4376,"column":6},"end":{"line":4376,"column":53}},"1826":{"start":{"line":4377,"column":6},"end":{"line":4495,"column":19}},"1827":{"start":{"line":4379,"column":8},"end":{"line":4379,"column":24}},"1828":{"start":{"line":4382,"column":8},"end":{"line":4382,"column":28}},"1829":{"start":{"line":4385,"column":8},"end":{"line":4385,"column":25}},"1830":{"start":{"line":4388,"column":8},"end":{"line":4388,"column":61}},"1831":{"start":{"line":4389,"column":8},"end":{"line":4494,"column":11}},"1832":{"start":{"line":4390,"column":23},"end":{"line":4390,"column":51}},"1833":{"start":{"line":4392,"column":10},"end":{"line":4392,"column":46}},"1834":{"start":{"line":4395,"column":10},"end":{"line":4395,"column":42}},"1835":{"start":{"line":4398,"column":10},"end":{"line":4398,"column":24}},"1836":{"start":{"line":4402,"column":10},"end":{"line":4402,"column":33}},"1837":{"start":{"line":4404,"column":10},"end":{"line":4482,"column":30}},"1838":{"start":{"line":4407,"column":14},"end":{"line":4434,"column":27}},"1839":{"start":{"line":4410,"column":16},"end":{"line":4422,"column":17}},"1840":{"start":{"line":4411,"column":18},"end":{"line":4411,"column":62}},"1841":{"start":{"line":4416,"column":18},"end":{"line":4418,"column":19}},"1842":{"start":{"line":4417,"column":20},"end":{"line":4417,"column":48}},"1843":{"start":{"line":4421,"column":18},"end":{"line":4421,"column":52}},"1844":{"start":{"line":4428,"column":16},"end":{"line":4432,"column":17}},"1845":{"start":{"line":4431,"column":18},"end":{"line":4431,"column":43}},"1846":{"start":{"line":4433,"column":16},"end":{"line":4433,"column":27}},"1847":{"start":{"line":4438,"column":14},"end":{"line":4470,"column":27}},"1848":{"start":{"line":4442,"column":16},"end":{"line":4469,"column":19}},"1849":{"start":{"line":4444,"column":18},"end":{"line":4446,"column":19}},"1850":{"start":{"line":4445,"column":20},"end":{"line":4445,"column":41}},"1851":{"start":{"line":4450,"column":18},"end":{"line":4450,"column":52}},"1852":{"start":{"line":4453,"column":18},"end":{"line":4453,"column":50}},"1853":{"start":{"line":4457,"column":18},"end":{"line":4457,"column":45}},"1854":{"start":{"line":4463,"column":18},"end":{"line":4467,"column":19}},"1855":{"start":{"line":4466,"column":20},"end":{"line":4466,"column":45}},"1856":{"start":{"line":4468,"column":18},"end":{"line":4468,"column":29}},"1857":{"start":{"line":4476,"column":14},"end":{"line":4479,"column":15}},"1858":{"start":{"line":4477,"column":16},"end":{"line":4477,"column":34}},"1859":{"start":{"line":4478,"column":16},"end":{"line":4478,"column":42}},"1860":{"start":{"line":4480,"column":14},"end":{"line":4480,"column":25}},"1861":{"start":{"line":4484,"column":10},"end":{"line":4486,"column":11}},"1862":{"start":{"line":4485,"column":12},"end":{"line":4485,"column":33}},"1863":{"start":{"line":4489,"column":10},"end":{"line":4489,"column":32}},"1864":{"start":{"line":4492,"column":10},"end":{"line":4492,"column":32}},"1865":{"start":{"line":4493,"column":10},"end":{"line":4493,"column":21}},"1866":{"start":{"line":4500,"column":4},"end":{"line":4500,"column":55}},"1867":{"start":{"line":4505,"column":0},"end":{"line":4552,"column":2}},"1868":{"start":{"line":4506,"column":2},"end":{"line":4506,"column":18}},"1869":{"start":{"line":4510,"column":2},"end":{"line":4510,"column":25}},"1870":{"start":{"line":4514,"column":2},"end":{"line":4514,"column":43}},"1871":{"start":{"line":4517,"column":2},"end":{"line":4551,"column":5}},"1872":{"start":{"line":4521,"column":4},"end":{"line":4548,"column":17}},"1873":{"start":{"line":4522,"column":6},"end":{"line":4525,"column":7}},"1874":{"start":{"line":4524,"column":8},"end":{"line":4524,"column":26}},"1875":{"start":{"line":4531,"column":6},"end":{"line":4531,"column":36}},"1876":{"start":{"line":4532,"column":6},"end":{"line":4532,"column":36}},"1877":{"start":{"line":4533,"column":6},"end":{"line":4547,"column":9}},"1878":{"start":{"line":4535,"column":8},"end":{"line":4537,"column":9}},"1879":{"start":{"line":4536,"column":10},"end":{"line":4536,"column":31}},"1880":{"start":{"line":4541,"column":8},"end":{"line":4545,"column":9}},"1881":{"start":{"line":4542,"column":10},"end":{"line":4542,"column":44}},"1882":{"start":{"line":4544,"column":10},"end":{"line":4544,"column":42}},"1883":{"start":{"line":4546,"column":8},"end":{"line":4546,"column":19}},"1884":{"start":{"line":4550,"column":4},"end":{"line":4550,"column":33}},"1885":{"start":{"line":4555,"column":0},"end":{"line":4563,"column":2}},"1886":{"start":{"line":4556,"column":2},"end":{"line":4562,"column":3}},"1887":{"start":{"line":4558,"column":4},"end":{"line":4560,"column":5}},"1888":{"start":{"line":4559,"column":6},"end":{"line":4559,"column":15}},"1889":{"start":{"line":4561,"column":4},"end":{"line":4561,"column":29}},"1890":{"start":{"line":4565,"column":0},"end":{"line":4565,"column":17}},"1891":{"start":{"line":4571,"column":0},"end":{"line":4651,"column":5}},"1892":{"start":{"line":4573,"column":0},"end":{"line":4576,"column":2}},"1893":{"start":{"line":4574,"column":2},"end":{"line":4574,"column":32}},"1894":{"start":{"line":4575,"column":2},"end":{"line":4575,"column":26}},"1895":{"start":{"line":4577,"column":0},"end":{"line":4577,"column":38}},"1896":{"start":{"line":4580,"column":0},"end":{"line":4591,"column":2}},"1897":{"start":{"line":4581,"column":2},"end":{"line":4583,"column":3}},"1898":{"start":{"line":4582,"column":4},"end":{"line":4582,"column":21}},"1899":{"start":{"line":4584,"column":2},"end":{"line":4584,"column":32}},"1900":{"start":{"line":4585,"column":2},"end":{"line":4589,"column":3}},"1901":{"start":{"line":4586,"column":4},"end":{"line":4586,"column":28}},"1902":{"start":{"line":4588,"column":4},"end":{"line":4588,"column":63}},"1903":{"start":{"line":4590,"column":2},"end":{"line":4590,"column":19}},"1904":{"start":{"line":4594,"column":0},"end":{"line":4596,"column":2}},"1905":{"start":{"line":4595,"column":2},"end":{"line":4595,"column":30}},"1906":{"start":{"line":4599,"column":0},"end":{"line":4647,"column":2}},"1907":{"start":{"line":4600,"column":2},"end":{"line":4600,"column":18}},"1908":{"start":{"line":4604,"column":2},"end":{"line":4604,"column":25}},"1909":{"start":{"line":4608,"column":2},"end":{"line":4608,"column":43}},"1910":{"start":{"line":4611,"column":2},"end":{"line":4646,"column":5}},"1911":{"start":{"line":4616,"column":4},"end":{"line":4616,"column":17}},"1912":{"start":{"line":4617,"column":4},"end":{"line":4617,"column":16}},"1913":{"start":{"line":4618,"column":4},"end":{"line":4631,"column":5}},"1914":{"start":{"line":4619,"column":6},"end":{"line":4619,"column":35}},"1915":{"start":{"line":4620,"column":6},"end":{"line":4620,"column":21}},"1916":{"start":{"line":4621,"column":11},"end":{"line":4631,"column":5}},"1917":{"start":{"line":4626,"column":6},"end":{"line":4626,"column":34}},"1918":{"start":{"line":4627,"column":6},"end":{"line":4627,"column":21}},"1919":{"start":{"line":4630,"column":6},"end":{"line":4630,"column":24}},"1920":{"start":{"line":4635,"column":4},"end":{"line":4643,"column":7}},"1921":{"start":{"line":4637,"column":6},"end":{"line":4641,"column":7}},"1922":{"start":{"line":4638,"column":8},"end":{"line":4638,"column":42}},"1923":{"start":{"line":4640,"column":8},"end":{"line":4640,"column":40}},"1924":{"start":{"line":4642,"column":6},"end":{"line":4642,"column":17}},"1925":{"start":{"line":4645,"column":4},"end":{"line":4645,"column":33}},"1926":{"start":{"line":4649,"column":0},"end":{"line":4649,"column":17}},"1927":{"start":{"line":4664,"column":0},"end":{"line":4825,"column":1}},"1928":{"start":{"line":4666,"column":2},"end":{"line":4671,"column":3}},"1929":{"start":{"line":4667,"column":4},"end":{"line":4669,"column":5}},"1930":{"start":{"line":4668,"column":6},"end":{"line":4668,"column":71}},"1931":{"start":{"line":4670,"column":4},"end":{"line":4670,"column":11}},"1932":{"start":{"line":4674,"column":2},"end":{"line":4679,"column":3}},"1933":{"start":{"line":4675,"column":4},"end":{"line":4677,"column":5}},"1934":{"start":{"line":4676,"column":6},"end":{"line":4676,"column":23}},"1935":{"start":{"line":4678,"column":4},"end":{"line":4678,"column":11}},"1936":{"start":{"line":4682,"column":2},"end":{"line":4694,"column":3}},"1937":{"start":{"line":4683,"column":4},"end":{"line":4689,"column":5}},"1938":{"start":{"line":4684,"column":6},"end":{"line":4684,"column":32}},"1939":{"start":{"line":4686,"column":6},"end":{"line":4688,"column":7}},"1940":{"start":{"line":4687,"column":8},"end":{"line":4687,"column":51}},"1941":{"start":{"line":4690,"column":4},"end":{"line":4692,"column":5}},"1942":{"start":{"line":4691,"column":6},"end":{"line":4691,"column":23}},"1943":{"start":{"line":4693,"column":4},"end":{"line":4693,"column":11}},"1944":{"start":{"line":4699,"column":2},"end":{"line":4707,"column":3}},"1945":{"start":{"line":4700,"column":4},"end":{"line":4700,"column":31}},"1946":{"start":{"line":4701,"column":4},"end":{"line":4706,"column":5}},"1947":{"start":{"line":4702,"column":6},"end":{"line":4702,"column":26}},"1948":{"start":{"line":4703,"column":6},"end":{"line":4705,"column":7}},"1949":{"start":{"line":4704,"column":8},"end":{"line":4704,"column":27}},"1950":{"start":{"line":4710,"column":2},"end":{"line":4712,"column":3}},"1951":{"start":{"line":4711,"column":4},"end":{"line":4711,"column":75}},"1952":{"start":{"line":4715,"column":2},"end":{"line":4717,"column":3}},"1953":{"start":{"line":4716,"column":4},"end":{"line":4716,"column":29}},"1954":{"start":{"line":4720,"column":2},"end":{"line":4720,"column":31}},"1955":{"start":{"line":4721,"column":2},"end":{"line":4721,"column":54}},"1956":{"start":{"line":4722,"column":2},"end":{"line":4722,"column":24}},"1957":{"start":{"line":4723,"column":2},"end":{"line":4723,"column":45}},"1958":{"start":{"line":4724,"column":2},"end":{"line":4824,"column":3}},"1959":{"start":{"line":4725,"column":4},"end":{"line":4725,"column":34}},"1960":{"start":{"line":4728,"column":4},"end":{"line":4730,"column":5}},"1961":{"start":{"line":4729,"column":6},"end":{"line":4729,"column":15}},"1962":{"start":{"line":4733,"column":4},"end":{"line":4751,"column":5}},"1963":{"start":{"line":4734,"column":6},"end":{"line":4734,"column":41}},"1964":{"start":{"line":4735,"column":6},"end":{"line":4735,"column":41}},"1965":{"start":{"line":4736,"column":6},"end":{"line":4749,"column":7}},"1966":{"start":{"line":4737,"column":8},"end":{"line":4737,"column":48}},"1967":{"start":{"line":4738,"column":8},"end":{"line":4748,"column":9}},"1968":{"start":{"line":4739,"column":10},"end":{"line":4739,"column":31}},"1969":{"start":{"line":4740,"column":10},"end":{"line":4740,"column":37}},"1970":{"start":{"line":4741,"column":10},"end":{"line":4743,"column":11}},"1971":{"start":{"line":4742,"column":12},"end":{"line":4742,"column":46}},"1972":{"start":{"line":4744,"column":10},"end":{"line":4744,"column":64}},"1973":{"start":{"line":4745,"column":10},"end":{"line":4747,"column":60}},"1974":{"start":{"line":4750,"column":6},"end":{"line":4750,"column":15}},"1975":{"start":{"line":4754,"column":4},"end":{"line":4762,"column":5}},"1976":{"start":{"line":4756,"column":6},"end":{"line":4758,"column":7}},"1977":{"start":{"line":4757,"column":8},"end":{"line":4757,"column":26}},"1978":{"start":{"line":4759,"column":6},"end":{"line":4759,"column":51}},"1979":{"start":{"line":4760,"column":6},"end":{"line":4760,"column":57}},"1980":{"start":{"line":4761,"column":6},"end":{"line":4761,"column":15}},"1981":{"start":{"line":4765,"column":4},"end":{"line":4776,"column":5}},"1982":{"start":{"line":4766,"column":6},"end":{"line":4773,"column":7}},"1983":{"start":{"line":4769,"column":8},"end":{"line":4772,"column":59}},"1984":{"start":{"line":4774,"column":6},"end":{"line":4774,"column":42}},"1985":{"start":{"line":4775,"column":6},"end":{"line":4775,"column":15}},"1986":{"start":{"line":4779,"column":4},"end":{"line":4779,"column":34}},"1987":{"start":{"line":4782,"column":4},"end":{"line":4784,"column":5}},"1988":{"start":{"line":4783,"column":6},"end":{"line":4783,"column":40}},"1989":{"start":{"line":4787,"column":4},"end":{"line":4790,"column":5}},"1990":{"start":{"line":4788,"column":6},"end":{"line":4788,"column":70}},"1991":{"start":{"line":4789,"column":6},"end":{"line":4789,"column":15}},"1992":{"start":{"line":4791,"column":4},"end":{"line":4823,"column":5}},"1993":{"start":{"line":4792,"column":6},"end":{"line":4792,"column":26}},"1994":{"start":{"line":4794,"column":6},"end":{"line":4797,"column":7}},"1995":{"start":{"line":4796,"column":8},"end":{"line":4796,"column":58}},"1996":{"start":{"line":4800,"column":6},"end":{"line":4822,"column":7}},"1997":{"start":{"line":4802,"column":8},"end":{"line":4802,"column":69}},"1998":{"start":{"line":4805,"column":8},"end":{"line":4807,"column":58}},"1999":{"start":{"line":4808,"column":8},"end":{"line":4808,"column":53}},"2000":{"start":{"line":4809,"column":13},"end":{"line":4822,"column":7}},"2001":{"start":{"line":4811,"column":8},"end":{"line":4811,"column":23}},"2002":{"start":{"line":4812,"column":8},"end":{"line":4812,"column":71}},"2003":{"start":{"line":4813,"column":8},"end":{"line":4813,"column":29}},"2004":{"start":{"line":4814,"column":8},"end":{"line":4816,"column":58}},"2005":{"start":{"line":4819,"column":8},"end":{"line":4819,"column":55}},"2006":{"start":{"line":4820,"column":8},"end":{"line":4821,"column":80}},"2007":{"start":{"line":4827,"column":0},"end":{"line":4857,"column":1}},"2008":{"start":{"line":4829,"column":2},"end":{"line":4829,"column":40}},"2009":{"start":{"line":4830,"column":2},"end":{"line":4830,"column":46}},"2010":{"start":{"line":4831,"column":2},"end":{"line":4855,"column":3}},"2011":{"start":{"line":4832,"column":4},"end":{"line":4832,"column":34}},"2012":{"start":{"line":4833,"column":4},"end":{"line":4835,"column":5}},"2013":{"start":{"line":4834,"column":6},"end":{"line":4834,"column":15}},"2014":{"start":{"line":4836,"column":4},"end":{"line":4836,"column":36}},"2015":{"start":{"line":4837,"column":4},"end":{"line":4837,"column":42}},"2016":{"start":{"line":4838,"column":4},"end":{"line":4845,"column":5}},"2017":{"start":{"line":4839,"column":6},"end":{"line":4842,"column":8}},"2018":{"start":{"line":4843,"column":11},"end":{"line":4845,"column":5}},"2019":{"start":{"line":4844,"column":6},"end":{"line":4844,"column":29}},"2020":{"start":{"line":4846,"column":4},"end":{"line":4846,"column":34}},"2021":{"start":{"line":4847,"column":4},"end":{"line":4847,"column":42}},"2022":{"start":{"line":4848,"column":4},"end":{"line":4854,"column":5}},"2023":{"start":{"line":4849,"column":6},"end":{"line":4849,"column":34}},"2024":{"start":{"line":4851,"column":6},"end":{"line":4853,"column":7}},"2025":{"start":{"line":4852,"column":8},"end":{"line":4852,"column":25}},"2026":{"start":{"line":4856,"column":2},"end":{"line":4856,"column":22}},"2027":{"start":{"line":4868,"column":0},"end":{"line":5022,"column":1}},"2028":{"start":{"line":4870,"column":2},"end":{"line":4870,"column":24}},"2029":{"start":{"line":4871,"column":2},"end":{"line":4871,"column":19}},"2030":{"start":{"line":4874,"column":2},"end":{"line":4874,"column":30}},"2031":{"start":{"line":4875,"column":2},"end":{"line":4879,"column":4}},"2032":{"start":{"line":4882,"column":2},"end":{"line":4882,"column":63}},"2033":{"start":{"line":4885,"column":2},"end":{"line":4885,"column":40}},"2034":{"start":{"line":4886,"column":2},"end":{"line":5021,"column":3}},"2035":{"start":{"line":4887,"column":4},"end":{"line":4887,"column":22}},"2036":{"start":{"line":4888,"column":4},"end":{"line":4888,"column":30}},"2037":{"start":{"line":4890,"column":4},"end":{"line":4898,"column":5}},"2038":{"start":{"line":4896,"column":6},"end":{"line":4896,"column":56}},"2039":{"start":{"line":4897,"column":6},"end":{"line":4897,"column":15}},"2040":{"start":{"line":4903,"column":4},"end":{"line":4905,"column":5}},"2041":{"start":{"line":4904,"column":6},"end":{"line":4904,"column":30}},"2042":{"start":{"line":4908,"column":4},"end":{"line":4908,"column":20}},"2043":{"start":{"line":4909,"column":4},"end":{"line":4909,"column":23}},"2044":{"start":{"line":4910,"column":4},"end":{"line":4910,"column":28}},"2045":{"start":{"line":4916,"column":4},"end":{"line":4920,"column":5}},"2046":{"start":{"line":4918,"column":6},"end":{"line":4918,"column":48}},"2047":{"start":{"line":4919,"column":6},"end":{"line":4919,"column":15}},"2048":{"start":{"line":4923,"column":4},"end":{"line":4929,"column":5}},"2049":{"start":{"line":4925,"column":6},"end":{"line":4927,"column":7}},"2050":{"start":{"line":4926,"column":8},"end":{"line":4926,"column":32}},"2051":{"start":{"line":4928,"column":6},"end":{"line":4928,"column":68}},"2052":{"start":{"line":4932,"column":4},"end":{"line":4932,"column":37}},"2053":{"start":{"line":4935,"column":4},"end":{"line":4935,"column":44}},"2054":{"start":{"line":4936,"column":4},"end":{"line":4988,"column":5}},"2055":{"start":{"line":4937,"column":6},"end":{"line":4937,"column":26}},"2056":{"start":{"line":4940,"column":6},"end":{"line":4943,"column":7}},"2057":{"start":{"line":4941,"column":8},"end":{"line":4941,"column":45}},"2058":{"start":{"line":4942,"column":8},"end":{"line":4942,"column":17}},"2059":{"start":{"line":4946,"column":6},"end":{"line":4948,"column":7}},"2060":{"start":{"line":4947,"column":8},"end":{"line":4947,"column":17}},"2061":{"start":{"line":4951,"column":6},"end":{"line":4951,"column":34}},"2062":{"start":{"line":4952,"column":6},"end":{"line":4987,"column":7}},"2063":{"start":{"line":4953,"column":8},"end":{"line":4953,"column":28}},"2064":{"start":{"line":4956,"column":8},"end":{"line":4976,"column":9}},"2065":{"start":{"line":4958,"column":10},"end":{"line":4958,"column":35}},"2066":{"start":{"line":4959,"column":10},"end":{"line":4959,"column":46}},"2067":{"start":{"line":4962,"column":10},"end":{"line":4962,"column":31}},"2068":{"start":{"line":4963,"column":10},"end":{"line":4974,"column":11}},"2069":{"start":{"line":4964,"column":12},"end":{"line":4964,"column":23}},"2070":{"start":{"line":4965,"column":12},"end":{"line":4973,"column":13}},"2071":{"start":{"line":4966,"column":14},"end":{"line":4967,"column":71}},"2072":{"start":{"line":4969,"column":14},"end":{"line":4969,"column":65}},"2073":{"start":{"line":4972,"column":14},"end":{"line":4972,"column":56}},"2074":{"start":{"line":4975,"column":10},"end":{"line":4975,"column":19}},"2075":{"start":{"line":4978,"column":8},"end":{"line":4986,"column":9}},"2076":{"start":{"line":4980,"column":10},"end":{"line":4981,"column":55}},"2077":{"start":{"line":4982,"column":10},"end":{"line":4982,"column":60}},"2078":{"start":{"line":4985,"column":10},"end":{"line":4985,"column":51}},"2079":{"start":{"line":4991,"column":4},"end":{"line":4991,"column":42}},"2080":{"start":{"line":4992,"column":4},"end":{"line":5014,"column":5}},"2081":{"start":{"line":4993,"column":6},"end":{"line":4993,"column":26}},"2082":{"start":{"line":4996,"column":6},"end":{"line":4998,"column":7}},"2083":{"start":{"line":4997,"column":8},"end":{"line":4997,"column":17}},"2084":{"start":{"line":5002,"column":6},"end":{"line":5002,"column":32}},"2085":{"start":{"line":5003,"column":6},"end":{"line":5003,"column":70}},"2086":{"start":{"line":5004,"column":6},"end":{"line":5013,"column":7}},"2087":{"start":{"line":5005,"column":8},"end":{"line":5005,"column":31}},"2088":{"start":{"line":5006,"column":8},"end":{"line":5008,"column":9}},"2089":{"start":{"line":5007,"column":10},"end":{"line":5007,"column":46}},"2090":{"start":{"line":5009,"column":8},"end":{"line":5011,"column":9}},"2091":{"start":{"line":5010,"column":10},"end":{"line":5010,"column":32}},"2092":{"start":{"line":5012,"column":8},"end":{"line":5012,"column":49}},"2093":{"start":{"line":5017,"column":4},"end":{"line":5017,"column":46}},"2094":{"start":{"line":5020,"column":4},"end":{"line":5020,"column":29}},"2095":{"start":{"line":5034,"column":0},"end":{"line":5042,"column":1}},"2096":{"start":{"line":5035,"column":2},"end":{"line":5035,"column":17}},"2097":{"start":{"line":5036,"column":2},"end":{"line":5040,"column":3}},"2098":{"start":{"line":5037,"column":4},"end":{"line":5039,"column":5}},"2099":{"start":{"line":5038,"column":6},"end":{"line":5038,"column":38}},"2100":{"start":{"line":5041,"column":2},"end":{"line":5041,"column":17}},"2101":{"start":{"line":5053,"column":0},"end":{"line":5060,"column":1}},"2102":{"start":{"line":5054,"column":2},"end":{"line":5058,"column":3}},"2103":{"start":{"line":5055,"column":4},"end":{"line":5057,"column":5}},"2104":{"start":{"line":5056,"column":6},"end":{"line":5056,"column":18}},"2105":{"start":{"line":5059,"column":2},"end":{"line":5059,"column":15}},"2106":{"start":{"line":5071,"column":0},"end":{"line":5088,"column":1}},"2107":{"start":{"line":5072,"column":2},"end":{"line":5072,"column":24}},"2108":{"start":{"line":5073,"column":2},"end":{"line":5073,"column":62}},"2109":{"start":{"line":5074,"column":2},"end":{"line":5086,"column":3}},"2110":{"start":{"line":5079,"column":4},"end":{"line":5085,"column":5}},"2111":{"start":{"line":5080,"column":6},"end":{"line":5080,"column":21}},"2112":{"start":{"line":5081,"column":11},"end":{"line":5085,"column":5}},"2113":{"start":{"line":5082,"column":6},"end":{"line":5082,"column":22}},"2114":{"start":{"line":5083,"column":11},"end":{"line":5085,"column":5}},"2115":{"start":{"line":5084,"column":6},"end":{"line":5084,"column":21}},"2116":{"start":{"line":5087,"column":2},"end":{"line":5087,"column":14}},"2117":{"start":{"line":5095,"column":0},"end":{"line":5101,"column":1}},"2118":{"start":{"line":5096,"column":2},"end":{"line":5100,"column":3}},"2119":{"start":{"line":5097,"column":4},"end":{"line":5099,"column":44}},"2120":{"start":{"line":5113,"column":0},"end":{"line":5124,"column":1}},"2121":{"start":{"line":5115,"column":2},"end":{"line":5115,"column":16}},"2122":{"start":{"line":5116,"column":2},"end":{"line":5122,"column":3}},"2123":{"start":{"line":5117,"column":4},"end":{"line":5117,"column":25}},"2124":{"start":{"line":5118,"column":4},"end":{"line":5118,"column":37}},"2125":{"start":{"line":5119,"column":4},"end":{"line":5121,"column":5}},"2126":{"start":{"line":5120,"column":6},"end":{"line":5120,"column":25}},"2127":{"start":{"line":5123,"column":2},"end":{"line":5123,"column":14}},"2128":{"start":{"line":5135,"column":0},"end":{"line":5192,"column":1}},"2129":{"start":{"line":5137,"column":2},"end":{"line":5147,"column":3}},"2130":{"start":{"line":5139,"column":4},"end":{"line":5139,"column":31}},"2131":{"start":{"line":5140,"column":4},"end":{"line":5145,"column":5}},"2132":{"start":{"line":5142,"column":6},"end":{"line":5144,"column":7}},"2133":{"start":{"line":5143,"column":8},"end":{"line":5143,"column":20}},"2134":{"start":{"line":5146,"column":4},"end":{"line":5146,"column":17}},"2135":{"start":{"line":5150,"column":2},"end":{"line":5150,"column":22}},"2136":{"start":{"line":5151,"column":2},"end":{"line":5151,"column":26}},"2137":{"start":{"line":5152,"column":2},"end":{"line":5188,"column":3}},"2138":{"start":{"line":5153,"column":4},"end":{"line":5168,"column":5}},"2139":{"start":{"line":5155,"column":6},"end":{"line":5157,"column":7}},"2140":{"start":{"line":5156,"column":8},"end":{"line":5156,"column":17}},"2141":{"start":{"line":5158,"column":6},"end":{"line":5158,"column":23}},"2142":{"start":{"line":5161,"column":6},"end":{"line":5167,"column":7}},"2143":{"start":{"line":5162,"column":8},"end":{"line":5164,"column":9}},"2144":{"start":{"line":5163,"column":10},"end":{"line":5163,"column":23}},"2145":{"start":{"line":5165,"column":8},"end":{"line":5165,"column":27}},"2146":{"start":{"line":5166,"column":8},"end":{"line":5166,"column":17}},"2147":{"start":{"line":5170,"column":4},"end":{"line":5170,"column":21}},"2148":{"start":{"line":5172,"column":4},"end":{"line":5180,"column":5}},"2149":{"start":{"line":5174,"column":6},"end":{"line":5177,"column":7}},"2150":{"start":{"line":5176,"column":8},"end":{"line":5176,"column":21}},"2151":{"start":{"line":5178,"column":6},"end":{"line":5178,"column":25}},"2152":{"start":{"line":5179,"column":6},"end":{"line":5179,"column":15}},"2153":{"start":{"line":5183,"column":4},"end":{"line":5184,"column":35}},"2154":{"start":{"line":5185,"column":4},"end":{"line":5187,"column":5}},"2155":{"start":{"line":5186,"column":6},"end":{"line":5186,"column":19}},"2156":{"start":{"line":5191,"column":2},"end":{"line":5191,"column":33}},"2157":{"start":{"line":5200,"column":0},"end":{"line":5240,"column":1}},"2158":{"start":{"line":5202,"column":2},"end":{"line":5202,"column":34}},"2159":{"start":{"line":5203,"column":2},"end":{"line":5203,"column":25}},"2160":{"start":{"line":5204,"column":2},"end":{"line":5204,"column":28}},"2161":{"start":{"line":5205,"column":2},"end":{"line":5205,"column":32}},"2162":{"start":{"line":5208,"column":2},"end":{"line":5208,"column":28}},"2163":{"start":{"line":5211,"column":2},"end":{"line":5224,"column":3}},"2164":{"start":{"line":5213,"column":4},"end":{"line":5218,"column":5}},"2165":{"start":{"line":5214,"column":6},"end":{"line":5217,"column":7}},"2166":{"start":{"line":5215,"column":8},"end":{"line":5215,"column":28}},"2167":{"start":{"line":5216,"column":8},"end":{"line":5216,"column":14}},"2168":{"start":{"line":5221,"column":4},"end":{"line":5221,"column":46}},"2169":{"start":{"line":5222,"column":4},"end":{"line":5222,"column":79}},"2170":{"start":{"line":5223,"column":4},"end":{"line":5223,"column":76}},"2171":{"start":{"line":5227,"column":2},"end":{"line":5238,"column":4}},"2172":{"start":{"line":5229,"column":4},"end":{"line":5229,"column":34}},"2173":{"start":{"line":5230,"column":4},"end":{"line":5237,"column":5}},"2174":{"start":{"line":5231,"column":6},"end":{"line":5231,"column":24}},"2175":{"start":{"line":5232,"column":6},"end":{"line":5236,"column":7}},"2176":{"start":{"line":5234,"column":8},"end":{"line":5234,"column":28}},"2177":{"start":{"line":5235,"column":8},"end":{"line":5235,"column":31}},"2178":{"start":{"line":5239,"column":2},"end":{"line":5239,"column":23}},"2179":{"start":{"line":5249,"column":0},"end":{"line":5255,"column":1}},"2180":{"start":{"line":5250,"column":2},"end":{"line":5254,"column":3}},"2181":{"start":{"line":5251,"column":4},"end":{"line":5251,"column":71}},"2182":{"start":{"line":5253,"column":4},"end":{"line":5253,"column":24}},"2183":{"start":{"line":5266,"column":0},"end":{"line":5329,"column":1}},"2184":{"start":{"line":5268,"column":2},"end":{"line":5327,"column":3}},"2185":{"start":{"line":5269,"column":4},"end":{"line":5269,"column":20}},"2186":{"start":{"line":5270,"column":4},"end":{"line":5276,"column":5}},"2187":{"start":{"line":5271,"column":6},"end":{"line":5271,"column":59}},"2188":{"start":{"line":5273,"column":6},"end":{"line":5275,"column":7}},"2189":{"start":{"line":5274,"column":8},"end":{"line":5274,"column":28}},"2190":{"start":{"line":5277,"column":4},"end":{"line":5277,"column":19}},"2191":{"start":{"line":5278,"column":9},"end":{"line":5327,"column":3}},"2192":{"start":{"line":5280,"column":4},"end":{"line":5285,"column":5}},"2193":{"start":{"line":5281,"column":6},"end":{"line":5283,"column":7}},"2194":{"start":{"line":5282,"column":8},"end":{"line":5282,"column":20}},"2195":{"start":{"line":5284,"column":6},"end":{"line":5284,"column":32}},"2196":{"start":{"line":5288,"column":4},"end":{"line":5290,"column":5}},"2197":{"start":{"line":5289,"column":6},"end":{"line":5289,"column":19}},"2198":{"start":{"line":5293,"column":4},"end":{"line":5296,"column":5}},"2199":{"start":{"line":5294,"column":6},"end":{"line":5294,"column":69}},"2200":{"start":{"line":5295,"column":6},"end":{"line":5295,"column":19}},"2201":{"start":{"line":5299,"column":4},"end":{"line":5299,"column":42}},"2202":{"start":{"line":5300,"column":4},"end":{"line":5315,"column":5}},"2203":{"start":{"line":5301,"column":6},"end":{"line":5301,"column":30}},"2204":{"start":{"line":5302,"column":6},"end":{"line":5314,"column":7}},"2205":{"start":{"line":5303,"column":8},"end":{"line":5303,"column":50}},"2206":{"start":{"line":5304,"column":8},"end":{"line":5310,"column":9}},"2207":{"start":{"line":5306,"column":10},"end":{"line":5306,"column":39}},"2208":{"start":{"line":5309,"column":10},"end":{"line":5309,"column":39}},"2209":{"start":{"line":5313,"column":8},"end":{"line":5313,"column":35}},"2210":{"start":{"line":5318,"column":4},"end":{"line":5326,"column":5}},"2211":{"start":{"line":5319,"column":6},"end":{"line":5319,"column":62}},"2212":{"start":{"line":5320,"column":6},"end":{"line":5320,"column":70}},"2213":{"start":{"line":5321,"column":6},"end":{"line":5324,"column":7}},"2214":{"start":{"line":5323,"column":8},"end":{"line":5323,"column":27}},"2215":{"start":{"line":5325,"column":6},"end":{"line":5325,"column":27}},"2216":{"start":{"line":5328,"column":2},"end":{"line":5328,"column":15}},"2217":{"start":{"line":5339,"column":0},"end":{"line":5350,"column":1}},"2218":{"start":{"line":5340,"column":2},"end":{"line":5342,"column":3}},"2219":{"start":{"line":5341,"column":4},"end":{"line":5341,"column":14}},"2220":{"start":{"line":5343,"column":2},"end":{"line":5345,"column":3}},"2221":{"start":{"line":5344,"column":4},"end":{"line":5344,"column":13}},"2222":{"start":{"line":5346,"column":2},"end":{"line":5348,"column":3}},"2223":{"start":{"line":5347,"column":4},"end":{"line":5347,"column":13}},"2224":{"start":{"line":5349,"column":2},"end":{"line":5349,"column":26}},"2225":{"start":{"line":5364,"column":0},"end":{"line":5418,"column":1}},"2226":{"start":{"line":5366,"column":2},"end":{"line":5368,"column":3}},"2227":{"start":{"line":5367,"column":4},"end":{"line":5367,"column":34}},"2228":{"start":{"line":5371,"column":2},"end":{"line":5371,"column":17}},"2229":{"start":{"line":5374,"column":2},"end":{"line":5393,"column":3}},"2230":{"start":{"line":5377,"column":4},"end":{"line":5379,"column":5}},"2231":{"start":{"line":5378,"column":6},"end":{"line":5378,"column":29}},"2232":{"start":{"line":5381,"column":4},"end":{"line":5381,"column":73}},"2233":{"start":{"line":5382,"column":4},"end":{"line":5390,"column":5}},"2234":{"start":{"line":5386,"column":6},"end":{"line":5386,"column":49}},"2235":{"start":{"line":5389,"column":6},"end":{"line":5389,"column":49}},"2236":{"start":{"line":5392,"column":4},"end":{"line":5392,"column":36}},"2237":{"start":{"line":5394,"column":2},"end":{"line":5394,"column":22}},"2238":{"start":{"line":5396,"column":2},"end":{"line":5396,"column":44}},"2239":{"start":{"line":5397,"column":2},"end":{"line":5415,"column":3}},"2240":{"start":{"line":5399,"column":4},"end":{"line":5399,"column":35}},"2241":{"start":{"line":5400,"column":4},"end":{"line":5402,"column":5}},"2242":{"start":{"line":5401,"column":6},"end":{"line":5401,"column":15}},"2243":{"start":{"line":5404,"column":4},"end":{"line":5404,"column":73}},"2244":{"start":{"line":5405,"column":4},"end":{"line":5414,"column":5}},"2245":{"start":{"line":5407,"column":6},"end":{"line":5407,"column":27}},"2246":{"start":{"line":5408,"column":6},"end":{"line":5410,"column":7}},"2247":{"start":{"line":5409,"column":8},"end":{"line":5409,"column":17}},"2248":{"start":{"line":5413,"column":6},"end":{"line":5413,"column":42}},"2249":{"start":{"line":5417,"column":2},"end":{"line":5417,"column":14}},"2250":{"start":{"line":5433,"column":0},"end":{"line":5614,"column":1}},"2251":{"start":{"line":5435,"column":2},"end":{"line":5437,"column":3}},"2252":{"start":{"line":5436,"column":4},"end":{"line":5436,"column":15}},"2253":{"start":{"line":5440,"column":2},"end":{"line":5442,"column":3}},"2254":{"start":{"line":5441,"column":4},"end":{"line":5441,"column":17}},"2255":{"start":{"line":5444,"column":2},"end":{"line":5446,"column":3}},"2256":{"start":{"line":5445,"column":4},"end":{"line":5445,"column":20}},"2257":{"start":{"line":5447,"column":2},"end":{"line":5447,"column":32}},"2258":{"start":{"line":5449,"column":2},"end":{"line":5449,"column":42}},"2259":{"start":{"line":5452,"column":2},"end":{"line":5457,"column":3}},"2260":{"start":{"line":5453,"column":4},"end":{"line":5455,"column":5}},"2261":{"start":{"line":5454,"column":6},"end":{"line":5454,"column":56}},"2262":{"start":{"line":5456,"column":4},"end":{"line":5456,"column":15}},"2263":{"start":{"line":5460,"column":2},"end":{"line":5549,"column":3}},"2264":{"start":{"line":5461,"column":4},"end":{"line":5461,"column":60}},"2265":{"start":{"line":5464,"column":4},"end":{"line":5464,"column":24}},"2266":{"start":{"line":5465,"column":4},"end":{"line":5467,"column":5}},"2267":{"start":{"line":5466,"column":6},"end":{"line":5466,"column":32}},"2268":{"start":{"line":5470,"column":4},"end":{"line":5470,"column":37}},"2269":{"start":{"line":5471,"column":4},"end":{"line":5471,"column":38}},"2270":{"start":{"line":5473,"column":4},"end":{"line":5540,"column":5}},"2271":{"start":{"line":5474,"column":6},"end":{"line":5474,"column":31}},"2272":{"start":{"line":5475,"column":6},"end":{"line":5475,"column":39}},"2273":{"start":{"line":5476,"column":6},"end":{"line":5476,"column":30}},"2274":{"start":{"line":5477,"column":11},"end":{"line":5540,"column":5}},"2275":{"start":{"line":5480,"column":6},"end":{"line":5482,"column":7}},"2276":{"start":{"line":5481,"column":8},"end":{"line":5481,"column":33}},"2277":{"start":{"line":5483,"column":6},"end":{"line":5483,"column":32}},"2278":{"start":{"line":5484,"column":6},"end":{"line":5484,"column":72}},"2279":{"start":{"line":5485,"column":6},"end":{"line":5485,"column":28}},"2280":{"start":{"line":5486,"column":6},"end":{"line":5517,"column":7}},"2281":{"start":{"line":5487,"column":8},"end":{"line":5487,"column":27}},"2282":{"start":{"line":5488,"column":8},"end":{"line":5488,"column":35}},"2283":{"start":{"line":5489,"column":8},"end":{"line":5489,"column":31}},"2284":{"start":{"line":5490,"column":8},"end":{"line":5501,"column":9}},"2285":{"start":{"line":5491,"column":10},"end":{"line":5498,"column":11}},"2286":{"start":{"line":5492,"column":12},"end":{"line":5492,"column":45}},"2287":{"start":{"line":5493,"column":17},"end":{"line":5498,"column":11}},"2288":{"start":{"line":5494,"column":12},"end":{"line":5494,"column":37}},"2289":{"start":{"line":5497,"column":12},"end":{"line":5497,"column":35}},"2290":{"start":{"line":5500,"column":10},"end":{"line":5500,"column":27}},"2291":{"start":{"line":5502,"column":8},"end":{"line":5506,"column":9}},"2292":{"start":{"line":5503,"column":10},"end":{"line":5503,"column":40}},"2293":{"start":{"line":5504,"column":15},"end":{"line":5506,"column":9}},"2294":{"start":{"line":5505,"column":10},"end":{"line":5505,"column":35}},"2295":{"start":{"line":5507,"column":8},"end":{"line":5511,"column":9}},"2296":{"start":{"line":5508,"column":10},"end":{"line":5508,"column":32}},"2297":{"start":{"line":5509,"column":15},"end":{"line":5511,"column":9}},"2298":{"start":{"line":5510,"column":10},"end":{"line":5510,"column":31}},"2299":{"start":{"line":5514,"column":8},"end":{"line":5516,"column":9}},"2300":{"start":{"line":5515,"column":10},"end":{"line":5515,"column":16}},"2301":{"start":{"line":5518,"column":6},"end":{"line":5518,"column":49}},"2302":{"start":{"line":5519,"column":6},"end":{"line":5519,"column":41}},"2303":{"start":{"line":5520,"column":6},"end":{"line":5525,"column":7}},"2304":{"start":{"line":5521,"column":8},"end":{"line":5521,"column":33}},"2305":{"start":{"line":5522,"column":8},"end":{"line":5522,"column":41}},"2306":{"start":{"line":5524,"column":8},"end":{"line":5524,"column":45}},"2307":{"start":{"line":5527,"column":6},"end":{"line":5538,"column":7}},"2308":{"start":{"line":5528,"column":8},"end":{"line":5534,"column":9}},"2309":{"start":{"line":5529,"column":10},"end":{"line":5529,"column":39}},"2310":{"start":{"line":5530,"column":10},"end":{"line":5530,"column":51}},"2311":{"start":{"line":5531,"column":15},"end":{"line":5534,"column":9}},"2312":{"start":{"line":5532,"column":10},"end":{"line":5532,"column":35}},"2313":{"start":{"line":5533,"column":10},"end":{"line":5533,"column":47}},"2314":{"start":{"line":5536,"column":8},"end":{"line":5536,"column":33}},"2315":{"start":{"line":5537,"column":8},"end":{"line":5537,"column":36}},"2316":{"start":{"line":5539,"column":6},"end":{"line":5539,"column":30}},"2317":{"start":{"line":5543,"column":4},"end":{"line":5543,"column":29}},"2318":{"start":{"line":5544,"column":4},"end":{"line":5545,"column":78}},"2319":{"start":{"line":5546,"column":4},"end":{"line":5548,"column":5}},"2320":{"start":{"line":5547,"column":6},"end":{"line":5547,"column":18}},"2321":{"start":{"line":5552,"column":2},"end":{"line":5564,"column":3}},"2322":{"start":{"line":5553,"column":4},"end":{"line":5563,"column":5}},"2323":{"start":{"line":5555,"column":6},"end":{"line":5555,"column":38}},"2324":{"start":{"line":5556,"column":6},"end":{"line":5562,"column":7}},"2325":{"start":{"line":5558,"column":8},"end":{"line":5558,"column":46}},"2326":{"start":{"line":5559,"column":8},"end":{"line":5561,"column":9}},"2327":{"start":{"line":5560,"column":10},"end":{"line":5560,"column":24}},"2328":{"start":{"line":5567,"column":2},"end":{"line":5567,"column":20}},"2329":{"start":{"line":5568,"column":2},"end":{"line":5568,"column":14}},"2330":{"start":{"line":5569,"column":2},"end":{"line":5569,"column":26}},"2331":{"start":{"line":5570,"column":2},"end":{"line":5570,"column":38}},"2332":{"start":{"line":5573,"column":2},"end":{"line":5573,"column":40}},"2333":{"start":{"line":5574,"column":2},"end":{"line":5579,"column":3}},"2334":{"start":{"line":5575,"column":4},"end":{"line":5575,"column":30}},"2335":{"start":{"line":5576,"column":4},"end":{"line":5578,"column":5}},"2336":{"start":{"line":5577,"column":6},"end":{"line":5577,"column":41}},"2337":{"start":{"line":5581,"column":2},"end":{"line":5600,"column":3}},"2338":{"start":{"line":5582,"column":4},"end":{"line":5582,"column":34}},"2339":{"start":{"line":5583,"column":4},"end":{"line":5583,"column":28}},"2340":{"start":{"line":5584,"column":4},"end":{"line":5599,"column":5}},"2341":{"start":{"line":5589,"column":6},"end":{"line":5589,"column":65}},"2342":{"start":{"line":5590,"column":6},"end":{"line":5591,"column":70}},"2343":{"start":{"line":5595,"column":6},"end":{"line":5598,"column":7}},"2344":{"start":{"line":5597,"column":8},"end":{"line":5597,"column":23}},"2345":{"start":{"line":5603,"column":2},"end":{"line":5605,"column":3}},"2346":{"start":{"line":5604,"column":4},"end":{"line":5604,"column":18}},"2347":{"start":{"line":5608,"column":2},"end":{"line":5610,"column":3}},"2348":{"start":{"line":5609,"column":4},"end":{"line":5609,"column":48}},"2349":{"start":{"line":5613,"column":2},"end":{"line":5613,"column":13}},"2350":{"start":{"line":5626,"column":0},"end":{"line":5700,"column":1}},"2351":{"start":{"line":5628,"column":2},"end":{"line":5684,"column":3}},"2352":{"start":{"line":5630,"column":4},"end":{"line":5630,"column":74}},"2353":{"start":{"line":5631,"column":4},"end":{"line":5632,"column":46}},"2354":{"start":{"line":5633,"column":4},"end":{"line":5634,"column":47}},"2355":{"start":{"line":5637,"column":4},"end":{"line":5638,"column":30}},"2356":{"start":{"line":5641,"column":4},"end":{"line":5646,"column":5}},"2357":{"start":{"line":5643,"column":6},"end":{"line":5645,"column":7}},"2358":{"start":{"line":5644,"column":8},"end":{"line":5644,"column":31}},"2359":{"start":{"line":5652,"column":4},"end":{"line":5652,"column":45}},"2360":{"start":{"line":5653,"column":4},"end":{"line":5654,"column":65}},"2361":{"start":{"line":5655,"column":4},"end":{"line":5655,"column":56}},"2362":{"start":{"line":5656,"column":4},"end":{"line":5656,"column":51}},"2363":{"start":{"line":5657,"column":4},"end":{"line":5658,"column":64}},"2364":{"start":{"line":5659,"column":4},"end":{"line":5662,"column":5}},"2365":{"start":{"line":5661,"column":6},"end":{"line":5661,"column":29}},"2366":{"start":{"line":5664,"column":4},"end":{"line":5664,"column":18}},"2367":{"start":{"line":5667,"column":4},"end":{"line":5669,"column":5}},"2368":{"start":{"line":5668,"column":6},"end":{"line":5668,"column":63}},"2369":{"start":{"line":5671,"column":4},"end":{"line":5678,"column":5}},"2370":{"start":{"line":5673,"column":6},"end":{"line":5674,"column":56}},"2371":{"start":{"line":5675,"column":11},"end":{"line":5678,"column":5}},"2372":{"start":{"line":5677,"column":6},"end":{"line":5677,"column":69}},"2373":{"start":{"line":5681,"column":4},"end":{"line":5681,"column":61}},"2374":{"start":{"line":5683,"column":4},"end":{"line":5683,"column":16}},"2375":{"start":{"line":5687,"column":2},"end":{"line":5687,"column":78}},"2376":{"start":{"line":5688,"column":2},"end":{"line":5688,"column":72}},"2377":{"start":{"line":5689,"column":2},"end":{"line":5690,"column":63}},"2378":{"start":{"line":5693,"column":2},"end":{"line":5695,"column":3}},"2379":{"start":{"line":5694,"column":4},"end":{"line":5694,"column":21}},"2380":{"start":{"line":5697,"column":2},"end":{"line":5697,"column":16}},"2381":{"start":{"line":5698,"column":2},"end":{"line":5698,"column":50}},"2382":{"start":{"line":5699,"column":2},"end":{"line":5699,"column":14}},"2383":{"start":{"line":5711,"column":0},"end":{"line":5937,"column":1}},"2384":{"start":{"line":5712,"column":2},"end":{"line":5722,"column":3}},"2385":{"start":{"line":5714,"column":4},"end":{"line":5716,"column":5}},"2386":{"start":{"line":5715,"column":6},"end":{"line":5715,"column":13}},"2387":{"start":{"line":5718,"column":4},"end":{"line":5721,"column":67}},"2388":{"start":{"line":5725,"column":2},"end":{"line":5725,"column":24}},"2389":{"start":{"line":5727,"column":2},"end":{"line":5732,"column":3}},"2390":{"start":{"line":5728,"column":4},"end":{"line":5731,"column":69}},"2391":{"start":{"line":5734,"column":2},"end":{"line":5739,"column":3}},"2392":{"start":{"line":5735,"column":4},"end":{"line":5738,"column":60}},"2393":{"start":{"line":5742,"column":2},"end":{"line":5744,"column":3}},"2394":{"start":{"line":5743,"column":4},"end":{"line":5743,"column":36}},"2395":{"start":{"line":5747,"column":2},"end":{"line":5747,"column":29}},"2396":{"start":{"line":5750,"column":2},"end":{"line":5754,"column":3}},"2397":{"start":{"line":5751,"column":4},"end":{"line":5751,"column":36}},"2398":{"start":{"line":5752,"column":4},"end":{"line":5752,"column":25}},"2399":{"start":{"line":5753,"column":4},"end":{"line":5753,"column":11}},"2400":{"start":{"line":5757,"column":2},"end":{"line":5759,"column":3}},"2401":{"start":{"line":5758,"column":4},"end":{"line":5758,"column":27}},"2402":{"start":{"line":5761,"column":2},"end":{"line":5767,"column":3}},"2403":{"start":{"line":5762,"column":4},"end":{"line":5766,"column":60}},"2404":{"start":{"line":5770,"column":2},"end":{"line":5770,"column":46}},"2405":{"start":{"line":5771,"column":2},"end":{"line":5771,"column":26}},"2406":{"start":{"line":5773,"column":2},"end":{"line":5819,"column":3}},"2407":{"start":{"line":5774,"column":4},"end":{"line":5779,"column":5}},"2408":{"start":{"line":5775,"column":6},"end":{"line":5778,"column":63}},"2409":{"start":{"line":5780,"column":4},"end":{"line":5780,"column":36}},"2410":{"start":{"line":5781,"column":4},"end":{"line":5785,"column":5}},"2411":{"start":{"line":5782,"column":6},"end":{"line":5784,"column":80}},"2412":{"start":{"line":5788,"column":4},"end":{"line":5789,"column":73}},"2413":{"start":{"line":5790,"column":4},"end":{"line":5795,"column":5}},"2414":{"start":{"line":5791,"column":6},"end":{"line":5794,"column":80}},"2415":{"start":{"line":5796,"column":4},"end":{"line":5796,"column":24}},"2416":{"start":{"line":5797,"column":4},"end":{"line":5797,"column":27}},"2417":{"start":{"line":5798,"column":9},"end":{"line":5819,"column":3}},"2418":{"start":{"line":5799,"column":4},"end":{"line":5799,"column":26}},"2419":{"start":{"line":5800,"column":4},"end":{"line":5805,"column":5}},"2420":{"start":{"line":5801,"column":6},"end":{"line":5804,"column":80}},"2421":{"start":{"line":5806,"column":4},"end":{"line":5818,"column":5}},"2422":{"start":{"line":5808,"column":6},"end":{"line":5809,"column":70}},"2423":{"start":{"line":5810,"column":6},"end":{"line":5816,"column":7}},"2424":{"start":{"line":5811,"column":8},"end":{"line":5815,"column":60}},"2425":{"start":{"line":5817,"column":6},"end":{"line":5817,"column":26}},"2426":{"start":{"line":5823,"column":2},"end":{"line":5823,"column":32}},"2427":{"start":{"line":5824,"column":2},"end":{"line":5824,"column":41}},"2428":{"start":{"line":5826,"column":2},"end":{"line":5854,"column":3}},"2429":{"start":{"line":5828,"column":4},"end":{"line":5853,"column":5}},"2430":{"start":{"line":5829,"column":6},"end":{"line":5829,"column":41}},"2431":{"start":{"line":5830,"column":6},"end":{"line":5833,"column":7}},"2432":{"start":{"line":5832,"column":8},"end":{"line":5832,"column":68}},"2433":{"start":{"line":5835,"column":6},"end":{"line":5842,"column":7}},"2434":{"start":{"line":5837,"column":8},"end":{"line":5837,"column":44}},"2435":{"start":{"line":5838,"column":8},"end":{"line":5838,"column":68}},"2436":{"start":{"line":5841,"column":8},"end":{"line":5841,"column":30}},"2437":{"start":{"line":5845,"column":6},"end":{"line":5850,"column":7}},"2438":{"start":{"line":5846,"column":8},"end":{"line":5849,"column":72}},"2439":{"start":{"line":5852,"column":6},"end":{"line":5852,"column":50}},"2440":{"start":{"line":5857,"column":2},"end":{"line":5857,"column":23}},"2441":{"start":{"line":5859,"column":2},"end":{"line":5890,"column":3}},"2442":{"start":{"line":5860,"column":4},"end":{"line":5860,"column":30}},"2443":{"start":{"line":5861,"column":4},"end":{"line":5866,"column":5}},"2444":{"start":{"line":5862,"column":6},"end":{"line":5865,"column":59}},"2445":{"start":{"line":5868,"column":4},"end":{"line":5886,"column":5}},"2446":{"start":{"line":5870,"column":6},"end":{"line":5871,"column":72}},"2447":{"start":{"line":5872,"column":6},"end":{"line":5878,"column":7}},"2448":{"start":{"line":5873,"column":8},"end":{"line":5877,"column":61}},"2449":{"start":{"line":5879,"column":6},"end":{"line":5885,"column":7}},"2450":{"start":{"line":5880,"column":8},"end":{"line":5884,"column":61}},"2451":{"start":{"line":5889,"column":4},"end":{"line":5889,"column":28}},"2452":{"start":{"line":5892,"column":2},"end":{"line":5912,"column":3}},"2453":{"start":{"line":5893,"column":4},"end":{"line":5893,"column":40}},"2454":{"start":{"line":5894,"column":4},"end":{"line":5901,"column":5}},"2455":{"start":{"line":5896,"column":6},"end":{"line":5900,"column":64}},"2456":{"start":{"line":5902,"column":4},"end":{"line":5908,"column":5}},"2457":{"start":{"line":5904,"column":6},"end":{"line":5907,"column":63}},"2458":{"start":{"line":5911,"column":4},"end":{"line":5911,"column":38}},"2459":{"start":{"line":5914,"column":2},"end":{"line":5928,"column":3}},"2460":{"start":{"line":5915,"column":4},"end":{"line":5915,"column":38}},"2461":{"start":{"line":5916,"column":4},"end":{"line":5921,"column":5}},"2462":{"start":{"line":5917,"column":6},"end":{"line":5920,"column":63}},"2463":{"start":{"line":5924,"column":4},"end":{"line":5926,"column":5}},"2464":{"start":{"line":5925,"column":6},"end":{"line":5925,"column":40}},"2465":{"start":{"line":5927,"column":4},"end":{"line":5927,"column":36}},"2466":{"start":{"line":5931,"column":2},"end":{"line":5931,"column":26}},"2467":{"start":{"line":5932,"column":2},"end":{"line":5936,"column":3}},"2468":{"start":{"line":5933,"column":4},"end":{"line":5935,"column":80}},"2469":{"start":{"line":5956,"column":0},"end":{"line":6024,"column":1}},"2470":{"start":{"line":5958,"column":2},"end":{"line":5960,"column":3}},"2471":{"start":{"line":5959,"column":4},"end":{"line":5959,"column":17}},"2472":{"start":{"line":5963,"column":2},"end":{"line":5963,"column":24}},"2473":{"start":{"line":5966,"column":2},"end":{"line":5968,"column":3}},"2474":{"start":{"line":5967,"column":4},"end":{"line":5967,"column":63}},"2475":{"start":{"line":5970,"column":2},"end":{"line":5970,"column":32}},"2476":{"start":{"line":5971,"column":2},"end":{"line":5983,"column":3}},"2477":{"start":{"line":5972,"column":4},"end":{"line":5972,"column":44}},"2478":{"start":{"line":5975,"column":4},"end":{"line":5977,"column":5}},"2479":{"start":{"line":5976,"column":6},"end":{"line":5976,"column":18}},"2480":{"start":{"line":5979,"column":4},"end":{"line":5982,"column":5}},"2481":{"start":{"line":5981,"column":6},"end":{"line":5981,"column":28}},"2482":{"start":{"line":5986,"column":2},"end":{"line":5986,"column":33}},"2483":{"start":{"line":5987,"column":2},"end":{"line":6010,"column":3}},"2484":{"start":{"line":5988,"column":4},"end":{"line":5988,"column":40}},"2485":{"start":{"line":5989,"column":4},"end":{"line":5989,"column":41}},"2486":{"start":{"line":5993,"column":4},"end":{"line":5995,"column":5}},"2487":{"start":{"line":5994,"column":6},"end":{"line":5994,"column":19}},"2488":{"start":{"line":5998,"column":4},"end":{"line":6000,"column":5}},"2489":{"start":{"line":5999,"column":6},"end":{"line":5999,"column":66}},"2490":{"start":{"line":6003,"column":4},"end":{"line":6003,"column":45}},"2491":{"start":{"line":6004,"column":4},"end":{"line":6006,"column":5}},"2492":{"start":{"line":6005,"column":6},"end":{"line":6005,"column":37}},"2493":{"start":{"line":6009,"column":4},"end":{"line":6009,"column":17}},"2494":{"start":{"line":6013,"column":2},"end":{"line":6015,"column":3}},"2495":{"start":{"line":6014,"column":4},"end":{"line":6014,"column":39}},"2496":{"start":{"line":6018,"column":2},"end":{"line":6018,"column":19}},"2497":{"start":{"line":6019,"column":2},"end":{"line":6021,"column":3}},"2498":{"start":{"line":6020,"column":4},"end":{"line":6020,"column":56}},"2499":{"start":{"line":6023,"column":2},"end":{"line":6023,"column":14}},"2500":{"start":{"line":6026,"column":0},"end":{"line":6108,"column":1}},"2501":{"start":{"line":6028,"column":2},"end":{"line":6030,"column":3}},"2502":{"start":{"line":6029,"column":4},"end":{"line":6029,"column":15}},"2503":{"start":{"line":6032,"column":2},"end":{"line":6034,"column":3}},"2504":{"start":{"line":6033,"column":4},"end":{"line":6033,"column":15}},"2505":{"start":{"line":6037,"column":2},"end":{"line":6039,"column":3}},"2506":{"start":{"line":6038,"column":4},"end":{"line":6038,"column":40}},"2507":{"start":{"line":6042,"column":2},"end":{"line":6042,"column":34}},"2508":{"start":{"line":6045,"column":2},"end":{"line":6047,"column":4}},"2509":{"start":{"line":6049,"column":2},"end":{"line":6084,"column":3}},"2510":{"start":{"line":6050,"column":4},"end":{"line":6050,"column":40}},"2511":{"start":{"line":6051,"column":4},"end":{"line":6051,"column":30}},"2512":{"start":{"line":6052,"column":4},"end":{"line":6052,"column":32}},"2513":{"start":{"line":6054,"column":4},"end":{"line":6054,"column":41}},"2514":{"start":{"line":6056,"column":4},"end":{"line":6083,"column":5}},"2515":{"start":{"line":6057,"column":6},"end":{"line":6057,"column":33}},"2516":{"start":{"line":6058,"column":6},"end":{"line":6062,"column":7}},"2517":{"start":{"line":6059,"column":8},"end":{"line":6059,"column":36}},"2518":{"start":{"line":6061,"column":8},"end":{"line":6061,"column":37}},"2519":{"start":{"line":6064,"column":6},"end":{"line":6081,"column":7}},"2520":{"start":{"line":6066,"column":8},"end":{"line":6066,"column":34}},"2521":{"start":{"line":6069,"column":8},"end":{"line":6069,"column":29}},"2522":{"start":{"line":6072,"column":8},"end":{"line":6078,"column":9}},"2523":{"start":{"line":6073,"column":10},"end":{"line":6073,"column":59}},"2524":{"start":{"line":6074,"column":10},"end":{"line":6076,"column":11}},"2525":{"start":{"line":6075,"column":12},"end":{"line":6075,"column":24}},"2526":{"start":{"line":6077,"column":10},"end":{"line":6077,"column":27}},"2527":{"start":{"line":6080,"column":8},"end":{"line":6080,"column":30}},"2528":{"start":{"line":6082,"column":6},"end":{"line":6082,"column":34}},"2529":{"start":{"line":6087,"column":2},"end":{"line":6087,"column":77}},"2530":{"start":{"line":6090,"column":2},"end":{"line":6090,"column":32}},"2531":{"start":{"line":6091,"column":2},"end":{"line":6093,"column":3}},"2532":{"start":{"line":6092,"column":4},"end":{"line":6092,"column":39}},"2533":{"start":{"line":6094,"column":2},"end":{"line":6094,"column":25}},"2534":{"start":{"line":6095,"column":2},"end":{"line":6097,"column":3}},"2535":{"start":{"line":6096,"column":4},"end":{"line":6096,"column":34}},"2536":{"start":{"line":6098,"column":2},"end":{"line":6100,"column":3}},"2537":{"start":{"line":6099,"column":4},"end":{"line":6099,"column":31}},"2538":{"start":{"line":6103,"column":2},"end":{"line":6105,"column":3}},"2539":{"start":{"line":6104,"column":4},"end":{"line":6104,"column":16}},"2540":{"start":{"line":6107,"column":2},"end":{"line":6107,"column":14}},"2541":{"start":{"line":6118,"column":0},"end":{"line":6186,"column":1}},"2542":{"start":{"line":6120,"column":2},"end":{"line":6122,"column":3}},"2543":{"start":{"line":6121,"column":4},"end":{"line":6121,"column":15}},"2544":{"start":{"line":6124,"column":2},"end":{"line":6126,"column":3}},"2545":{"start":{"line":6125,"column":4},"end":{"line":6125,"column":40}},"2546":{"start":{"line":6129,"column":2},"end":{"line":6129,"column":16}},"2547":{"start":{"line":6130,"column":2},"end":{"line":6135,"column":3}},"2548":{"start":{"line":6131,"column":4},"end":{"line":6131,"column":66}},"2549":{"start":{"line":6132,"column":9},"end":{"line":6135,"column":3}},"2550":{"start":{"line":6134,"column":4},"end":{"line":6134,"column":17}},"2551":{"start":{"line":6138,"column":2},"end":{"line":6140,"column":3}},"2552":{"start":{"line":6139,"column":4},"end":{"line":6139,"column":15}},"2553":{"start":{"line":6143,"column":2},"end":{"line":6143,"column":54}},"2554":{"start":{"line":6147,"column":2},"end":{"line":6147,"column":52}},"2555":{"start":{"line":6148,"column":2},"end":{"line":6148,"column":50}},"2556":{"start":{"line":6149,"column":2},"end":{"line":6149,"column":49}},"2557":{"start":{"line":6150,"column":2},"end":{"line":6156,"column":3}},"2558":{"start":{"line":6151,"column":4},"end":{"line":6153,"column":5}},"2559":{"start":{"line":6152,"column":6},"end":{"line":6152,"column":12}},"2560":{"start":{"line":6154,"column":4},"end":{"line":6154,"column":25}},"2561":{"start":{"line":6155,"column":4},"end":{"line":6155,"column":24}},"2562":{"start":{"line":6159,"column":2},"end":{"line":6159,"column":16}},"2563":{"start":{"line":6160,"column":2},"end":{"line":6167,"column":3}},"2564":{"start":{"line":6163,"column":4},"end":{"line":6163,"column":23}},"2565":{"start":{"line":6164,"column":4},"end":{"line":6166,"column":5}},"2566":{"start":{"line":6165,"column":6},"end":{"line":6165,"column":20}},"2567":{"start":{"line":6170,"column":2},"end":{"line":6170,"column":32}},"2568":{"start":{"line":6173,"column":2},"end":{"line":6175,"column":3}},"2569":{"start":{"line":6174,"column":4},"end":{"line":6174,"column":28}},"2570":{"start":{"line":6176,"column":2},"end":{"line":6178,"column":3}},"2571":{"start":{"line":6177,"column":4},"end":{"line":6177,"column":31}},"2572":{"start":{"line":6181,"column":2},"end":{"line":6183,"column":3}},"2573":{"start":{"line":6182,"column":4},"end":{"line":6182,"column":16}},"2574":{"start":{"line":6185,"column":2},"end":{"line":6185,"column":14}},"2575":{"start":{"line":6196,"column":0},"end":{"line":6380,"column":1}},"2576":{"start":{"line":6197,"column":2},"end":{"line":6197,"column":50}},"2577":{"start":{"line":6198,"column":2},"end":{"line":6204,"column":4}},"2578":{"start":{"line":6212,"column":2},"end":{"line":6308,"column":3}},"2579":{"start":{"line":6213,"column":4},"end":{"line":6213,"column":25}},"2580":{"start":{"line":6216,"column":4},"end":{"line":6218,"column":5}},"2581":{"start":{"line":6217,"column":6},"end":{"line":6217,"column":31}},"2582":{"start":{"line":6219,"column":4},"end":{"line":6219,"column":41}},"2583":{"start":{"line":6222,"column":4},"end":{"line":6222,"column":51}},"2584":{"start":{"line":6223,"column":4},"end":{"line":6223,"column":25}},"2585":{"start":{"line":6226,"column":4},"end":{"line":6226,"column":60}},"2586":{"start":{"line":6230,"column":4},"end":{"line":6230,"column":38}},"2587":{"start":{"line":6231,"column":4},"end":{"line":6231,"column":66}},"2588":{"start":{"line":6232,"column":4},"end":{"line":6300,"column":5}},"2589":{"start":{"line":6233,"column":6},"end":{"line":6233,"column":26}},"2590":{"start":{"line":6234,"column":6},"end":{"line":6234,"column":35}},"2591":{"start":{"line":6235,"column":6},"end":{"line":6237,"column":7}},"2592":{"start":{"line":6236,"column":8},"end":{"line":6236,"column":17}},"2593":{"start":{"line":6239,"column":6},"end":{"line":6239,"column":55}},"2594":{"start":{"line":6242,"column":6},"end":{"line":6242,"column":31}},"2595":{"start":{"line":6243,"column":6},"end":{"line":6245,"column":7}},"2596":{"start":{"line":6244,"column":8},"end":{"line":6244,"column":20}},"2597":{"start":{"line":6246,"column":6},"end":{"line":6299,"column":7}},"2598":{"start":{"line":6247,"column":8},"end":{"line":6247,"column":26}},"2599":{"start":{"line":6248,"column":8},"end":{"line":6248,"column":33}},"2600":{"start":{"line":6249,"column":8},"end":{"line":6249,"column":40}},"2601":{"start":{"line":6251,"column":8},"end":{"line":6268,"column":9}},"2602":{"start":{"line":6253,"column":10},"end":{"line":6253,"column":36}},"2603":{"start":{"line":6255,"column":10},"end":{"line":6264,"column":11}},"2604":{"start":{"line":6257,"column":12},"end":{"line":6257,"column":38}},"2605":{"start":{"line":6258,"column":12},"end":{"line":6258,"column":69}},"2606":{"start":{"line":6259,"column":12},"end":{"line":6263,"column":13}},"2607":{"start":{"line":6260,"column":14},"end":{"line":6260,"column":56}},"2608":{"start":{"line":6262,"column":14},"end":{"line":6262,"column":54}},"2609":{"start":{"line":6265,"column":15},"end":{"line":6268,"column":9}},"2610":{"start":{"line":6267,"column":10},"end":{"line":6267,"column":38}},"2611":{"start":{"line":6271,"column":8},"end":{"line":6276,"column":9}},"2612":{"start":{"line":6272,"column":10},"end":{"line":6275,"column":12}},"2613":{"start":{"line":6277,"column":8},"end":{"line":6277,"column":33}},"2614":{"start":{"line":6279,"column":8},"end":{"line":6298,"column":9}},"2615":{"start":{"line":6281,"column":10},"end":{"line":6281,"column":71}},"2616":{"start":{"line":6282,"column":15},"end":{"line":6298,"column":9}},"2617":{"start":{"line":6284,"column":10},"end":{"line":6284,"column":77}},"2618":{"start":{"line":6285,"column":15},"end":{"line":6298,"column":9}},"2619":{"start":{"line":6287,"column":10},"end":{"line":6287,"column":57}},"2620":{"start":{"line":6288,"column":10},"end":{"line":6288,"column":73}},"2621":{"start":{"line":6293,"column":10},"end":{"line":6293,"column":80}},"2622":{"start":{"line":6296,"column":10},"end":{"line":6296,"column":68}},"2623":{"start":{"line":6297,"column":10},"end":{"line":6297,"column":72}},"2624":{"start":{"line":6303,"column":4},"end":{"line":6305,"column":5}},"2625":{"start":{"line":6304,"column":6},"end":{"line":6304,"column":41}},"2626":{"start":{"line":6307,"column":4},"end":{"line":6307,"column":19}},"2627":{"start":{"line":6318,"column":2},"end":{"line":6344,"column":3}},"2628":{"start":{"line":6319,"column":4},"end":{"line":6319,"column":30}},"2629":{"start":{"line":6320,"column":4},"end":{"line":6320,"column":32}},"2630":{"start":{"line":6322,"column":4},"end":{"line":6322,"column":12}},"2631":{"start":{"line":6323,"column":4},"end":{"line":6323,"column":15}},"2632":{"start":{"line":6324,"column":4},"end":{"line":6336,"column":5}},"2633":{"start":{"line":6325,"column":6},"end":{"line":6325,"column":27}},"2634":{"start":{"line":6326,"column":6},"end":{"line":6330,"column":7}},"2635":{"start":{"line":6327,"column":8},"end":{"line":6327,"column":20}},"2636":{"start":{"line":6329,"column":8},"end":{"line":6329,"column":26}},"2637":{"start":{"line":6331,"column":6},"end":{"line":6335,"column":7}},"2638":{"start":{"line":6332,"column":8},"end":{"line":6332,"column":38}},"2639":{"start":{"line":6334,"column":8},"end":{"line":6334,"column":36}},"2640":{"start":{"line":6338,"column":4},"end":{"line":6343,"column":5}},"2641":{"start":{"line":6339,"column":6},"end":{"line":6341,"column":7}},"2642":{"start":{"line":6340,"column":8},"end":{"line":6340,"column":17}},"2643":{"start":{"line":6342,"column":6},"end":{"line":6342,"column":39}},"2644":{"start":{"line":6354,"column":2},"end":{"line":6358,"column":3}},"2645":{"start":{"line":6355,"column":4},"end":{"line":6357,"column":5}},"2646":{"start":{"line":6356,"column":6},"end":{"line":6356,"column":40}},"2647":{"start":{"line":6365,"column":2},"end":{"line":6379,"column":3}},"2648":{"start":{"line":6366,"column":4},"end":{"line":6366,"column":19}},"2649":{"start":{"line":6367,"column":4},"end":{"line":6367,"column":35}},"2650":{"start":{"line":6368,"column":4},"end":{"line":6368,"column":43}},"2651":{"start":{"line":6369,"column":4},"end":{"line":6369,"column":29}},"2652":{"start":{"line":6370,"column":4},"end":{"line":6370,"column":25}},"2653":{"start":{"line":6371,"column":4},"end":{"line":6371,"column":39}},"2654":{"start":{"line":6372,"column":4},"end":{"line":6374,"column":5}},"2655":{"start":{"line":6373,"column":6},"end":{"line":6373,"column":45}},"2656":{"start":{"line":6375,"column":4},"end":{"line":6377,"column":5}},"2657":{"start":{"line":6376,"column":6},"end":{"line":6376,"column":39}},"2658":{"start":{"line":6378,"column":4},"end":{"line":6378,"column":17}},"2659":{"start":{"line":6389,"column":0},"end":{"line":6416,"column":1}},"2660":{"start":{"line":6390,"column":2},"end":{"line":6392,"column":3}},"2661":{"start":{"line":6391,"column":4},"end":{"line":6391,"column":17}},"2662":{"start":{"line":6393,"column":2},"end":{"line":6414,"column":3}},"2663":{"start":{"line":6413,"column":4},"end":{"line":6413,"column":16}},"2664":{"start":{"line":6415,"column":2},"end":{"line":6415,"column":15}},"2665":{"start":{"line":6425,"column":0},"end":{"line":6427,"column":1}},"2666":{"start":{"line":6426,"column":2},"end":{"line":6426,"column":67}},"2667":{"start":{"line":6436,"column":0},"end":{"line":6438,"column":1}},"2668":{"start":{"line":6437,"column":2},"end":{"line":6437,"column":53}},"2669":{"start":{"line":6447,"column":0},"end":{"line":6449,"column":1}},"2670":{"start":{"line":6448,"column":2},"end":{"line":6448,"column":26}},"2671":{"start":{"line":6456,"column":0},"end":{"line":6481,"column":1}},"2672":{"start":{"line":6458,"column":2},"end":{"line":6460,"column":3}},"2673":{"start":{"line":6459,"column":4},"end":{"line":6459,"column":11}},"2674":{"start":{"line":6463,"column":2},"end":{"line":6463,"column":22}},"2675":{"start":{"line":6464,"column":2},"end":{"line":6473,"column":3}},"2676":{"start":{"line":6466,"column":4},"end":{"line":6466,"column":19}},"2677":{"start":{"line":6467,"column":4},"end":{"line":6472,"column":5}},"2678":{"start":{"line":6468,"column":6},"end":{"line":6471,"column":7}},"2679":{"start":{"line":6469,"column":8},"end":{"line":6469,"column":24}},"2680":{"start":{"line":6470,"column":8},"end":{"line":6470,"column":14}},"2681":{"start":{"line":6475,"column":2},"end":{"line":6480,"column":3}},"2682":{"start":{"line":6476,"column":4},"end":{"line":6479,"column":46}},"2683":{"start":{"line":6490,"column":0},"end":{"line":6493,"column":1}},"2684":{"start":{"line":6491,"column":2},"end":{"line":6492,"column":61}},"2685":{"start":{"line":6502,"column":0},"end":{"line":6505,"column":1}},"2686":{"start":{"line":6503,"column":2},"end":{"line":6504,"column":61}},"2687":{"start":{"line":6514,"column":0},"end":{"line":6516,"column":1}},"2688":{"start":{"line":6515,"column":2},"end":{"line":6515,"column":55}},"2689":{"start":{"line":6525,"column":0},"end":{"line":6527,"column":1}},"2690":{"start":{"line":6526,"column":2},"end":{"line":6526,"column":46}},"2691":{"start":{"line":6536,"column":0},"end":{"line":6539,"column":1}},"2692":{"start":{"line":6537,"column":2},"end":{"line":6538,"column":62}},"2693":{"start":{"line":6548,"column":0},"end":{"line":6550,"column":1}},"2694":{"start":{"line":6549,"column":2},"end":{"line":6549,"column":36}},"2695":{"start":{"line":6559,"column":0},"end":{"line":6571,"column":1}},"2696":{"start":{"line":6564,"column":2},"end":{"line":6564,"column":19}},"2697":{"start":{"line":6565,"column":2},"end":{"line":6569,"column":3}},"2698":{"start":{"line":6567,"column":4},"end":{"line":6567,"column":41}},"2699":{"start":{"line":6568,"column":4},"end":{"line":6568,"column":43}},"2700":{"start":{"line":6570,"column":2},"end":{"line":6570,"column":14}},"2701":{"start":{"line":6580,"column":0},"end":{"line":6585,"column":1}},"2702":{"start":{"line":6584,"column":2},"end":{"line":6584,"column":71}},"2703":{"start":{"line":6594,"column":0},"end":{"line":6599,"column":1}},"2704":{"start":{"line":6598,"column":2},"end":{"line":6598,"column":41}},"2705":{"start":{"line":6608,"column":0},"end":{"line":6613,"column":1}},"2706":{"start":{"line":6612,"column":2},"end":{"line":6612,"column":40}},"2707":{"start":{"line":6622,"column":0},"end":{"line":6637,"column":1}},"2708":{"start":{"line":6627,"column":2},"end":{"line":6627,"column":19}},"2709":{"start":{"line":6628,"column":2},"end":{"line":6635,"column":3}},"2710":{"start":{"line":6629,"column":4},"end":{"line":6634,"column":5}},"2711":{"start":{"line":6630,"column":6},"end":{"line":6630,"column":44}},"2712":{"start":{"line":6632,"column":6},"end":{"line":6633,"column":63}},"2713":{"start":{"line":6636,"column":2},"end":{"line":6636,"column":14}},"2714":{"start":{"line":6646,"column":0},"end":{"line":6648,"column":1}},"2715":{"start":{"line":6647,"column":2},"end":{"line":6647,"column":47}},"2716":{"start":{"line":6658,"column":0},"end":{"line":6677,"column":1}},"2717":{"start":{"line":6659,"column":2},"end":{"line":6675,"column":3}},"2718":{"start":{"line":6660,"column":4},"end":{"line":6660,"column":13}},"2719":{"start":{"line":6661,"column":4},"end":{"line":6673,"column":5}},"2720":{"start":{"line":6662,"column":6},"end":{"line":6662,"column":16}},"2721":{"start":{"line":6663,"column":6},"end":{"line":6665,"column":7}},"2722":{"start":{"line":6664,"column":8},"end":{"line":6664,"column":35}},"2723":{"start":{"line":6666,"column":11},"end":{"line":6673,"column":5}},"2724":{"start":{"line":6667,"column":6},"end":{"line":6667,"column":16}},"2725":{"start":{"line":6668,"column":6},"end":{"line":6670,"column":7}},"2726":{"start":{"line":6669,"column":8},"end":{"line":6669,"column":39}},"2727":{"start":{"line":6672,"column":6},"end":{"line":6672,"column":30}},"2728":{"start":{"line":6674,"column":4},"end":{"line":6674,"column":16}},"2729":{"start":{"line":6676,"column":2},"end":{"line":6676,"column":15}},"2730":{"start":{"line":6690,"column":0},"end":{"line":6746,"column":1}},"2731":{"start":{"line":6691,"column":2},"end":{"line":6691,"column":39}},"2732":{"start":{"line":6692,"column":2},"end":{"line":6744,"column":3}},"2733":{"start":{"line":6693,"column":4},"end":{"line":6695,"column":5}},"2734":{"start":{"line":6694,"column":6},"end":{"line":6694,"column":54}},"2735":{"start":{"line":6696,"column":4},"end":{"line":6696,"column":46}},"2736":{"start":{"line":6697,"column":9},"end":{"line":6744,"column":3}},"2737":{"start":{"line":6698,"column":4},"end":{"line":6742,"column":5}},"2738":{"start":{"line":6699,"column":6},"end":{"line":6702,"column":7}},"2739":{"start":{"line":6700,"column":8},"end":{"line":6700,"column":58}},"2740":{"start":{"line":6701,"column":8},"end":{"line":6701,"column":17}},"2741":{"start":{"line":6705,"column":6},"end":{"line":6705,"column":27}},"2742":{"start":{"line":6708,"column":6},"end":{"line":6741,"column":7}},"2743":{"start":{"line":6709,"column":8},"end":{"line":6709,"column":32}},"2744":{"start":{"line":6710,"column":8},"end":{"line":6730,"column":9}},"2745":{"start":{"line":6711,"column":10},"end":{"line":6711,"column":28}},"2746":{"start":{"line":6712,"column":10},"end":{"line":6729,"column":11}},"2747":{"start":{"line":6713,"column":12},"end":{"line":6713,"column":50}},"2748":{"start":{"line":6715,"column":12},"end":{"line":6728,"column":13}},"2749":{"start":{"line":6716,"column":14},"end":{"line":6716,"column":32}},"2750":{"start":{"line":6717,"column":14},"end":{"line":6724,"column":15}},"2751":{"start":{"line":6719,"column":16},"end":{"line":6719,"column":71}},"2752":{"start":{"line":6720,"column":16},"end":{"line":6720,"column":37}},"2753":{"start":{"line":6721,"column":16},"end":{"line":6721,"column":36}},"2754":{"start":{"line":6723,"column":16},"end":{"line":6723,"column":30}},"2755":{"start":{"line":6725,"column":19},"end":{"line":6728,"column":13}},"2756":{"start":{"line":6727,"column":14},"end":{"line":6727,"column":33}},"2757":{"start":{"line":6731,"column":13},"end":{"line":6741,"column":7}},"2758":{"start":{"line":6733,"column":8},"end":{"line":6733,"column":44}},"2759":{"start":{"line":6735,"column":8},"end":{"line":6740,"column":9}},"2760":{"start":{"line":6736,"column":10},"end":{"line":6736,"column":33}},"2761":{"start":{"line":6737,"column":15},"end":{"line":6740,"column":9}},"2762":{"start":{"line":6739,"column":10},"end":{"line":6739,"column":28}},"2763":{"start":{"line":6743,"column":4},"end":{"line":6743,"column":46}},"2764":{"start":{"line":6745,"column":2},"end":{"line":6745,"column":15}},"2765":{"start":{"line":6758,"column":0},"end":{"line":6886,"column":1}},"2766":{"start":{"line":6760,"column":2},"end":{"line":6760,"column":19}},"2767":{"start":{"line":6763,"column":2},"end":{"line":6763,"column":46}},"2768":{"start":{"line":6764,"column":2},"end":{"line":6884,"column":4}},"2769":{"start":{"line":6765,"column":4},"end":{"line":6771,"column":5}},"2770":{"start":{"line":6766,"column":6},"end":{"line":6769,"column":72}},"2771":{"start":{"line":6770,"column":6},"end":{"line":6770,"column":29}},"2772":{"start":{"line":6774,"column":4},"end":{"line":6774,"column":18}},"2773":{"start":{"line":6777,"column":4},"end":{"line":6781,"column":6}},"2774":{"start":{"line":6779,"column":6},"end":{"line":6779,"column":48}},"2775":{"start":{"line":6780,"column":6},"end":{"line":6780,"column":28}},"2776":{"start":{"line":6784,"column":4},"end":{"line":6787,"column":5}},"2777":{"start":{"line":6786,"column":6},"end":{"line":6786,"column":17}},"2778":{"start":{"line":6790,"column":4},"end":{"line":6790,"column":19}},"2779":{"start":{"line":6791,"column":4},"end":{"line":6795,"column":5}},"2780":{"start":{"line":6792,"column":6},"end":{"line":6794,"column":7}},"2781":{"start":{"line":6793,"column":8},"end":{"line":6793,"column":24}},"2782":{"start":{"line":6798,"column":4},"end":{"line":6798,"column":29}},"2783":{"start":{"line":6799,"column":4},"end":{"line":6883,"column":5}},"2784":{"start":{"line":6800,"column":6},"end":{"line":6882,"column":19}},"2785":{"start":{"line":6802,"column":8},"end":{"line":6808,"column":9}},"2786":{"start":{"line":6803,"column":10},"end":{"line":6806,"column":61}},"2787":{"start":{"line":6807,"column":10},"end":{"line":6807,"column":33}},"2788":{"start":{"line":6809,"column":8},"end":{"line":6809,"column":37}},"2789":{"start":{"line":6810,"column":8},"end":{"line":6810,"column":28}},"2790":{"start":{"line":6811,"column":8},"end":{"line":6877,"column":10}},"2791":{"start":{"line":6813,"column":10},"end":{"line":6815,"column":11}},"2792":{"start":{"line":6814,"column":12},"end":{"line":6814,"column":19}},"2793":{"start":{"line":6817,"column":10},"end":{"line":6817,"column":58}},"2794":{"start":{"line":6820,"column":10},"end":{"line":6826,"column":11}},"2795":{"start":{"line":6821,"column":12},"end":{"line":6825,"column":13}},"2796":{"start":{"line":6822,"column":14},"end":{"line":6822,"column":36}},"2797":{"start":{"line":6824,"column":14},"end":{"line":6824,"column":23}},"2798":{"start":{"line":6829,"column":10},"end":{"line":6845,"column":11}},"2799":{"start":{"line":6830,"column":12},"end":{"line":6838,"column":77}},"2800":{"start":{"line":6839,"column":17},"end":{"line":6845,"column":11}},"2801":{"start":{"line":6840,"column":12},"end":{"line":6844,"column":70}},"2802":{"start":{"line":6846,"column":10},"end":{"line":6849,"column":11}},"2803":{"start":{"line":6847,"column":12},"end":{"line":6847,"column":24}},"2804":{"start":{"line":6848,"column":12},"end":{"line":6848,"column":35}},"2805":{"start":{"line":6852,"column":10},"end":{"line":6856,"column":11}},"2806":{"start":{"line":6853,"column":12},"end":{"line":6853,"column":35}},"2807":{"start":{"line":6855,"column":12},"end":{"line":6855,"column":48}},"2808":{"start":{"line":6859,"column":10},"end":{"line":6864,"column":11}},"2809":{"start":{"line":6860,"column":12},"end":{"line":6862,"column":13}},"2810":{"start":{"line":6861,"column":14},"end":{"line":6861,"column":50}},"2811":{"start":{"line":6863,"column":12},"end":{"line":6863,"column":55}},"2812":{"start":{"line":6867,"column":10},"end":{"line":6876,"column":13}},"2813":{"start":{"line":6868,"column":12},"end":{"line":6870,"column":13}},"2814":{"start":{"line":6869,"column":14},"end":{"line":6869,"column":35}},"2815":{"start":{"line":6871,"column":12},"end":{"line":6871,"column":40}},"2816":{"start":{"line":6872,"column":12},"end":{"line":6872,"column":23}},"2817":{"start":{"line":6873,"column":12},"end":{"line":6875,"column":13}},"2818":{"start":{"line":6874,"column":14},"end":{"line":6874,"column":25}},"2819":{"start":{"line":6878,"column":8},"end":{"line":6878,"column":48}},"2820":{"start":{"line":6879,"column":8},"end":{"line":6881,"column":9}},"2821":{"start":{"line":6880,"column":10},"end":{"line":6880,"column":52}},"2822":{"start":{"line":6885,"column":2},"end":{"line":6885,"column":62}},"2823":{"start":{"line":6889,"column":0},"end":{"line":6902,"column":1}},"2824":{"start":{"line":6890,"column":2},"end":{"line":6901,"column":4}},"2825":{"start":{"line":6891,"column":4},"end":{"line":6893,"column":5}},"2826":{"start":{"line":6892,"column":6},"end":{"line":6892,"column":62}},"2827":{"start":{"line":6894,"column":4},"end":{"line":6894,"column":18}},"2828":{"start":{"line":6895,"column":4},"end":{"line":6899,"column":5}},"2829":{"start":{"line":6896,"column":6},"end":{"line":6898,"column":7}},"2830":{"start":{"line":6897,"column":8},"end":{"line":6897,"column":21}},"2831":{"start":{"line":6900,"column":4},"end":{"line":6900,"column":16}},"2832":{"start":{"line":6911,"column":0},"end":{"line":7022,"column":1}},"2833":{"start":{"line":6913,"column":2},"end":{"line":6913,"column":34}},"2834":{"start":{"line":6914,"column":2},"end":{"line":6914,"column":37}},"2835":{"start":{"line":6915,"column":2},"end":{"line":6915,"column":49}},"2836":{"start":{"line":6916,"column":2},"end":{"line":6916,"column":41}},"2837":{"start":{"line":6917,"column":2},"end":{"line":6917,"column":48}},"2838":{"start":{"line":6918,"column":2},"end":{"line":6918,"column":74}},"2839":{"start":{"line":6919,"column":2},"end":{"line":6919,"column":27}},"2840":{"start":{"line":6920,"column":2},"end":{"line":6920,"column":21}},"2841":{"start":{"line":6921,"column":2},"end":{"line":6921,"column":22}},"2842":{"start":{"line":6922,"column":2},"end":{"line":6922,"column":39}},"2843":{"start":{"line":6923,"column":2},"end":{"line":6923,"column":52}},"2844":{"start":{"line":6926,"column":2},"end":{"line":6926,"column":53}},"2845":{"start":{"line":6927,"column":2},"end":{"line":6927,"column":26}},"2846":{"start":{"line":6928,"column":2},"end":{"line":6928,"column":69}},"2847":{"start":{"line":6929,"column":2},"end":{"line":6929,"column":76}},"2848":{"start":{"line":6932,"column":2},"end":{"line":6933,"column":79}},"2849":{"start":{"line":6936,"column":2},"end":{"line":6936,"column":19}},"2850":{"start":{"line":6939,"column":2},"end":{"line":6939,"column":32}},"2851":{"start":{"line":6940,"column":2},"end":{"line":6940,"column":21}},"2852":{"start":{"line":6941,"column":2},"end":{"line":7019,"column":3}},"2853":{"start":{"line":6942,"column":4},"end":{"line":6942,"column":25}},"2854":{"start":{"line":6943,"column":4},"end":{"line":6943,"column":17}},"2855":{"start":{"line":6946,"column":4},"end":{"line":6948,"column":5}},"2856":{"start":{"line":6947,"column":6},"end":{"line":6947,"column":15}},"2857":{"start":{"line":6951,"column":4},"end":{"line":6951,"column":33}},"2858":{"start":{"line":6952,"column":4},"end":{"line":6956,"column":5}},"2859":{"start":{"line":6953,"column":6},"end":{"line":6955,"column":49}},"2860":{"start":{"line":6959,"column":4},"end":{"line":6959,"column":20}},"2861":{"start":{"line":6962,"column":4},"end":{"line":6966,"column":5}},"2862":{"start":{"line":6963,"column":6},"end":{"line":6963,"column":54}},"2863":{"start":{"line":6965,"column":6},"end":{"line":6965,"column":61}},"2864":{"start":{"line":6969,"column":4},"end":{"line":6969,"column":54}},"2865":{"start":{"line":6972,"column":4},"end":{"line":6993,"column":5}},"2866":{"start":{"line":6973,"column":6},"end":{"line":6973,"column":53}},"2867":{"start":{"line":6974,"column":11},"end":{"line":6993,"column":5}},"2868":{"start":{"line":6975,"column":6},"end":{"line":6975,"column":60}},"2869":{"start":{"line":6977,"column":6},"end":{"line":6977,"column":40}},"2870":{"start":{"line":6978,"column":6},"end":{"line":6985,"column":7}},"2871":{"start":{"line":6979,"column":8},"end":{"line":6979,"column":42}},"2872":{"start":{"line":6980,"column":13},"end":{"line":6985,"column":7}},"2873":{"start":{"line":6981,"column":8},"end":{"line":6981,"column":48}},"2874":{"start":{"line":6982,"column":8},"end":{"line":6982,"column":42}},"2875":{"start":{"line":6984,"column":8},"end":{"line":6984,"column":44}},"2876":{"start":{"line":6986,"column":6},"end":{"line":6991,"column":32}},"2877":{"start":{"line":6992,"column":6},"end":{"line":6992,"column":38}},"2878":{"start":{"line":6996,"column":4},"end":{"line":6996,"column":26}},"2879":{"start":{"line":6997,"column":4},"end":{"line":7001,"column":5}},"2880":{"start":{"line":6998,"column":6},"end":{"line":6998,"column":22}},"2881":{"start":{"line":6999,"column":11},"end":{"line":7001,"column":5}},"2882":{"start":{"line":7000,"column":6},"end":{"line":7000,"column":23}},"2883":{"start":{"line":7004,"column":4},"end":{"line":7018,"column":5}},"2884":{"start":{"line":7005,"column":6},"end":{"line":7005,"column":31}},"2885":{"start":{"line":7008,"column":6},"end":{"line":7008,"column":24}},"2886":{"start":{"line":7009,"column":6},"end":{"line":7009,"column":34}},"2887":{"start":{"line":7010,"column":6},"end":{"line":7014,"column":7}},"2888":{"start":{"line":7011,"column":8},"end":{"line":7013,"column":9}},"2889":{"start":{"line":7012,"column":10},"end":{"line":7012,"column":25}},"2890":{"start":{"line":7015,"column":6},"end":{"line":7017,"column":7}},"2891":{"start":{"line":7016,"column":8},"end":{"line":7016,"column":29}},"2892":{"start":{"line":7021,"column":2},"end":{"line":7021,"column":17}},"2893":{"start":{"line":7025,"column":0},"end":{"line":7025,"column":61}},"2894":{"start":{"line":7034,"column":0},"end":{"line":7047,"column":1}},"2895":{"start":{"line":7035,"column":2},"end":{"line":7035,"column":17}},"2896":{"start":{"line":7036,"column":2},"end":{"line":7045,"column":3}},"2897":{"start":{"line":7037,"column":4},"end":{"line":7037,"column":37}},"2898":{"start":{"line":7038,"column":4},"end":{"line":7044,"column":5}},"2899":{"start":{"line":7039,"column":6},"end":{"line":7039,"column":31}},"2900":{"start":{"line":7040,"column":6},"end":{"line":7042,"column":7}},"2901":{"start":{"line":7041,"column":8},"end":{"line":7041,"column":25}},"2902":{"start":{"line":7043,"column":6},"end":{"line":7043,"column":46}},"2903":{"start":{"line":7046,"column":2},"end":{"line":7046,"column":31}},"2904":{"start":{"line":7061,"column":0},"end":{"line":7121,"column":1}},"2905":{"start":{"line":7062,"column":2},"end":{"line":7062,"column":25}},"2906":{"start":{"line":7063,"column":2},"end":{"line":7063,"column":27}},"2907":{"start":{"line":7064,"column":2},"end":{"line":7064,"column":24}},"2908":{"start":{"line":7065,"column":2},"end":{"line":7065,"column":28}},"2909":{"start":{"line":7066,"column":2},"end":{"line":7068,"column":3}},"2910":{"start":{"line":7067,"column":4},"end":{"line":7067,"column":26}},"2911":{"start":{"line":7070,"column":2},"end":{"line":7070,"column":16}},"2912":{"start":{"line":7073,"column":2},"end":{"line":7077,"column":3}},"2913":{"start":{"line":7074,"column":4},"end":{"line":7074,"column":32}},"2914":{"start":{"line":7076,"column":4},"end":{"line":7076,"column":20}},"2915":{"start":{"line":7078,"column":2},"end":{"line":7078,"column":14}},"2916":{"start":{"line":7081,"column":2},"end":{"line":7085,"column":3}},"2917":{"start":{"line":7082,"column":4},"end":{"line":7082,"column":32}},"2918":{"start":{"line":7084,"column":4},"end":{"line":7084,"column":20}},"2919":{"start":{"line":7086,"column":2},"end":{"line":7086,"column":14}},"2920":{"start":{"line":7089,"column":2},"end":{"line":7108,"column":3}},"2921":{"start":{"line":7090,"column":4},"end":{"line":7090,"column":32}},"2922":{"start":{"line":7091,"column":9},"end":{"line":7108,"column":3}},"2923":{"start":{"line":7092,"column":4},"end":{"line":7092,"column":20}},"2924":{"start":{"line":7094,"column":4},"end":{"line":7099,"column":29}},"2925":{"start":{"line":7100,"column":4},"end":{"line":7100,"column":32}},"2926":{"start":{"line":7101,"column":4},"end":{"line":7107,"column":5}},"2927":{"start":{"line":7102,"column":6},"end":{"line":7104,"column":7}},"2928":{"start":{"line":7103,"column":8},"end":{"line":7103,"column":33}},"2929":{"start":{"line":7105,"column":11},"end":{"line":7107,"column":5}},"2930":{"start":{"line":7106,"column":6},"end":{"line":7106,"column":39}},"2931":{"start":{"line":7111,"column":2},"end":{"line":7117,"column":3}},"2932":{"start":{"line":7112,"column":4},"end":{"line":7116,"column":5}},"2933":{"start":{"line":7113,"column":6},"end":{"line":7113,"column":29}},"2934":{"start":{"line":7115,"column":6},"end":{"line":7115,"column":22}},"2935":{"start":{"line":7119,"column":2},"end":{"line":7119,"column":17}},"2936":{"start":{"line":7120,"column":2},"end":{"line":7120,"column":14}},"2937":{"start":{"line":7130,"column":0},"end":{"line":7221,"column":1}},"2938":{"start":{"line":7131,"column":2},"end":{"line":7131,"column":19}},"2939":{"start":{"line":7132,"column":2},"end":{"line":7132,"column":27}},"2940":{"start":{"line":7134,"column":2},"end":{"line":7134,"column":36}},"2941":{"start":{"line":7135,"column":2},"end":{"line":7218,"column":3}},"2942":{"start":{"line":7136,"column":4},"end":{"line":7136,"column":31}},"2943":{"start":{"line":7137,"column":4},"end":{"line":7139,"column":5}},"2944":{"start":{"line":7138,"column":6},"end":{"line":7138,"column":15}},"2945":{"start":{"line":7142,"column":4},"end":{"line":7142,"column":50}},"2946":{"start":{"line":7143,"column":4},"end":{"line":7145,"column":5}},"2947":{"start":{"line":7144,"column":6},"end":{"line":7144,"column":15}},"2948":{"start":{"line":7146,"column":4},"end":{"line":7146,"column":40}},"2949":{"start":{"line":7147,"column":4},"end":{"line":7217,"column":5}},"2950":{"start":{"line":7149,"column":6},"end":{"line":7149,"column":50}},"2951":{"start":{"line":7150,"column":6},"end":{"line":7216,"column":7}},"2952":{"start":{"line":7151,"column":8},"end":{"line":7151,"column":33}},"2953":{"start":{"line":7154,"column":8},"end":{"line":7154,"column":24}},"2954":{"start":{"line":7157,"column":8},"end":{"line":7161,"column":9}},"2955":{"start":{"line":7158,"column":10},"end":{"line":7158,"column":64}},"2956":{"start":{"line":7160,"column":10},"end":{"line":7160,"column":57}},"2957":{"start":{"line":7164,"column":8},"end":{"line":7168,"column":9}},"2958":{"start":{"line":7165,"column":10},"end":{"line":7165,"column":68}},"2959":{"start":{"line":7167,"column":10},"end":{"line":7167,"column":61}},"2960":{"start":{"line":7171,"column":8},"end":{"line":7171,"column":33}},"2961":{"start":{"line":7172,"column":8},"end":{"line":7186,"column":9}},"2962":{"start":{"line":7174,"column":10},"end":{"line":7176,"column":11}},"2963":{"start":{"line":7175,"column":12},"end":{"line":7175,"column":35}},"2964":{"start":{"line":7177,"column":10},"end":{"line":7177,"column":47}},"2965":{"start":{"line":7178,"column":10},"end":{"line":7178,"column":21}},"2966":{"start":{"line":7179,"column":10},"end":{"line":7185,"column":11}},"2967":{"start":{"line":7180,"column":12},"end":{"line":7184,"column":13}},"2968":{"start":{"line":7181,"column":14},"end":{"line":7181,"column":69}},"2969":{"start":{"line":7182,"column":19},"end":{"line":7184,"column":13}},"2970":{"start":{"line":7183,"column":14},"end":{"line":7183,"column":49}},"2971":{"start":{"line":7189,"column":8},"end":{"line":7189,"column":27}},"2972":{"start":{"line":7192,"column":8},"end":{"line":7211,"column":9}},"2973":{"start":{"line":7193,"column":10},"end":{"line":7197,"column":11}},"2974":{"start":{"line":7194,"column":12},"end":{"line":7194,"column":46}},"2975":{"start":{"line":7196,"column":12},"end":{"line":7196,"column":39}},"2976":{"start":{"line":7200,"column":10},"end":{"line":7200,"column":41}},"2977":{"start":{"line":7201,"column":10},"end":{"line":7210,"column":11}},"2978":{"start":{"line":7202,"column":12},"end":{"line":7207,"column":13}},"2979":{"start":{"line":7203,"column":14},"end":{"line":7203,"column":54}},"2980":{"start":{"line":7204,"column":14},"end":{"line":7204,"column":55}},"2981":{"start":{"line":7206,"column":14},"end":{"line":7206,"column":50}},"2982":{"start":{"line":7209,"column":12},"end":{"line":7209,"column":49}},"2983":{"start":{"line":7212,"column":8},"end":{"line":7212,"column":36}},"2984":{"start":{"line":7215,"column":8},"end":{"line":7215,"column":41}},"2985":{"start":{"line":7220,"column":2},"end":{"line":7220,"column":17}},"2986":{"start":{"line":7224,"column":0},"end":{"line":7224,"column":56}},"2987":{"start":{"line":7232,"column":0},"end":{"line":7236,"column":1}},"2988":{"start":{"line":7233,"column":2},"end":{"line":7233,"column":23}},"2989":{"start":{"line":7234,"column":2},"end":{"line":7234,"column":19}},"2990":{"start":{"line":7235,"column":2},"end":{"line":7235,"column":21}},"2991":{"start":{"line":7237,"column":0},"end":{"line":7237,"column":43}},"2992":{"start":{"line":7239,"column":0},"end":{"line":7239,"column":38}},"2993":{"start":{"line":7246,"column":0},"end":{"line":7251,"column":2}},"2994":{"start":{"line":7247,"column":2},"end":{"line":7247,"column":47}},"2995":{"start":{"line":7248,"column":2},"end":{"line":7248,"column":30}},"2996":{"start":{"line":7249,"column":2},"end":{"line":7249,"column":40}},"2997":{"start":{"line":7250,"column":2},"end":{"line":7250,"column":14}},"2998":{"start":{"line":7261,"column":0},"end":{"line":7277,"column":2}},"2999":{"start":{"line":7263,"column":2},"end":{"line":7265,"column":3}},"3000":{"start":{"line":7264,"column":4},"end":{"line":7264,"column":30}},"3001":{"start":{"line":7268,"column":2},"end":{"line":7268,"column":46}},"3002":{"start":{"line":7269,"column":2},"end":{"line":7269,"column":20}},"3003":{"start":{"line":7272,"column":2},"end":{"line":7274,"column":3}},"3004":{"start":{"line":7273,"column":4},"end":{"line":7273,"column":36}},"3005":{"start":{"line":7276,"column":2},"end":{"line":7276,"column":20}},"3006":{"start":{"line":7279,"column":0},"end":{"line":7279,"column":72}},"3007":{"start":{"line":7290,"column":0},"end":{"line":7292,"column":2}},"3008":{"start":{"line":7291,"column":2},"end":{"line":7291,"column":32}},"3009":{"start":{"line":7294,"column":0},"end":{"line":7294,"column":70}},"3010":{"start":{"line":7302,"column":0},"end":{"line":7312,"column":2}},"3011":{"start":{"line":7304,"column":2},"end":{"line":7304,"column":26}},"3012":{"start":{"line":7306,"column":2},"end":{"line":7306,"column":20}},"3013":{"start":{"line":7308,"column":2},"end":{"line":7308,"column":17}},"3014":{"start":{"line":7309,"column":2},"end":{"line":7311,"column":3}},"3015":{"start":{"line":7310,"column":4},"end":{"line":7310,"column":30}},"3016":{"start":{"line":7319,"column":0},"end":{"line":7321,"column":2}},"3017":{"start":{"line":7320,"column":2},"end":{"line":7320,"column":20}},"3018":{"start":{"line":7329,"column":0},"end":{"line":7370,"column":2}},"3019":{"start":{"line":7331,"column":2},"end":{"line":7331,"column":31}},"3020":{"start":{"line":7338,"column":2},"end":{"line":7338,"column":15}},"3021":{"start":{"line":7339,"column":2},"end":{"line":7339,"column":14}},"3022":{"start":{"line":7340,"column":2},"end":{"line":7340,"column":32}},"3023":{"start":{"line":7341,"column":2},"end":{"line":7350,"column":3}},"3024":{"start":{"line":7342,"column":4},"end":{"line":7342,"column":31}},"3025":{"start":{"line":7343,"column":4},"end":{"line":7343,"column":34}},"3026":{"start":{"line":7344,"column":4},"end":{"line":7349,"column":5}},"3027":{"start":{"line":7347,"column":6},"end":{"line":7347,"column":18}},"3028":{"start":{"line":7348,"column":6},"end":{"line":7348,"column":14}},"3029":{"start":{"line":7353,"column":2},"end":{"line":7367,"column":3}},"3030":{"start":{"line":7354,"column":4},"end":{"line":7354,"column":21}},"3031":{"start":{"line":7357,"column":4},"end":{"line":7357,"column":48}},"3032":{"start":{"line":7358,"column":4},"end":{"line":7358,"column":37}},"3033":{"start":{"line":7359,"column":4},"end":{"line":7359,"column":24}},"3034":{"start":{"line":7362,"column":4},"end":{"line":7366,"column":5}},"3035":{"start":{"line":7363,"column":6},"end":{"line":7365,"column":7}},"3036":{"start":{"line":7364,"column":8},"end":{"line":7364,"column":59}},"3037":{"start":{"line":7369,"column":2},"end":{"line":7369,"column":14}},"3038":{"start":{"line":7380,"column":0},"end":{"line":7389,"column":2}},"3039":{"start":{"line":7381,"column":2},"end":{"line":7383,"column":3}},"3040":{"start":{"line":7382,"column":4},"end":{"line":7382,"column":40}},"3041":{"start":{"line":7384,"column":2},"end":{"line":7387,"column":3}},"3042":{"start":{"line":7385,"column":4},"end":{"line":7386,"column":67}},"3043":{"start":{"line":7388,"column":2},"end":{"line":7388,"column":44}},"3044":{"start":{"line":7390,"column":0},"end":{"line":7396,"column":2}},"3045":{"start":{"line":7391,"column":2},"end":{"line":7391,"column":40}},"3046":{"start":{"line":7392,"column":2},"end":{"line":7394,"column":3}},"3047":{"start":{"line":7393,"column":4},"end":{"line":7393,"column":25}},"3048":{"start":{"line":7395,"column":2},"end":{"line":7395,"column":21}},"3049":{"start":{"line":7399,"column":0},"end":{"line":8032,"column":12}},"3050":{"start":{"line":7401,"column":0},"end":{"line":7420,"column":1}},"3051":{"start":{"line":7403,"column":2},"end":{"line":7403,"column":33}},"3052":{"start":{"line":7404,"column":2},"end":{"line":7412,"column":4}},"3053":{"start":{"line":7405,"column":4},"end":{"line":7410,"column":5}},"3054":{"start":{"line":7406,"column":6},"end":{"line":7406,"column":27}},"3055":{"start":{"line":7409,"column":6},"end":{"line":7409,"column":25}},"3056":{"start":{"line":7411,"column":4},"end":{"line":7411,"column":43}},"3057":{"start":{"line":7413,"column":2},"end":{"line":7415,"column":4}},"3058":{"start":{"line":7414,"column":4},"end":{"line":7414,"column":39}},"3059":{"start":{"line":7416,"column":2},"end":{"line":7418,"column":4}},"3060":{"start":{"line":7417,"column":4},"end":{"line":7417,"column":33}},"3061":{"start":{"line":7419,"column":2},"end":{"line":7419,"column":9}},"3062":{"start":{"line":7423,"column":0},"end":{"line":7431,"column":2}},"3063":{"start":{"line":7424,"column":2},"end":{"line":7429,"column":3}},"3064":{"start":{"line":7425,"column":4},"end":{"line":7425,"column":39}},"3065":{"start":{"line":7428,"column":4},"end":{"line":7428,"column":37}},"3066":{"start":{"line":7430,"column":2},"end":{"line":7430,"column":41}},"3067":{"start":{"line":7432,"column":0},"end":{"line":7434,"column":2}},"3068":{"start":{"line":7433,"column":2},"end":{"line":7433,"column":29}},"3069":{"start":{"line":7435,"column":0},"end":{"line":7437,"column":2}},"3070":{"start":{"line":7436,"column":2},"end":{"line":7436,"column":34}},"3071":{"start":{"line":7446,"column":0},"end":{"line":7472,"column":2}},"3072":{"start":{"line":7447,"column":2},"end":{"line":7449,"column":3}},"3073":{"start":{"line":7448,"column":4},"end":{"line":7448,"column":40}},"3074":{"start":{"line":7451,"column":2},"end":{"line":7451,"column":30}},"3075":{"start":{"line":7454,"column":2},"end":{"line":7468,"column":3}},"3076":{"start":{"line":7456,"column":4},"end":{"line":7456,"column":54}},"3077":{"start":{"line":7457,"column":4},"end":{"line":7457,"column":38}},"3078":{"start":{"line":7458,"column":4},"end":{"line":7458,"column":15}},"3079":{"start":{"line":7459,"column":4},"end":{"line":7467,"column":5}},"3080":{"start":{"line":7460,"column":6},"end":{"line":7462,"column":7}},"3081":{"start":{"line":7461,"column":8},"end":{"line":7461,"column":36}},"3082":{"start":{"line":7463,"column":6},"end":{"line":7463,"column":15}},"3083":{"start":{"line":7464,"column":6},"end":{"line":7466,"column":7}},"3084":{"start":{"line":7465,"column":8},"end":{"line":7465,"column":15}},"3085":{"start":{"line":7471,"column":2},"end":{"line":7471,"column":15}},"3086":{"start":{"line":7479,"column":0},"end":{"line":7497,"column":2}},"3087":{"start":{"line":7481,"column":2},"end":{"line":7481,"column":25}},"3088":{"start":{"line":7484,"column":2},"end":{"line":7484,"column":30}},"3089":{"start":{"line":7485,"column":2},"end":{"line":7485,"column":53}},"3090":{"start":{"line":7486,"column":2},"end":{"line":7488,"column":3}},"3091":{"start":{"line":7487,"column":4},"end":{"line":7487,"column":35}},"3092":{"start":{"line":7491,"column":2},"end":{"line":7491,"column":47}},"3093":{"start":{"line":7494,"column":2},"end":{"line":7494,"column":39}},"3094":{"start":{"line":7496,"column":2},"end":{"line":7496,"column":14}},"3095":{"start":{"line":7507,"column":0},"end":{"line":7536,"column":2}},"3096":{"start":{"line":7509,"column":2},"end":{"line":7509,"column":72}},"3097":{"start":{"line":7512,"column":2},"end":{"line":7512,"column":37}},"3098":{"start":{"line":7513,"column":2},"end":{"line":7513,"column":25}},"3099":{"start":{"line":7514,"column":2},"end":{"line":7514,"column":47}},"3100":{"start":{"line":7515,"column":2},"end":{"line":7520,"column":3}},"3101":{"start":{"line":7516,"column":4},"end":{"line":7516,"column":40}},"3102":{"start":{"line":7517,"column":4},"end":{"line":7517,"column":72}},"3103":{"start":{"line":7518,"column":4},"end":{"line":7518,"column":64}},"3104":{"start":{"line":7519,"column":4},"end":{"line":7519,"column":44}},"3105":{"start":{"line":7523,"column":2},"end":{"line":7523,"column":36}},"3106":{"start":{"line":7526,"column":2},"end":{"line":7528,"column":3}},"3107":{"start":{"line":7527,"column":4},"end":{"line":7527,"column":65}},"3108":{"start":{"line":7531,"column":2},"end":{"line":7533,"column":3}},"3109":{"start":{"line":7532,"column":4},"end":{"line":7532,"column":26}},"3110":{"start":{"line":7535,"column":2},"end":{"line":7535,"column":14}},"3111":{"start":{"line":7543,"column":0},"end":{"line":7603,"column":2}},"3112":{"start":{"line":7569,"column":2},"end":{"line":7569,"column":50}},"3113":{"start":{"line":7570,"column":2},"end":{"line":7570,"column":43}},"3114":{"start":{"line":7573,"column":2},"end":{"line":7575,"column":39}},"3115":{"start":{"line":7580,"column":2},"end":{"line":7580,"column":61}},"3116":{"start":{"line":7581,"column":2},"end":{"line":7582,"column":46}},"3117":{"start":{"line":7587,"column":2},"end":{"line":7587,"column":53}},"3118":{"start":{"line":7588,"column":2},"end":{"line":7591,"column":3}},"3119":{"start":{"line":7589,"column":4},"end":{"line":7590,"column":46}},"3120":{"start":{"line":7594,"column":2},"end":{"line":7594,"column":64}},"3121":{"start":{"line":7597,"column":2},"end":{"line":7597,"column":68}},"3122":{"start":{"line":7600,"column":2},"end":{"line":7600,"column":44}},"3123":{"start":{"line":7601,"column":2},"end":{"line":7601,"column":20}},"3124":{"start":{"line":7602,"column":2},"end":{"line":7602,"column":14}},"3125":{"start":{"line":7610,"column":0},"end":{"line":7617,"column":2}},"3126":{"start":{"line":7611,"column":2},"end":{"line":7615,"column":3}},"3127":{"start":{"line":7612,"column":4},"end":{"line":7612,"column":21}},"3128":{"start":{"line":7614,"column":4},"end":{"line":7614,"column":19}},"3129":{"start":{"line":7616,"column":2},"end":{"line":7616,"column":16}},"3130":{"start":{"line":7624,"column":0},"end":{"line":7630,"column":2}},"3131":{"start":{"line":7625,"column":2},"end":{"line":7629,"column":35}},"3132":{"start":{"line":7638,"column":0},"end":{"line":7646,"column":2}},"3133":{"start":{"line":7639,"column":2},"end":{"line":7643,"column":41}},"3134":{"start":{"line":7644,"column":2},"end":{"line":7644,"column":17}},"3135":{"start":{"line":7645,"column":2},"end":{"line":7645,"column":14}},"3136":{"start":{"line":7653,"column":0},"end":{"line":7655,"column":2}},"3137":{"start":{"line":7654,"column":2},"end":{"line":7654,"column":21}},"3138":{"start":{"line":7662,"column":0},"end":{"line":7664,"column":2}},"3139":{"start":{"line":7663,"column":2},"end":{"line":7663,"column":36}},"3140":{"start":{"line":7671,"column":0},"end":{"line":7673,"column":2}},"3141":{"start":{"line":7672,"column":2},"end":{"line":7672,"column":38}},"3142":{"start":{"line":7678,"column":0},"end":{"line":7681,"column":2}},"3143":{"start":{"line":7679,"column":2},"end":{"line":7679,"column":41}},"3144":{"start":{"line":7680,"column":2},"end":{"line":7680,"column":16}},"3145":{"start":{"line":7688,"column":0},"end":{"line":7698,"column":2}},"3146":{"start":{"line":7689,"column":2},"end":{"line":7689,"column":16}},"3147":{"start":{"line":7690,"column":2},"end":{"line":7696,"column":3}},"3148":{"start":{"line":7691,"column":4},"end":{"line":7691,"column":36}},"3149":{"start":{"line":7692,"column":4},"end":{"line":7694,"column":5}},"3150":{"start":{"line":7693,"column":6},"end":{"line":7693,"column":18}},"3151":{"start":{"line":7695,"column":4},"end":{"line":7695,"column":27}},"3152":{"start":{"line":7697,"column":2},"end":{"line":7697,"column":14}},"3153":{"start":{"line":7702,"column":0},"end":{"line":7705,"column":2}},"3154":{"start":{"line":7707,"column":0},"end":{"line":7712,"column":2}},"3155":{"start":{"line":7708,"column":2},"end":{"line":7709,"column":22}},"3156":{"start":{"line":7710,"column":2},"end":{"line":7710,"column":25}},"3157":{"start":{"line":7711,"column":2},"end":{"line":7711,"column":29}},"3158":{"start":{"line":7714,"column":0},"end":{"line":7719,"column":2}},"3159":{"start":{"line":7715,"column":2},"end":{"line":7717,"column":3}},"3160":{"start":{"line":7716,"column":4},"end":{"line":7716,"column":28}},"3161":{"start":{"line":7718,"column":2},"end":{"line":7718,"column":29}},"3162":{"start":{"line":7721,"column":0},"end":{"line":7725,"column":2}},"3163":{"start":{"line":7724,"column":2},"end":{"line":7724,"column":45}},"3164":{"start":{"line":7727,"column":0},"end":{"line":7831,"column":2}},"3165":{"start":{"line":7729,"column":2},"end":{"line":7729,"column":29}},"3166":{"start":{"line":7730,"column":2},"end":{"line":7730,"column":27}},"3167":{"start":{"line":7731,"column":2},"end":{"line":7731,"column":19}},"3168":{"start":{"line":7732,"column":2},"end":{"line":7828,"column":3}},"3169":{"start":{"line":7734,"column":4},"end":{"line":7734,"column":13}},"3170":{"start":{"line":7735,"column":4},"end":{"line":7735,"column":13}},"3171":{"start":{"line":7736,"column":4},"end":{"line":7736,"column":13}},"3172":{"start":{"line":7737,"column":4},"end":{"line":7737,"column":13}},"3173":{"start":{"line":7738,"column":4},"end":{"line":7738,"column":13}},"3174":{"start":{"line":7745,"column":4},"end":{"line":7755,"column":5}},"3175":{"start":{"line":7746,"column":6},"end":{"line":7746,"column":27}},"3176":{"start":{"line":7747,"column":6},"end":{"line":7747,"column":16}},"3177":{"start":{"line":7748,"column":6},"end":{"line":7748,"column":28}},"3178":{"start":{"line":7749,"column":6},"end":{"line":7749,"column":59}},"3179":{"start":{"line":7750,"column":6},"end":{"line":7750,"column":12}},"3180":{"start":{"line":7751,"column":6},"end":{"line":7751,"column":12}},"3181":{"start":{"line":7752,"column":6},"end":{"line":7752,"column":32}},"3182":{"start":{"line":7753,"column":6},"end":{"line":7753,"column":12}},"3183":{"start":{"line":7754,"column":6},"end":{"line":7754,"column":12}},"3184":{"start":{"line":7756,"column":4},"end":{"line":7767,"column":5}},"3185":{"start":{"line":7757,"column":6},"end":{"line":7757,"column":60}},"3186":{"start":{"line":7758,"column":6},"end":{"line":7758,"column":32}},"3187":{"start":{"line":7759,"column":6},"end":{"line":7759,"column":16}},"3188":{"start":{"line":7760,"column":6},"end":{"line":7760,"column":28}},"3189":{"start":{"line":7761,"column":6},"end":{"line":7761,"column":59}},"3190":{"start":{"line":7762,"column":6},"end":{"line":7762,"column":12}},"3191":{"start":{"line":7763,"column":6},"end":{"line":7763,"column":12}},"3192":{"start":{"line":7764,"column":6},"end":{"line":7764,"column":32}},"3193":{"start":{"line":7765,"column":6},"end":{"line":7765,"column":12}},"3194":{"start":{"line":7766,"column":6},"end":{"line":7766,"column":12}},"3195":{"start":{"line":7769,"column":4},"end":{"line":7780,"column":5}},"3196":{"start":{"line":7770,"column":6},"end":{"line":7770,"column":60}},"3197":{"start":{"line":7771,"column":6},"end":{"line":7771,"column":32}},"3198":{"start":{"line":7772,"column":6},"end":{"line":7772,"column":16}},"3199":{"start":{"line":7773,"column":6},"end":{"line":7773,"column":20}},"3200":{"start":{"line":7774,"column":6},"end":{"line":7774,"column":59}},"3201":{"start":{"line":7775,"column":6},"end":{"line":7775,"column":12}},"3202":{"start":{"line":7776,"column":6},"end":{"line":7776,"column":12}},"3203":{"start":{"line":7777,"column":6},"end":{"line":7777,"column":32}},"3204":{"start":{"line":7778,"column":6},"end":{"line":7778,"column":12}},"3205":{"start":{"line":7779,"column":6},"end":{"line":7779,"column":12}},"3206":{"start":{"line":7781,"column":4},"end":{"line":7792,"column":5}},"3207":{"start":{"line":7782,"column":6},"end":{"line":7782,"column":61}},"3208":{"start":{"line":7783,"column":6},"end":{"line":7783,"column":32}},"3209":{"start":{"line":7784,"column":6},"end":{"line":7784,"column":16}},"3210":{"start":{"line":7785,"column":6},"end":{"line":7785,"column":20}},"3211":{"start":{"line":7786,"column":6},"end":{"line":7786,"column":59}},"3212":{"start":{"line":7787,"column":6},"end":{"line":7787,"column":12}},"3213":{"start":{"line":7788,"column":6},"end":{"line":7788,"column":12}},"3214":{"start":{"line":7789,"column":6},"end":{"line":7789,"column":32}},"3215":{"start":{"line":7790,"column":6},"end":{"line":7790,"column":12}},"3216":{"start":{"line":7791,"column":6},"end":{"line":7791,"column":12}},"3217":{"start":{"line":7794,"column":4},"end":{"line":7805,"column":5}},"3218":{"start":{"line":7795,"column":6},"end":{"line":7795,"column":61}},"3219":{"start":{"line":7796,"column":6},"end":{"line":7796,"column":32}},"3220":{"start":{"line":7797,"column":6},"end":{"line":7797,"column":16}},"3221":{"start":{"line":7798,"column":6},"end":{"line":7798,"column":34}},"3222":{"start":{"line":7799,"column":6},"end":{"line":7799,"column":59}},"3223":{"start":{"line":7800,"column":6},"end":{"line":7800,"column":12}},"3224":{"start":{"line":7801,"column":6},"end":{"line":7801,"column":12}},"3225":{"start":{"line":7802,"column":6},"end":{"line":7802,"column":32}},"3226":{"start":{"line":7803,"column":6},"end":{"line":7803,"column":12}},"3227":{"start":{"line":7804,"column":6},"end":{"line":7804,"column":12}},"3228":{"start":{"line":7807,"column":4},"end":{"line":7818,"column":5}},"3229":{"start":{"line":7808,"column":6},"end":{"line":7808,"column":61}},"3230":{"start":{"line":7809,"column":6},"end":{"line":7809,"column":32}},"3231":{"start":{"line":7810,"column":6},"end":{"line":7810,"column":16}},"3232":{"start":{"line":7811,"column":6},"end":{"line":7811,"column":20}},"3233":{"start":{"line":7812,"column":6},"end":{"line":7812,"column":59}},"3234":{"start":{"line":7813,"column":6},"end":{"line":7813,"column":12}},"3235":{"start":{"line":7814,"column":6},"end":{"line":7814,"column":12}},"3236":{"start":{"line":7815,"column":6},"end":{"line":7815,"column":32}},"3237":{"start":{"line":7816,"column":6},"end":{"line":7816,"column":12}},"3238":{"start":{"line":7817,"column":6},"end":{"line":7817,"column":12}},"3239":{"start":{"line":7821,"column":4},"end":{"line":7821,"column":26}},"3240":{"start":{"line":7822,"column":4},"end":{"line":7822,"column":26}},"3241":{"start":{"line":7823,"column":4},"end":{"line":7823,"column":26}},"3242":{"start":{"line":7824,"column":4},"end":{"line":7824,"column":26}},"3243":{"start":{"line":7825,"column":4},"end":{"line":7825,"column":26}},"3244":{"start":{"line":7827,"column":4},"end":{"line":7827,"column":14}},"3245":{"start":{"line":7830,"column":2},"end":{"line":7830,"column":11}},"3246":{"start":{"line":7833,"column":0},"end":{"line":7858,"column":2}},"3247":{"start":{"line":7834,"column":2},"end":{"line":7840,"column":4}},"3248":{"start":{"line":7841,"column":2},"end":{"line":7849,"column":4}},"3249":{"start":{"line":7842,"column":4},"end":{"line":7842,"column":35}},"3250":{"start":{"line":7843,"column":4},"end":{"line":7843,"column":23}},"3251":{"start":{"line":7844,"column":4},"end":{"line":7844,"column":23}},"3252":{"start":{"line":7845,"column":4},"end":{"line":7845,"column":23}},"3253":{"start":{"line":7846,"column":4},"end":{"line":7846,"column":23}},"3254":{"start":{"line":7847,"column":4},"end":{"line":7847,"column":23}},"3255":{"start":{"line":7848,"column":4},"end":{"line":7848,"column":16}},"3256":{"start":{"line":7850,"column":2},"end":{"line":7856,"column":4}},"3257":{"start":{"line":7851,"column":4},"end":{"line":7851,"column":30}},"3258":{"start":{"line":7852,"column":4},"end":{"line":7852,"column":30}},"3259":{"start":{"line":7853,"column":4},"end":{"line":7853,"column":30}},"3260":{"start":{"line":7854,"column":4},"end":{"line":7854,"column":30}},"3261":{"start":{"line":7855,"column":4},"end":{"line":7855,"column":30}},"3262":{"start":{"line":7857,"column":2},"end":{"line":7857,"column":15}},"3263":{"start":{"line":7862,"column":0},"end":{"line":7866,"column":2}},"3264":{"start":{"line":7868,"column":0},"end":{"line":7873,"column":2}},"3265":{"start":{"line":7869,"column":2},"end":{"line":7870,"column":22}},"3266":{"start":{"line":7871,"column":2},"end":{"line":7871,"column":25}},"3267":{"start":{"line":7872,"column":2},"end":{"line":7872,"column":29}},"3268":{"start":{"line":7875,"column":0},"end":{"line":7880,"column":2}},"3269":{"start":{"line":7876,"column":2},"end":{"line":7878,"column":3}},"3270":{"start":{"line":7877,"column":4},"end":{"line":7877,"column":19}},"3271":{"start":{"line":7879,"column":2},"end":{"line":7879,"column":31}},"3272":{"start":{"line":7882,"column":0},"end":{"line":7886,"column":2}},"3273":{"start":{"line":7885,"column":2},"end":{"line":7885,"column":45}},"3274":{"start":{"line":7888,"column":0},"end":{"line":7970,"column":2}},"3275":{"start":{"line":7890,"column":2},"end":{"line":7890,"column":57}},"3276":{"start":{"line":7891,"column":2},"end":{"line":7891,"column":27}},"3277":{"start":{"line":7892,"column":2},"end":{"line":7892,"column":21}},"3278":{"start":{"line":7893,"column":2},"end":{"line":7893,"column":21}},"3279":{"start":{"line":7894,"column":2},"end":{"line":7967,"column":3}},"3280":{"start":{"line":7897,"column":4},"end":{"line":7899,"column":5}},"3281":{"start":{"line":7898,"column":6},"end":{"line":7898,"column":31}},"3282":{"start":{"line":7900,"column":4},"end":{"line":7915,"column":5}},"3283":{"start":{"line":7902,"column":6},"end":{"line":7902,"column":21}},"3284":{"start":{"line":7903,"column":6},"end":{"line":7906,"column":20}},"3285":{"start":{"line":7908,"column":6},"end":{"line":7908,"column":22}},"3286":{"start":{"line":7909,"column":6},"end":{"line":7912,"column":19}},"3287":{"start":{"line":7914,"column":6},"end":{"line":7914,"column":53}},"3288":{"start":{"line":7918,"column":4},"end":{"line":7918,"column":13}},"3289":{"start":{"line":7919,"column":4},"end":{"line":7919,"column":13}},"3290":{"start":{"line":7920,"column":4},"end":{"line":7920,"column":13}},"3291":{"start":{"line":7921,"column":4},"end":{"line":7921,"column":13}},"3292":{"start":{"line":7922,"column":4},"end":{"line":7922,"column":13}},"3293":{"start":{"line":7923,"column":4},"end":{"line":7923,"column":13}},"3294":{"start":{"line":7924,"column":4},"end":{"line":7924,"column":13}},"3295":{"start":{"line":7925,"column":4},"end":{"line":7925,"column":13}},"3296":{"start":{"line":7928,"column":4},"end":{"line":7955,"column":5}},"3297":{"start":{"line":7930,"column":6},"end":{"line":7933,"column":32}},"3298":{"start":{"line":7935,"column":6},"end":{"line":7935,"column":29}},"3299":{"start":{"line":7937,"column":6},"end":{"line":7940,"column":33}},"3300":{"start":{"line":7942,"column":6},"end":{"line":7942,"column":36}},"3301":{"start":{"line":7945,"column":6},"end":{"line":7945,"column":39}},"3302":{"start":{"line":7946,"column":6},"end":{"line":7946,"column":20}},"3303":{"start":{"line":7947,"column":6},"end":{"line":7947,"column":12}},"3304":{"start":{"line":7948,"column":6},"end":{"line":7948,"column":12}},"3305":{"start":{"line":7949,"column":6},"end":{"line":7949,"column":12}},"3306":{"start":{"line":7950,"column":6},"end":{"line":7950,"column":23}},"3307":{"start":{"line":7951,"column":6},"end":{"line":7951,"column":12}},"3308":{"start":{"line":7952,"column":6},"end":{"line":7952,"column":12}},"3309":{"start":{"line":7953,"column":6},"end":{"line":7953,"column":12}},"3310":{"start":{"line":7954,"column":6},"end":{"line":7954,"column":24}},"3311":{"start":{"line":7958,"column":4},"end":{"line":7958,"column":26}},"3312":{"start":{"line":7959,"column":4},"end":{"line":7959,"column":26}},"3313":{"start":{"line":7960,"column":4},"end":{"line":7960,"column":26}},"3314":{"start":{"line":7961,"column":4},"end":{"line":7961,"column":26}},"3315":{"start":{"line":7962,"column":4},"end":{"line":7962,"column":26}},"3316":{"start":{"line":7963,"column":4},"end":{"line":7963,"column":26}},"3317":{"start":{"line":7964,"column":4},"end":{"line":7964,"column":26}},"3318":{"start":{"line":7965,"column":4},"end":{"line":7965,"column":26}},"3319":{"start":{"line":7966,"column":4},"end":{"line":7966,"column":14}},"3320":{"start":{"line":7969,"column":2},"end":{"line":7969,"column":11}},"3321":{"start":{"line":7972,"column":0},"end":{"line":8006,"column":2}},"3322":{"start":{"line":7973,"column":2},"end":{"line":7982,"column":4}},"3323":{"start":{"line":7983,"column":2},"end":{"line":7994,"column":4}},"3324":{"start":{"line":7984,"column":4},"end":{"line":7984,"column":37}},"3325":{"start":{"line":7985,"column":4},"end":{"line":7985,"column":23}},"3326":{"start":{"line":7986,"column":4},"end":{"line":7986,"column":23}},"3327":{"start":{"line":7987,"column":4},"end":{"line":7987,"column":23}},"3328":{"start":{"line":7988,"column":4},"end":{"line":7988,"column":23}},"3329":{"start":{"line":7989,"column":4},"end":{"line":7989,"column":23}},"3330":{"start":{"line":7990,"column":4},"end":{"line":7990,"column":23}},"3331":{"start":{"line":7991,"column":4},"end":{"line":7991,"column":23}},"3332":{"start":{"line":7992,"column":4},"end":{"line":7992,"column":23}},"3333":{"start":{"line":7993,"column":4},"end":{"line":7993,"column":16}},"3334":{"start":{"line":7995,"column":2},"end":{"line":8004,"column":4}},"3335":{"start":{"line":7996,"column":4},"end":{"line":7996,"column":30}},"3336":{"start":{"line":7997,"column":4},"end":{"line":7997,"column":30}},"3337":{"start":{"line":7998,"column":4},"end":{"line":7998,"column":30}},"3338":{"start":{"line":7999,"column":4},"end":{"line":7999,"column":30}},"3339":{"start":{"line":8000,"column":4},"end":{"line":8000,"column":30}},"3340":{"start":{"line":8001,"column":4},"end":{"line":8001,"column":30}},"3341":{"start":{"line":8002,"column":4},"end":{"line":8002,"column":30}},"3342":{"start":{"line":8003,"column":4},"end":{"line":8003,"column":30}},"3343":{"start":{"line":8005,"column":2},"end":{"line":8005,"column":15}},"3344":{"start":{"line":8008,"column":0},"end":{"line":8030,"column":2}},"3345":{"start":{"line":8010,"column":2},"end":{"line":8026,"column":52}},"3346":{"start":{"line":8029,"column":2},"end":{"line":8029,"column":28}},"3347":{"start":{"line":8034,"column":0},"end":{"line":8040,"column":1}},"3348":{"start":{"line":8036,"column":0},"end":{"line":8038,"column":2}},"3349":{"start":{"line":8037,"column":2},"end":{"line":8037,"column":50}},"3350":{"start":{"line":8047,"column":0},"end":{"line":8047,"column":16}},"3351":{"start":{"line":8048,"column":0},"end":{"line":8058,"column":2}},"3352":{"start":{"line":8059,"column":0},"end":{"line":8069,"column":2}},"3353":{"start":{"line":8060,"column":2},"end":{"line":8060,"column":18}},"3354":{"start":{"line":8061,"column":2},"end":{"line":8061,"column":47}},"3355":{"start":{"line":8062,"column":2},"end":{"line":8062,"column":28}},"3356":{"start":{"line":8063,"column":2},"end":{"line":8063,"column":24}},"3357":{"start":{"line":8064,"column":2},"end":{"line":8066,"column":3}},"3358":{"start":{"line":8065,"column":4},"end":{"line":8065,"column":59}},"3359":{"start":{"line":8067,"column":2},"end":{"line":8067,"column":78}},"3360":{"start":{"line":8068,"column":2},"end":{"line":8068,"column":16}},"3361":{"start":{"line":8077,"column":0},"end":{"line":8107,"column":1}},"3362":{"start":{"line":8078,"column":2},"end":{"line":8078,"column":16}},"3363":{"start":{"line":8080,"column":2},"end":{"line":8082,"column":3}},"3364":{"start":{"line":8081,"column":4},"end":{"line":8081,"column":15}},"3365":{"start":{"line":8085,"column":2},"end":{"line":8085,"column":30}},"3366":{"start":{"line":8086,"column":2},"end":{"line":8086,"column":18}},"3367":{"start":{"line":8087,"column":2},"end":{"line":8104,"column":3}},"3368":{"start":{"line":8088,"column":4},"end":{"line":8091,"column":5}},"3369":{"start":{"line":8089,"column":6},"end":{"line":8089,"column":20}},"3370":{"start":{"line":8090,"column":6},"end":{"line":8090,"column":15}},"3371":{"start":{"line":8092,"column":4},"end":{"line":8102,"column":5}},"3372":{"start":{"line":8093,"column":6},"end":{"line":8093,"column":20}},"3373":{"start":{"line":8094,"column":6},"end":{"line":8100,"column":7}},"3374":{"start":{"line":8096,"column":8},"end":{"line":8096,"column":21}},"3375":{"start":{"line":8099,"column":8},"end":{"line":8099,"column":26}},"3376":{"start":{"line":8101,"column":6},"end":{"line":8101,"column":15}},"3377":{"start":{"line":8103,"column":4},"end":{"line":8103,"column":31}},"3378":{"start":{"line":8106,"column":2},"end":{"line":8106,"column":33}},"3379":{"start":{"line":8109,"column":0},"end":{"line":8115,"column":1}},"3380":{"start":{"line":8111,"column":2},"end":{"line":8111,"column":35}},"3381":{"start":{"line":8112,"column":7},"end":{"line":8115,"column":1}},"3382":{"start":{"line":8114,"column":2},"end":{"line":8114,"column":34}},"3383":{"start":{"line":8117,"column":0},"end":{"line":8136,"column":1}},"3384":{"start":{"line":8118,"column":2},"end":{"line":8130,"column":4}},"3385":{"start":{"line":8119,"column":4},"end":{"line":8129,"column":5}},"3386":{"start":{"line":8123,"column":8},"end":{"line":8123,"column":51}},"3387":{"start":{"line":8124,"column":8},"end":{"line":8124,"column":14}},"3388":{"start":{"line":8126,"column":8},"end":{"line":8128,"column":61}},"3389":{"start":{"line":8133,"column":2},"end":{"line":8133,"column":51}},"3390":{"start":{"line":8134,"column":2},"end":{"line":8134,"column":41}},"3391":{"start":{"line":8135,"column":2},"end":{"line":8135,"column":43}},"3392":{"start":{"line":8139,"column":0},"end":{"line":8139,"column":14}},"3393":{"start":{"line":8145,"column":0},"end":{"line":8149,"column":2}},"3394":{"start":{"line":8146,"column":2},"end":{"line":8148,"column":5}},"3395":{"start":{"line":8147,"column":4},"end":{"line":8147,"column":21}},"3396":{"start":{"line":8151,"column":0},"end":{"line":8176,"column":1}},"3397":{"start":{"line":8153,"column":2},"end":{"line":8157,"column":5}},"3398":{"start":{"line":8155,"column":4},"end":{"line":8155,"column":21}},"3399":{"start":{"line":8156,"column":4},"end":{"line":8156,"column":19}},"3400":{"start":{"line":8160,"column":2},"end":{"line":8160,"column":19}},"3401":{"start":{"line":8162,"column":2},"end":{"line":8166,"column":3}},"3402":{"start":{"line":8165,"column":4},"end":{"line":8165,"column":29}},"3403":{"start":{"line":8168,"column":2},"end":{"line":8175,"column":3}},"3404":{"start":{"line":8170,"column":4},"end":{"line":8174,"column":5}},"3405":{"start":{"line":8171,"column":6},"end":{"line":8171,"column":34}},"3406":{"start":{"line":8173,"column":6},"end":{"line":8173,"column":25}},"3407":{"start":{"line":8178,"column":0},"end":{"line":8178,"column":15}}},"branchMap":{"1":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":32}},{"start":{"line":40,"column":36},"end":{"line":40,"column":52}},{"start":{"line":40,"column":56},"end":{"line":40,"column":77}}]},"2":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":15},"end":{"line":41,"column":23}},{"start":{"line":42,"column":3},"end":{"line":42,"column":32}},{"start":{"line":42,"column":36},"end":{"line":42,"column":63}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":0},"end":{"line":43,"column":0}},{"start":{"line":43,"column":0},"end":{"line":43,"column":0}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"6":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":11},"end":{"line":47,"column":11}},{"start":{"line":47,"column":11},"end":{"line":47,"column":11}}]},"7":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":11},"end":{"line":49,"column":11}},{"start":{"line":49,"column":11},"end":{"line":49,"column":11}}]},"8":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"9":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"10":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":12},"end":{"line":88,"column":19}},{"start":{"line":88,"column":23},"end":{"line":88,"column":25}}]},"11":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"12":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"13":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"14":{"line":107,"type":"cond-expr","locations":[{"start":{"line":107,"column":49},"end":{"line":107,"column":54}},{"start":{"line":107,"column":57},"end":{"line":107,"column":59}}]},"15":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":109,"column":2}},{"start":{"line":109,"column":2},"end":{"line":109,"column":2}}]},"16":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"17":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"18":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"19":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"20":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"21":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"22":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"23":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":6},"end":{"line":150,"column":6}},{"start":{"line":150,"column":6},"end":{"line":150,"column":6}}]},"24":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":170,"column":4}},{"start":{"line":170,"column":4},"end":{"line":170,"column":4}}]},"25":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":4},"end":{"line":174,"column":4}},{"start":{"line":174,"column":4},"end":{"line":174,"column":4}}]},"26":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":7},"end":{"line":174,"column":28}},{"start":{"line":174,"column":32},"end":{"line":174,"column":46}},{"start":{"line":174,"column":50},"end":{"line":174,"column":69}}]},"27":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":6},"end":{"line":175,"column":6}},{"start":{"line":175,"column":6},"end":{"line":175,"column":6}}]},"28":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":13},"end":{"line":178,"column":13}},{"start":{"line":178,"column":13},"end":{"line":178,"column":13}}]},"29":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":11},"end":{"line":182,"column":11}},{"start":{"line":182,"column":11},"end":{"line":182,"column":11}}]},"30":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":14},"end":{"line":182,"column":27}},{"start":{"line":182,"column":31},"end":{"line":182,"column":51}}]},"31":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":4},"end":{"line":188,"column":4}},{"start":{"line":188,"column":4},"end":{"line":188,"column":4}}]},"32":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":7},"end":{"line":188,"column":21}},{"start":{"line":188,"column":25},"end":{"line":188,"column":42}}]},"33":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":194,"column":4}},{"start":{"line":194,"column":4},"end":{"line":194,"column":4}}]},"34":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":6},"end":{"line":201,"column":6}},{"start":{"line":201,"column":6},"end":{"line":201,"column":6}}]},"35":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":9},"end":{"line":201,"column":27}},{"start":{"line":201,"column":31},"end":{"line":201,"column":61}}]},"36":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"37":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":4},"end":{"line":213,"column":4}},{"start":{"line":213,"column":4},"end":{"line":213,"column":4}}]},"38":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":6},"end":{"line":218,"column":6}},{"start":{"line":218,"column":6},"end":{"line":218,"column":6}}]},"39":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":11},"end":{"line":222,"column":11}},{"start":{"line":222,"column":11},"end":{"line":222,"column":11}}]},"40":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":14},"end":{"line":222,"column":34}},{"start":{"line":222,"column":38},"end":{"line":222,"column":48}}]},"41":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":2},"end":{"line":248,"column":2}},{"start":{"line":248,"column":2},"end":{"line":248,"column":2}}]},"42":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":2},"end":{"line":255,"column":2}},{"start":{"line":255,"column":2},"end":{"line":255,"column":2}}]},"43":{"line":259,"type":"binary-expr","locations":[{"start":{"line":259,"column":12},"end":{"line":259,"column":19}},{"start":{"line":259,"column":23},"end":{"line":259,"column":25}}]},"44":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":2},"end":{"line":262,"column":2}},{"start":{"line":262,"column":2},"end":{"line":262,"column":2}}]},"45":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":2},"end":{"line":265,"column":2}},{"start":{"line":265,"column":2},"end":{"line":265,"column":2}}]},"46":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":271,"column":4}},{"start":{"line":271,"column":4},"end":{"line":271,"column":4}}]},"47":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":8},"end":{"line":273,"column":8}},{"start":{"line":273,"column":8},"end":{"line":273,"column":8}}]},"48":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":10},"end":{"line":277,"column":10}},{"start":{"line":277,"column":10},"end":{"line":277,"column":10}}]},"49":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":10},"end":{"line":282,"column":10}},{"start":{"line":282,"column":10},"end":{"line":282,"column":10}}]},"50":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":6},"end":{"line":297,"column":6}},{"start":{"line":297,"column":6},"end":{"line":297,"column":6}}]},"51":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":9},"end":{"line":297,"column":16}},{"start":{"line":297,"column":20},"end":{"line":297,"column":37}}]},"52":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":308,"column":4}},{"start":{"line":308,"column":4},"end":{"line":308,"column":4}}]},"53":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":21},"end":{"line":309,"column":42}},{"start":{"line":309,"column":46},"end":{"line":309,"column":48}}]},"54":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":4},"end":{"line":316,"column":4}},{"start":{"line":316,"column":4},"end":{"line":316,"column":4}}]},"55":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":6},"end":{"line":318,"column":6}},{"start":{"line":318,"column":6},"end":{"line":318,"column":6}}]},"56":{"line":318,"type":"binary-expr","locations":[{"start":{"line":318,"column":9},"end":{"line":318,"column":42}},{"start":{"line":318,"column":46},"end":{"line":318,"column":73}}]},"57":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":6},"end":{"line":325,"column":6}},{"start":{"line":325,"column":6},"end":{"line":325,"column":6}}]},"58":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":8},"end":{"line":337,"column":8}},{"start":{"line":337,"column":8},"end":{"line":337,"column":8}}]},"59":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":8},"end":{"line":343,"column":8}},{"start":{"line":343,"column":8},"end":{"line":343,"column":8}}]},"60":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":8},"end":{"line":353,"column":8}},{"start":{"line":353,"column":8},"end":{"line":353,"column":8}}]},"61":{"line":353,"type":"binary-expr","locations":[{"start":{"line":353,"column":11},"end":{"line":353,"column":30}},{"start":{"line":353,"column":35},"end":{"line":353,"column":55}},{"start":{"line":354,"column":10},"end":{"line":354,"column":44}}]},"62":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":15},"end":{"line":356,"column":15}},{"start":{"line":356,"column":15},"end":{"line":356,"column":15}}]},"63":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":8},"end":{"line":361,"column":8}},{"start":{"line":361,"column":8},"end":{"line":361,"column":8}}]},"64":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":2},"end":{"line":384,"column":2}},{"start":{"line":384,"column":2},"end":{"line":384,"column":2}}]},"65":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":2},"end":{"line":391,"column":2}},{"start":{"line":391,"column":2},"end":{"line":391,"column":2}}]},"66":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":9},"end":{"line":394,"column":9}},{"start":{"line":394,"column":9},"end":{"line":394,"column":9}}]},"67":{"line":399,"type":"binary-expr","locations":[{"start":{"line":399,"column":12},"end":{"line":399,"column":19}},{"start":{"line":399,"column":23},"end":{"line":399,"column":25}}]},"68":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":2},"end":{"line":402,"column":2}},{"start":{"line":402,"column":2},"end":{"line":402,"column":2}}]},"69":{"line":403,"type":"cond-expr","locations":[{"start":{"line":403,"column":49},"end":{"line":403,"column":54}},{"start":{"line":403,"column":57},"end":{"line":403,"column":59}}]},"70":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":2},"end":{"line":405,"column":2}},{"start":{"line":405,"column":2},"end":{"line":405,"column":2}}]},"71":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":4},"end":{"line":411,"column":4}},{"start":{"line":411,"column":4},"end":{"line":411,"column":4}}]},"72":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":4},"end":{"line":425,"column":4}},{"start":{"line":425,"column":4},"end":{"line":425,"column":4}}]},"73":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":6},"end":{"line":433,"column":6}},{"start":{"line":433,"column":6},"end":{"line":433,"column":6}}]},"74":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":2},"end":{"line":460,"column":2}},{"start":{"line":460,"column":2},"end":{"line":460,"column":2}}]},"75":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":2},"end":{"line":467,"column":2}},{"start":{"line":467,"column":2},"end":{"line":467,"column":2}}]},"76":{"line":471,"type":"binary-expr","locations":[{"start":{"line":471,"column":12},"end":{"line":471,"column":19}},{"start":{"line":471,"column":23},"end":{"line":471,"column":25}}]},"77":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":2},"end":{"line":474,"column":2}},{"start":{"line":474,"column":2},"end":{"line":474,"column":2}}]},"78":{"line":475,"type":"cond-expr","locations":[{"start":{"line":475,"column":49},"end":{"line":475,"column":54}},{"start":{"line":475,"column":57},"end":{"line":475,"column":59}}]},"79":{"line":477,"type":"if","locations":[{"start":{"line":477,"column":2},"end":{"line":477,"column":2}},{"start":{"line":477,"column":2},"end":{"line":477,"column":2}}]},"80":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":2},"end":{"line":480,"column":2}},{"start":{"line":480,"column":2},"end":{"line":480,"column":2}}]},"81":{"line":483,"type":"binary-expr","locations":[{"start":{"line":483,"column":21},"end":{"line":483,"column":37}},{"start":{"line":483,"column":41},"end":{"line":483,"column":46}}]},"82":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":2},"end":{"line":484,"column":2}},{"start":{"line":484,"column":2},"end":{"line":484,"column":2}}]},"83":{"line":487,"type":"binary-expr","locations":[{"start":{"line":487,"column":24},"end":{"line":487,"column":43}},{"start":{"line":487,"column":47},"end":{"line":487,"column":52}}]},"84":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":4},"end":{"line":491,"column":4}},{"start":{"line":491,"column":4},"end":{"line":491,"column":4}}]},"85":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":8},"end":{"line":493,"column":8}},{"start":{"line":493,"column":8},"end":{"line":493,"column":8}}]},"86":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":10},"end":{"line":497,"column":10}},{"start":{"line":497,"column":10},"end":{"line":497,"column":10}}]},"87":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":10},"end":{"line":502,"column":10}},{"start":{"line":502,"column":10},"end":{"line":502,"column":10}}]},"88":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":6},"end":{"line":517,"column":6}},{"start":{"line":517,"column":6},"end":{"line":517,"column":6}}]},"89":{"line":517,"type":"binary-expr","locations":[{"start":{"line":517,"column":9},"end":{"line":517,"column":16}},{"start":{"line":517,"column":20},"end":{"line":517,"column":37}}]},"90":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":4},"end":{"line":530,"column":4}},{"start":{"line":530,"column":4},"end":{"line":530,"column":4}}]},"91":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":6},"end":{"line":532,"column":6}},{"start":{"line":532,"column":6},"end":{"line":532,"column":6}}]},"92":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":8},"end":{"line":533,"column":8}},{"start":{"line":533,"column":8},"end":{"line":533,"column":8}}]},"93":{"line":535,"type":"if","locations":[{"start":{"line":535,"column":15},"end":{"line":535,"column":15}},{"start":{"line":535,"column":15},"end":{"line":535,"column":15}}]},"94":{"line":542,"type":"binary-expr","locations":[{"start":{"line":542,"column":14},"end":{"line":542,"column":17}},{"start":{"line":542,"column":21},"end":{"line":542,"column":23}}]},"95":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":6},"end":{"line":550,"column":6}},{"start":{"line":550,"column":6},"end":{"line":550,"column":6}}]},"96":{"line":561,"type":"if","locations":[{"start":{"line":561,"column":8},"end":{"line":561,"column":8}},{"start":{"line":561,"column":8},"end":{"line":561,"column":8}}]},"97":{"line":581,"type":"if","locations":[{"start":{"line":581,"column":10},"end":{"line":581,"column":10}},{"start":{"line":581,"column":10},"end":{"line":581,"column":10}}]},"98":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":2},"end":{"line":615,"column":2}},{"start":{"line":615,"column":2},"end":{"line":615,"column":2}}]},"99":{"line":636,"type":"if","locations":[{"start":{"line":636,"column":2},"end":{"line":636,"column":2}},{"start":{"line":636,"column":2},"end":{"line":636,"column":2}}]},"100":{"line":640,"type":"binary-expr","locations":[{"start":{"line":640,"column":12},"end":{"line":640,"column":19}},{"start":{"line":640,"column":23},"end":{"line":640,"column":25}}]},"101":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":2},"end":{"line":643,"column":2}},{"start":{"line":643,"column":2},"end":{"line":643,"column":2}}]},"102":{"line":644,"type":"cond-expr","locations":[{"start":{"line":644,"column":49},"end":{"line":644,"column":54}},{"start":{"line":644,"column":57},"end":{"line":644,"column":59}}]},"103":{"line":646,"type":"if","locations":[{"start":{"line":646,"column":2},"end":{"line":646,"column":2}},{"start":{"line":646,"column":2},"end":{"line":646,"column":2}}]},"104":{"line":652,"type":"if","locations":[{"start":{"line":652,"column":4},"end":{"line":652,"column":4}},{"start":{"line":652,"column":4},"end":{"line":652,"column":4}}]},"105":{"line":670,"type":"if","locations":[{"start":{"line":670,"column":6},"end":{"line":670,"column":6}},{"start":{"line":670,"column":6},"end":{"line":670,"column":6}}]},"106":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":8},"end":{"line":681,"column":8}},{"start":{"line":681,"column":8},"end":{"line":681,"column":8}}]},"107":{"line":681,"type":"binary-expr","locations":[{"start":{"line":681,"column":11},"end":{"line":681,"column":30}},{"start":{"line":681,"column":34},"end":{"line":681,"column":52}}]},"108":{"line":686,"type":"if","locations":[{"start":{"line":686,"column":8},"end":{"line":686,"column":8}},{"start":{"line":686,"column":8},"end":{"line":686,"column":8}}]},"109":{"line":687,"type":"if","locations":[{"start":{"line":687,"column":10},"end":{"line":687,"column":10}},{"start":{"line":687,"column":10},"end":{"line":687,"column":10}}]},"110":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":10},"end":{"line":699,"column":10}},{"start":{"line":699,"column":10},"end":{"line":699,"column":10}}]},"111":{"line":699,"type":"binary-expr","locations":[{"start":{"line":699,"column":13},"end":{"line":699,"column":27}},{"start":{"line":699,"column":31},"end":{"line":699,"column":46}},{"start":{"line":699,"column":50},"end":{"line":699,"column":55}}]},"112":{"line":703,"type":"if","locations":[{"start":{"line":703,"column":10},"end":{"line":703,"column":10}},{"start":{"line":703,"column":10},"end":{"line":703,"column":10}}]},"113":{"line":703,"type":"binary-expr","locations":[{"start":{"line":703,"column":13},"end":{"line":703,"column":27}},{"start":{"line":703,"column":31},"end":{"line":703,"column":35}}]},"114":{"line":706,"type":"if","locations":[{"start":{"line":706,"column":17},"end":{"line":706,"column":17}},{"start":{"line":706,"column":17},"end":{"line":706,"column":17}}]},"115":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":14},"end":{"line":708,"column":14}},{"start":{"line":708,"column":14},"end":{"line":708,"column":14}}]},"116":{"line":708,"type":"binary-expr","locations":[{"start":{"line":708,"column":17},"end":{"line":708,"column":34}},{"start":{"line":708,"column":38},"end":{"line":708,"column":42}}]},"117":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":21},"end":{"line":710,"column":21}},{"start":{"line":710,"column":21},"end":{"line":710,"column":21}}]},"118":{"line":710,"type":"binary-expr","locations":[{"start":{"line":710,"column":24},"end":{"line":710,"column":41}},{"start":{"line":710,"column":45},"end":{"line":710,"column":60}}]},"119":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":17},"end":{"line":715,"column":17}},{"start":{"line":715,"column":17},"end":{"line":715,"column":17}}]},"120":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":8},"end":{"line":727,"column":8}},{"start":{"line":727,"column":8},"end":{"line":727,"column":8}}]},"121":{"line":731,"type":"if","locations":[{"start":{"line":731,"column":8},"end":{"line":731,"column":8}},{"start":{"line":731,"column":8},"end":{"line":731,"column":8}}]},"122":{"line":735,"type":"if","locations":[{"start":{"line":735,"column":10},"end":{"line":735,"column":10}},{"start":{"line":735,"column":10},"end":{"line":735,"column":10}}]},"123":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":2},"end":{"line":766,"column":2}},{"start":{"line":766,"column":2},"end":{"line":766,"column":2}}]},"124":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":2},"end":{"line":773,"column":2}},{"start":{"line":773,"column":2},"end":{"line":773,"column":2}}]},"125":{"line":777,"type":"binary-expr","locations":[{"start":{"line":777,"column":12},"end":{"line":777,"column":19}},{"start":{"line":777,"column":23},"end":{"line":777,"column":25}}]},"126":{"line":780,"type":"if","locations":[{"start":{"line":780,"column":2},"end":{"line":780,"column":2}},{"start":{"line":780,"column":2},"end":{"line":780,"column":2}}]},"127":{"line":783,"type":"if","locations":[{"start":{"line":783,"column":2},"end":{"line":783,"column":2}},{"start":{"line":783,"column":2},"end":{"line":783,"column":2}}]},"128":{"line":784,"type":"cond-expr","locations":[{"start":{"line":784,"column":49},"end":{"line":784,"column":54}},{"start":{"line":784,"column":57},"end":{"line":784,"column":59}}]},"129":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":2},"end":{"line":786,"column":2}},{"start":{"line":786,"column":2},"end":{"line":786,"column":2}}]},"130":{"line":790,"type":"if","locations":[{"start":{"line":790,"column":2},"end":{"line":790,"column":2}},{"start":{"line":790,"column":2},"end":{"line":790,"column":2}}]},"131":{"line":791,"type":"if","locations":[{"start":{"line":791,"column":4},"end":{"line":791,"column":4}},{"start":{"line":791,"column":4},"end":{"line":791,"column":4}}]},"132":{"line":805,"type":"if","locations":[{"start":{"line":805,"column":6},"end":{"line":805,"column":6}},{"start":{"line":805,"column":6},"end":{"line":805,"column":6}}]},"133":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":2},"end":{"line":832,"column":2}},{"start":{"line":832,"column":2},"end":{"line":832,"column":2}}]},"134":{"line":839,"type":"if","locations":[{"start":{"line":839,"column":2},"end":{"line":839,"column":2}},{"start":{"line":839,"column":2},"end":{"line":839,"column":2}}]},"135":{"line":843,"type":"binary-expr","locations":[{"start":{"line":843,"column":12},"end":{"line":843,"column":19}},{"start":{"line":843,"column":23},"end":{"line":843,"column":25}}]},"136":{"line":846,"type":"if","locations":[{"start":{"line":846,"column":2},"end":{"line":846,"column":2}},{"start":{"line":846,"column":2},"end":{"line":846,"column":2}}]},"137":{"line":849,"type":"if","locations":[{"start":{"line":849,"column":2},"end":{"line":849,"column":2}},{"start":{"line":849,"column":2},"end":{"line":849,"column":2}}]},"138":{"line":853,"type":"if","locations":[{"start":{"line":853,"column":2},"end":{"line":853,"column":2}},{"start":{"line":853,"column":2},"end":{"line":853,"column":2}}]},"139":{"line":853,"type":"binary-expr","locations":[{"start":{"line":853,"column":5},"end":{"line":853,"column":27}},{"start":{"line":853,"column":31},"end":{"line":853,"column":49}}]},"140":{"line":855,"type":"if","locations":[{"start":{"line":855,"column":4},"end":{"line":855,"column":4}},{"start":{"line":855,"column":4},"end":{"line":855,"column":4}}]},"141":{"line":863,"type":"if","locations":[{"start":{"line":863,"column":4},"end":{"line":863,"column":4}},{"start":{"line":863,"column":4},"end":{"line":863,"column":4}}]},"142":{"line":865,"type":"binary-expr","locations":[{"start":{"line":865,"column":18},"end":{"line":865,"column":35}},{"start":{"line":865,"column":39},"end":{"line":865,"column":66}}]},"143":{"line":866,"type":"if","locations":[{"start":{"line":866,"column":6},"end":{"line":866,"column":6}},{"start":{"line":866,"column":6},"end":{"line":866,"column":6}}]},"144":{"line":883,"type":"if","locations":[{"start":{"line":883,"column":8},"end":{"line":883,"column":8}},{"start":{"line":883,"column":8},"end":{"line":883,"column":8}}]},"145":{"line":889,"type":"if","locations":[{"start":{"line":889,"column":6},"end":{"line":889,"column":6}},{"start":{"line":889,"column":6},"end":{"line":889,"column":6}}]},"146":{"line":895,"type":"if","locations":[{"start":{"line":895,"column":4},"end":{"line":895,"column":4}},{"start":{"line":895,"column":4},"end":{"line":895,"column":4}}]},"147":{"line":897,"type":"if","locations":[{"start":{"line":897,"column":6},"end":{"line":897,"column":6}},{"start":{"line":897,"column":6},"end":{"line":897,"column":6}}]},"148":{"line":928,"type":"if","locations":[{"start":{"line":928,"column":2},"end":{"line":928,"column":2}},{"start":{"line":928,"column":2},"end":{"line":928,"column":2}}]},"149":{"line":935,"type":"if","locations":[{"start":{"line":935,"column":2},"end":{"line":935,"column":2}},{"start":{"line":935,"column":2},"end":{"line":935,"column":2}}]},"150":{"line":939,"type":"binary-expr","locations":[{"start":{"line":939,"column":12},"end":{"line":939,"column":19}},{"start":{"line":939,"column":23},"end":{"line":939,"column":25}}]},"151":{"line":942,"type":"if","locations":[{"start":{"line":942,"column":2},"end":{"line":942,"column":2}},{"start":{"line":942,"column":2},"end":{"line":942,"column":2}}]},"152":{"line":943,"type":"cond-expr","locations":[{"start":{"line":943,"column":49},"end":{"line":943,"column":54}},{"start":{"line":943,"column":57},"end":{"line":943,"column":59}}]},"153":{"line":945,"type":"if","locations":[{"start":{"line":945,"column":2},"end":{"line":945,"column":2}},{"start":{"line":945,"column":2},"end":{"line":945,"column":2}}]},"154":{"line":951,"type":"if","locations":[{"start":{"line":951,"column":4},"end":{"line":951,"column":4}},{"start":{"line":951,"column":4},"end":{"line":951,"column":4}}]},"155":{"line":961,"type":"if","locations":[{"start":{"line":961,"column":6},"end":{"line":961,"column":6}},{"start":{"line":961,"column":6},"end":{"line":961,"column":6}}]},"156":{"line":962,"type":"if","locations":[{"start":{"line":962,"column":8},"end":{"line":962,"column":8}},{"start":{"line":962,"column":8},"end":{"line":962,"column":8}}]},"157":{"line":992,"type":"if","locations":[{"start":{"line":992,"column":2},"end":{"line":992,"column":2}},{"start":{"line":992,"column":2},"end":{"line":992,"column":2}}]},"158":{"line":999,"type":"if","locations":[{"start":{"line":999,"column":2},"end":{"line":999,"column":2}},{"start":{"line":999,"column":2},"end":{"line":999,"column":2}}]},"159":{"line":1003,"type":"binary-expr","locations":[{"start":{"line":1003,"column":12},"end":{"line":1003,"column":19}},{"start":{"line":1003,"column":23},"end":{"line":1003,"column":25}}]},"160":{"line":1006,"type":"if","locations":[{"start":{"line":1006,"column":2},"end":{"line":1006,"column":2}},{"start":{"line":1006,"column":2},"end":{"line":1006,"column":2}}]},"161":{"line":1007,"type":"cond-expr","locations":[{"start":{"line":1007,"column":49},"end":{"line":1007,"column":54}},{"start":{"line":1007,"column":57},"end":{"line":1007,"column":59}}]},"162":{"line":1009,"type":"if","locations":[{"start":{"line":1009,"column":2},"end":{"line":1009,"column":2}},{"start":{"line":1009,"column":2},"end":{"line":1009,"column":2}}]},"163":{"line":1015,"type":"if","locations":[{"start":{"line":1015,"column":4},"end":{"line":1015,"column":4}},{"start":{"line":1015,"column":4},"end":{"line":1015,"column":4}}]},"164":{"line":1053,"type":"if","locations":[{"start":{"line":1053,"column":2},"end":{"line":1053,"column":2}},{"start":{"line":1053,"column":2},"end":{"line":1053,"column":2}}]},"165":{"line":1058,"type":"if","locations":[{"start":{"line":1058,"column":2},"end":{"line":1058,"column":2}},{"start":{"line":1058,"column":2},"end":{"line":1058,"column":2}}]},"166":{"line":1065,"type":"if","locations":[{"start":{"line":1065,"column":2},"end":{"line":1065,"column":2}},{"start":{"line":1065,"column":2},"end":{"line":1065,"column":2}}]},"167":{"line":1068,"type":"if","locations":[{"start":{"line":1068,"column":9},"end":{"line":1068,"column":9}},{"start":{"line":1068,"column":9},"end":{"line":1068,"column":9}}]},"168":{"line":1073,"type":"binary-expr","locations":[{"start":{"line":1073,"column":12},"end":{"line":1073,"column":19}},{"start":{"line":1073,"column":23},"end":{"line":1073,"column":25}}]},"169":{"line":1088,"type":"if","locations":[{"start":{"line":1088,"column":4},"end":{"line":1088,"column":4}},{"start":{"line":1088,"column":4},"end":{"line":1088,"column":4}}]},"170":{"line":1091,"type":"if","locations":[{"start":{"line":1091,"column":4},"end":{"line":1091,"column":4}},{"start":{"line":1091,"column":4},"end":{"line":1091,"column":4}}]},"171":{"line":1098,"type":"if","locations":[{"start":{"line":1098,"column":4},"end":{"line":1098,"column":4}},{"start":{"line":1098,"column":4},"end":{"line":1098,"column":4}}]},"172":{"line":1105,"type":"if","locations":[{"start":{"line":1105,"column":4},"end":{"line":1105,"column":4}},{"start":{"line":1105,"column":4},"end":{"line":1105,"column":4}}]},"173":{"line":1109,"type":"binary-expr","locations":[{"start":{"line":1109,"column":17},"end":{"line":1109,"column":30}},{"start":{"line":1109,"column":34},"end":{"line":1109,"column":48}},{"start":{"line":1109,"column":52},"end":{"line":1109,"column":79}}]},"174":{"line":1123,"type":"cond-expr","locations":[{"start":{"line":1123,"column":48},"end":{"line":1123,"column":54}},{"start":{"line":1123,"column":57},"end":{"line":1123,"column":73}}]},"175":{"line":1123,"type":"binary-expr","locations":[{"start":{"line":1123,"column":23},"end":{"line":1123,"column":33}},{"start":{"line":1123,"column":37},"end":{"line":1123,"column":44}}]},"176":{"line":1126,"type":"if","locations":[{"start":{"line":1126,"column":8},"end":{"line":1126,"column":8}},{"start":{"line":1126,"column":8},"end":{"line":1126,"column":8}}]},"177":{"line":1130,"type":"if","locations":[{"start":{"line":1130,"column":12},"end":{"line":1130,"column":12}},{"start":{"line":1130,"column":12},"end":{"line":1130,"column":12}}]},"178":{"line":1136,"type":"if","locations":[{"start":{"line":1136,"column":14},"end":{"line":1136,"column":14}},{"start":{"line":1136,"column":14},"end":{"line":1136,"column":14}}]},"179":{"line":1156,"type":"if","locations":[{"start":{"line":1156,"column":6},"end":{"line":1156,"column":6}},{"start":{"line":1156,"column":6},"end":{"line":1156,"column":6}}]},"180":{"line":1161,"type":"if","locations":[{"start":{"line":1161,"column":4},"end":{"line":1161,"column":4}},{"start":{"line":1161,"column":4},"end":{"line":1161,"column":4}}]},"181":{"line":1169,"type":"if","locations":[{"start":{"line":1169,"column":6},"end":{"line":1169,"column":6}},{"start":{"line":1169,"column":6},"end":{"line":1169,"column":6}}]},"182":{"line":1188,"type":"binary-expr","locations":[{"start":{"line":1188,"column":12},"end":{"line":1188,"column":19}},{"start":{"line":1188,"column":23},"end":{"line":1188,"column":25}}]},"183":{"line":1189,"type":"binary-expr","locations":[{"start":{"line":1189,"column":15},"end":{"line":1189,"column":28}},{"start":{"line":1189,"column":32},"end":{"line":1189,"column":46}},{"start":{"line":1189,"column":50},"end":{"line":1189,"column":77}}]},"184":{"line":1221,"type":"if","locations":[{"start":{"line":1221,"column":2},"end":{"line":1221,"column":2}},{"start":{"line":1221,"column":2},"end":{"line":1221,"column":2}}]},"185":{"line":1235,"type":"if","locations":[{"start":{"line":1235,"column":2},"end":{"line":1235,"column":2}},{"start":{"line":1235,"column":2},"end":{"line":1235,"column":2}}]},"186":{"line":1235,"type":"binary-expr","locations":[{"start":{"line":1235,"column":5},"end":{"line":1235,"column":12}},{"start":{"line":1235,"column":16},"end":{"line":1235,"column":33}}]},"187":{"line":1254,"type":"binary-expr","locations":[{"start":{"line":1254,"column":12},"end":{"line":1254,"column":19}},{"start":{"line":1254,"column":23},"end":{"line":1254,"column":25}}]},"188":{"line":1259,"type":"binary-expr","locations":[{"start":{"line":1259,"column":12},"end":{"line":1259,"column":23}},{"start":{"line":1259,"column":27},"end":{"line":1259,"column":29}}]},"189":{"line":1260,"type":"binary-expr","locations":[{"start":{"line":1260,"column":16},"end":{"line":1260,"column":31}},{"start":{"line":1260,"column":35},"end":{"line":1260,"column":46}}]},"190":{"line":1261,"type":"if","locations":[{"start":{"line":1261,"column":2},"end":{"line":1261,"column":2}},{"start":{"line":1261,"column":2},"end":{"line":1261,"column":2}}]},"191":{"line":1262,"type":"if","locations":[{"start":{"line":1262,"column":4},"end":{"line":1262,"column":4}},{"start":{"line":1262,"column":4},"end":{"line":1262,"column":4}}]},"192":{"line":1269,"type":"if","locations":[{"start":{"line":1269,"column":4},"end":{"line":1269,"column":4}},{"start":{"line":1269,"column":4},"end":{"line":1269,"column":4}}]},"193":{"line":1275,"type":"if","locations":[{"start":{"line":1275,"column":4},"end":{"line":1275,"column":4}},{"start":{"line":1275,"column":4},"end":{"line":1275,"column":4}}]},"194":{"line":1287,"type":"if","locations":[{"start":{"line":1287,"column":4},"end":{"line":1287,"column":4}},{"start":{"line":1287,"column":4},"end":{"line":1287,"column":4}}]},"195":{"line":1294,"type":"if","locations":[{"start":{"line":1294,"column":4},"end":{"line":1294,"column":4}},{"start":{"line":1294,"column":4},"end":{"line":1294,"column":4}}]},"196":{"line":1300,"type":"if","locations":[{"start":{"line":1300,"column":4},"end":{"line":1300,"column":4}},{"start":{"line":1300,"column":4},"end":{"line":1300,"column":4}}]},"197":{"line":1307,"type":"if","locations":[{"start":{"line":1307,"column":4},"end":{"line":1307,"column":4}},{"start":{"line":1307,"column":4},"end":{"line":1307,"column":4}}]},"198":{"line":1313,"type":"if","locations":[{"start":{"line":1313,"column":4},"end":{"line":1313,"column":4}},{"start":{"line":1313,"column":4},"end":{"line":1313,"column":4}}]},"199":{"line":1320,"type":"if","locations":[{"start":{"line":1320,"column":2},"end":{"line":1320,"column":2}},{"start":{"line":1320,"column":2},"end":{"line":1320,"column":2}}]},"200":{"line":1322,"type":"if","locations":[{"start":{"line":1322,"column":6},"end":{"line":1322,"column":6}},{"start":{"line":1322,"column":6},"end":{"line":1322,"column":6}}]},"201":{"line":1343,"type":"binary-expr","locations":[{"start":{"line":1343,"column":21},"end":{"line":1343,"column":35}},{"start":{"line":1343,"column":39},"end":{"line":1343,"column":69}}]},"202":{"line":1364,"type":"if","locations":[{"start":{"line":1364,"column":2},"end":{"line":1364,"column":2}},{"start":{"line":1364,"column":2},"end":{"line":1364,"column":2}}]},"203":{"line":1366,"type":"binary-expr","locations":[{"start":{"line":1366,"column":23},"end":{"line":1366,"column":37}},{"start":{"line":1366,"column":41},"end":{"line":1366,"column":71}}]},"204":{"line":1374,"type":"if","locations":[{"start":{"line":1374,"column":6},"end":{"line":1374,"column":6}},{"start":{"line":1374,"column":6},"end":{"line":1374,"column":6}}]},"205":{"line":1391,"type":"if","locations":[{"start":{"line":1391,"column":2},"end":{"line":1391,"column":2}},{"start":{"line":1391,"column":2},"end":{"line":1391,"column":2}}]},"206":{"line":1402,"type":"if","locations":[{"start":{"line":1402,"column":0},"end":{"line":1402,"column":0}},{"start":{"line":1402,"column":0},"end":{"line":1402,"column":0}}]},"207":{"line":1410,"type":"if","locations":[{"start":{"line":1410,"column":0},"end":{"line":1410,"column":0}},{"start":{"line":1410,"column":0},"end":{"line":1410,"column":0}}]},"208":{"line":1424,"type":"if","locations":[{"start":{"line":1424,"column":0},"end":{"line":1424,"column":0}},{"start":{"line":1424,"column":0},"end":{"line":1424,"column":0}}]},"209":{"line":1424,"type":"binary-expr","locations":[{"start":{"line":1424,"column":3},"end":{"line":1424,"column":11}},{"start":{"line":1424,"column":15},"end":{"line":1424,"column":60}}]},"210":{"line":1425,"type":"if","locations":[{"start":{"line":1425,"column":2},"end":{"line":1425,"column":2}},{"start":{"line":1425,"column":2},"end":{"line":1425,"column":2}}]},"211":{"line":1444,"type":"binary-expr","locations":[{"start":{"line":1444,"column":20},"end":{"line":1444,"column":54}},{"start":{"line":1444,"column":58},"end":{"line":1444,"column":70}}]},"212":{"line":1446,"type":"cond-expr","locations":[{"start":{"line":1446,"column":29},"end":{"line":1449,"column":1}},{"start":{"line":1449,"column":4},"end":{"line":1451,"column":1}}]},"213":{"line":1453,"type":"if","locations":[{"start":{"line":1453,"column":0},"end":{"line":1453,"column":0}},{"start":{"line":1453,"column":0},"end":{"line":1453,"column":0}}]},"214":{"line":1453,"type":"binary-expr","locations":[{"start":{"line":1453,"column":3},"end":{"line":1453,"column":30}},{"start":{"line":1453,"column":34},"end":{"line":1453,"column":72}}]},"215":{"line":1458,"type":"cond-expr","locations":[{"start":{"line":1458,"column":38},"end":{"line":1458,"column":44}},{"start":{"line":1458,"column":47},"end":{"line":1458,"column":62}}]},"216":{"line":1484,"type":"if","locations":[{"start":{"line":1484,"column":4},"end":{"line":1484,"column":4}},{"start":{"line":1484,"column":4},"end":{"line":1484,"column":4}}]},"217":{"line":1491,"type":"cond-expr","locations":[{"start":{"line":1491,"column":52},"end":{"line":1491,"column":60}},{"start":{"line":1491,"column":63},"end":{"line":1491,"column":71}}]},"218":{"line":1493,"type":"binary-expr","locations":[{"start":{"line":1493,"column":14},"end":{"line":1493,"column":27}},{"start":{"line":1493,"column":31},"end":{"line":1493,"column":33}}]},"219":{"line":1494,"type":"if","locations":[{"start":{"line":1494,"column":4},"end":{"line":1494,"column":4}},{"start":{"line":1494,"column":4},"end":{"line":1494,"column":4}}]},"220":{"line":1496,"type":"if","locations":[{"start":{"line":1496,"column":11},"end":{"line":1496,"column":11}},{"start":{"line":1496,"column":11},"end":{"line":1496,"column":11}}]},"221":{"line":1520,"type":"if","locations":[{"start":{"line":1520,"column":2},"end":{"line":1520,"column":2}},{"start":{"line":1520,"column":2},"end":{"line":1520,"column":2}}]},"222":{"line":1520,"type":"binary-expr","locations":[{"start":{"line":1520,"column":5},"end":{"line":1520,"column":14}},{"start":{"line":1520,"column":18},"end":{"line":1520,"column":35}}]},"223":{"line":1525,"type":"if","locations":[{"start":{"line":1525,"column":2},"end":{"line":1525,"column":2}},{"start":{"line":1525,"column":2},"end":{"line":1525,"column":2}}]},"224":{"line":1528,"type":"if","locations":[{"start":{"line":1528,"column":6},"end":{"line":1528,"column":6}},{"start":{"line":1528,"column":6},"end":{"line":1528,"column":6}}]},"225":{"line":1549,"type":"if","locations":[{"start":{"line":1549,"column":2},"end":{"line":1549,"column":2}},{"start":{"line":1549,"column":2},"end":{"line":1549,"column":2}}]},"226":{"line":1574,"type":"binary-expr","locations":[{"start":{"line":1574,"column":14},"end":{"line":1574,"column":18}},{"start":{"line":1574,"column":22},"end":{"line":1574,"column":24}}]},"227":{"line":1578,"type":"if","locations":[{"start":{"line":1578,"column":2},"end":{"line":1578,"column":2}},{"start":{"line":1578,"column":2},"end":{"line":1578,"column":2}}]},"228":{"line":1580,"type":"if","locations":[{"start":{"line":1580,"column":4},"end":{"line":1580,"column":4}},{"start":{"line":1580,"column":4},"end":{"line":1580,"column":4}}]},"229":{"line":1589,"type":"if","locations":[{"start":{"line":1589,"column":2},"end":{"line":1589,"column":2}},{"start":{"line":1589,"column":2},"end":{"line":1589,"column":2}}]},"230":{"line":1604,"type":"binary-expr","locations":[{"start":{"line":1604,"column":14},"end":{"line":1604,"column":18}},{"start":{"line":1604,"column":22},"end":{"line":1604,"column":25}}]},"231":{"line":1610,"type":"if","locations":[{"start":{"line":1610,"column":2},"end":{"line":1610,"column":2}},{"start":{"line":1610,"column":2},"end":{"line":1610,"column":2}}]},"232":{"line":1610,"type":"binary-expr","locations":[{"start":{"line":1610,"column":5},"end":{"line":1610,"column":11}},{"start":{"line":1610,"column":15},"end":{"line":1610,"column":29}}]},"233":{"line":1617,"type":"if","locations":[{"start":{"line":1617,"column":2},"end":{"line":1617,"column":2}},{"start":{"line":1617,"column":2},"end":{"line":1617,"column":2}}]},"234":{"line":1624,"type":"if","locations":[{"start":{"line":1624,"column":2},"end":{"line":1624,"column":2}},{"start":{"line":1624,"column":2},"end":{"line":1624,"column":2}}]},"235":{"line":1655,"type":"binary-expr","locations":[{"start":{"line":1655,"column":12},"end":{"line":1655,"column":19}},{"start":{"line":1655,"column":23},"end":{"line":1655,"column":25}}]},"236":{"line":1659,"type":"cond-expr","locations":[{"start":{"line":1660,"column":4},"end":{"line":1660,"column":22}},{"start":{"line":1660,"column":26},"end":{"line":1660,"column":56}}]},"237":{"line":1661,"type":"if","locations":[{"start":{"line":1661,"column":2},"end":{"line":1661,"column":2}},{"start":{"line":1661,"column":2},"end":{"line":1661,"column":2}}]},"238":{"line":1669,"type":"if","locations":[{"start":{"line":1669,"column":4},"end":{"line":1669,"column":4}},{"start":{"line":1669,"column":4},"end":{"line":1669,"column":4}}]},"239":{"line":1669,"type":"binary-expr","locations":[{"start":{"line":1669,"column":7},"end":{"line":1669,"column":33}},{"start":{"line":1669,"column":37},"end":{"line":1669,"column":64}}]},"240":{"line":1676,"type":"if","locations":[{"start":{"line":1676,"column":4},"end":{"line":1676,"column":4}},{"start":{"line":1676,"column":4},"end":{"line":1676,"column":4}}]},"241":{"line":1676,"type":"binary-expr","locations":[{"start":{"line":1676,"column":7},"end":{"line":1676,"column":21}},{"start":{"line":1676,"column":25},"end":{"line":1676,"column":51}}]},"242":{"line":1700,"type":"if","locations":[{"start":{"line":1700,"column":8},"end":{"line":1700,"column":8}},{"start":{"line":1700,"column":8},"end":{"line":1700,"column":8}}]},"243":{"line":1700,"type":"binary-expr","locations":[{"start":{"line":1700,"column":11},"end":{"line":1700,"column":21}},{"start":{"line":1700,"column":25},"end":{"line":1700,"column":62}}]},"244":{"line":1703,"type":"if","locations":[{"start":{"line":1703,"column":10},"end":{"line":1703,"column":10}},{"start":{"line":1703,"column":10},"end":{"line":1703,"column":10}}]},"245":{"line":1710,"type":"if","locations":[{"start":{"line":1710,"column":10},"end":{"line":1710,"column":10}},{"start":{"line":1710,"column":10},"end":{"line":1710,"column":10}}]},"246":{"line":1747,"type":"binary-expr","locations":[{"start":{"line":1747,"column":12},"end":{"line":1747,"column":19}},{"start":{"line":1747,"column":23},"end":{"line":1747,"column":25}}]},"247":{"line":1748,"type":"cond-expr","locations":[{"start":{"line":1748,"column":45},"end":{"line":1748,"column":62}},{"start":{"line":1748,"column":65},"end":{"line":1748,"column":69}}]},"248":{"line":1749,"type":"cond-expr","locations":[{"start":{"line":1749,"column":51},"end":{"line":1749,"column":71}},{"start":{"line":1749,"column":74},"end":{"line":1749,"column":76}}]},"249":{"line":1750,"type":"cond-expr","locations":[{"start":{"line":1750,"column":41},"end":{"line":1750,"column":56}},{"start":{"line":1750,"column":59},"end":{"line":1750,"column":77}}]},"250":{"line":1757,"type":"if","locations":[{"start":{"line":1757,"column":2},"end":{"line":1757,"column":2}},{"start":{"line":1757,"column":2},"end":{"line":1757,"column":2}}]},"251":{"line":1762,"type":"binary-expr","locations":[{"start":{"line":1762,"column":16},"end":{"line":1762,"column":31}},{"start":{"line":1762,"column":35},"end":{"line":1762,"column":37}}]},"252":{"line":1763,"type":"if","locations":[{"start":{"line":1763,"column":2},"end":{"line":1763,"column":2}},{"start":{"line":1763,"column":2},"end":{"line":1763,"column":2}}]},"253":{"line":1763,"type":"binary-expr","locations":[{"start":{"line":1763,"column":5},"end":{"line":1763,"column":24}},{"start":{"line":1763,"column":28},"end":{"line":1763,"column":47}}]},"254":{"line":1773,"type":"if","locations":[{"start":{"line":1773,"column":4},"end":{"line":1773,"column":4}},{"start":{"line":1773,"column":4},"end":{"line":1773,"column":4}}]},"255":{"line":1773,"type":"binary-expr","locations":[{"start":{"line":1773,"column":7},"end":{"line":1773,"column":33}},{"start":{"line":1773,"column":37},"end":{"line":1773,"column":64}}]},"256":{"line":1780,"type":"if","locations":[{"start":{"line":1780,"column":4},"end":{"line":1780,"column":4}},{"start":{"line":1780,"column":4},"end":{"line":1780,"column":4}}]},"257":{"line":1780,"type":"binary-expr","locations":[{"start":{"line":1780,"column":7},"end":{"line":1780,"column":21}},{"start":{"line":1780,"column":25},"end":{"line":1780,"column":51}}]},"258":{"line":1789,"type":"if","locations":[{"start":{"line":1789,"column":4},"end":{"line":1789,"column":4}},{"start":{"line":1789,"column":4},"end":{"line":1789,"column":4}}]},"259":{"line":1802,"type":"binary-expr","locations":[{"start":{"line":1802,"column":59},"end":{"line":1802,"column":63}},{"start":{"line":1802,"column":67},"end":{"line":1802,"column":71}}]},"260":{"line":1805,"type":"if","locations":[{"start":{"line":1805,"column":6},"end":{"line":1805,"column":6}},{"start":{"line":1805,"column":6},"end":{"line":1805,"column":6}}]},"261":{"line":1812,"type":"if","locations":[{"start":{"line":1812,"column":6},"end":{"line":1812,"column":6}},{"start":{"line":1812,"column":6},"end":{"line":1812,"column":6}}]},"262":{"line":1823,"type":"if","locations":[{"start":{"line":1823,"column":6},"end":{"line":1823,"column":6}},{"start":{"line":1823,"column":6},"end":{"line":1823,"column":6}}]},"263":{"line":1823,"type":"binary-expr","locations":[{"start":{"line":1823,"column":9},"end":{"line":1823,"column":25}},{"start":{"line":1824,"column":8},"end":{"line":1824,"column":61}}]},"264":{"line":1828,"type":"if","locations":[{"start":{"line":1828,"column":8},"end":{"line":1828,"column":8}},{"start":{"line":1828,"column":8},"end":{"line":1828,"column":8}}]},"265":{"line":1835,"type":"if","locations":[{"start":{"line":1835,"column":8},"end":{"line":1835,"column":8}},{"start":{"line":1835,"column":8},"end":{"line":1835,"column":8}}]},"266":{"line":1841,"type":"if","locations":[{"start":{"line":1841,"column":6},"end":{"line":1841,"column":6}},{"start":{"line":1841,"column":6},"end":{"line":1841,"column":6}}]},"267":{"line":1841,"type":"binary-expr","locations":[{"start":{"line":1841,"column":9},"end":{"line":1841,"column":30}},{"start":{"line":1841,"column":34},"end":{"line":1841,"column":54}},{"start":{"line":1842,"column":8},"end":{"line":1842,"column":28}}]},"268":{"line":1843,"type":"if","locations":[{"start":{"line":1843,"column":8},"end":{"line":1843,"column":8}},{"start":{"line":1843,"column":8},"end":{"line":1843,"column":8}}]},"269":{"line":1853,"type":"if","locations":[{"start":{"line":1853,"column":8},"end":{"line":1853,"column":8}},{"start":{"line":1853,"column":8},"end":{"line":1853,"column":8}}]},"270":{"line":1892,"type":"binary-expr","locations":[{"start":{"line":1892,"column":12},"end":{"line":1892,"column":19}},{"start":{"line":1892,"column":23},"end":{"line":1892,"column":25}}]},"271":{"line":1897,"type":"cond-expr","locations":[{"start":{"line":1898,"column":4},"end":{"line":1898,"column":22}},{"start":{"line":1898,"column":26},"end":{"line":1898,"column":56}}]},"272":{"line":1899,"type":"if","locations":[{"start":{"line":1899,"column":2},"end":{"line":1899,"column":2}},{"start":{"line":1899,"column":2},"end":{"line":1899,"column":2}}]},"273":{"line":1907,"type":"if","locations":[{"start":{"line":1907,"column":4},"end":{"line":1907,"column":4}},{"start":{"line":1907,"column":4},"end":{"line":1907,"column":4}}]},"274":{"line":1907,"type":"binary-expr","locations":[{"start":{"line":1907,"column":7},"end":{"line":1907,"column":33}},{"start":{"line":1907,"column":37},"end":{"line":1907,"column":64}}]},"275":{"line":1914,"type":"if","locations":[{"start":{"line":1914,"column":4},"end":{"line":1914,"column":4}},{"start":{"line":1914,"column":4},"end":{"line":1914,"column":4}}]},"276":{"line":1914,"type":"binary-expr","locations":[{"start":{"line":1914,"column":7},"end":{"line":1914,"column":21}},{"start":{"line":1914,"column":25},"end":{"line":1914,"column":51}}]},"277":{"line":1921,"type":"binary-expr","locations":[{"start":{"line":1921,"column":14},"end":{"line":1921,"column":25}},{"start":{"line":1921,"column":29},"end":{"line":1921,"column":43}}]},"278":{"line":1924,"type":"if","locations":[{"start":{"line":1924,"column":6},"end":{"line":1924,"column":6}},{"start":{"line":1924,"column":6},"end":{"line":1924,"column":6}}]},"279":{"line":1939,"type":"if","locations":[{"start":{"line":1939,"column":6},"end":{"line":1939,"column":6}},{"start":{"line":1939,"column":6},"end":{"line":1939,"column":6}}]},"280":{"line":1942,"type":"if","locations":[{"start":{"line":1942,"column":6},"end":{"line":1942,"column":6}},{"start":{"line":1942,"column":6},"end":{"line":1942,"column":6}}]},"281":{"line":1942,"type":"binary-expr","locations":[{"start":{"line":1942,"column":9},"end":{"line":1942,"column":19}},{"start":{"line":1942,"column":23},"end":{"line":1942,"column":60}}]},"282":{"line":1945,"type":"if","locations":[{"start":{"line":1945,"column":8},"end":{"line":1945,"column":8}},{"start":{"line":1945,"column":8},"end":{"line":1945,"column":8}}]},"283":{"line":1952,"type":"if","locations":[{"start":{"line":1952,"column":8},"end":{"line":1952,"column":8}},{"start":{"line":1952,"column":8},"end":{"line":1952,"column":8}}]},"284":{"line":1983,"type":"if","locations":[{"start":{"line":1983,"column":2},"end":{"line":1983,"column":2}},{"start":{"line":1983,"column":2},"end":{"line":1983,"column":2}}]},"285":{"line":2009,"type":"if","locations":[{"start":{"line":2009,"column":2},"end":{"line":2009,"column":2}},{"start":{"line":2009,"column":2},"end":{"line":2009,"column":2}}]},"286":{"line":2010,"type":"binary-expr","locations":[{"start":{"line":2010,"column":14},"end":{"line":2010,"column":26}},{"start":{"line":2010,"column":30},"end":{"line":2010,"column":32}}]},"287":{"line":2016,"type":"if","locations":[{"start":{"line":2016,"column":2},"end":{"line":2016,"column":2}},{"start":{"line":2016,"column":2},"end":{"line":2016,"column":2}}]},"288":{"line":2019,"type":"if","locations":[{"start":{"line":2019,"column":2},"end":{"line":2019,"column":2}},{"start":{"line":2019,"column":2},"end":{"line":2019,"column":2}}]},"289":{"line":2024,"type":"if","locations":[{"start":{"line":2024,"column":2},"end":{"line":2024,"column":2}},{"start":{"line":2024,"column":2},"end":{"line":2024,"column":2}}]},"290":{"line":2030,"type":"if","locations":[{"start":{"line":2030,"column":2},"end":{"line":2030,"column":2}},{"start":{"line":2030,"column":2},"end":{"line":2030,"column":2}}]},"291":{"line":2030,"type":"binary-expr","locations":[{"start":{"line":2030,"column":7},"end":{"line":2030,"column":26}},{"start":{"line":2030,"column":30},"end":{"line":2030,"column":52}}]},"292":{"line":2034,"type":"if","locations":[{"start":{"line":2034,"column":4},"end":{"line":2034,"column":4}},{"start":{"line":2034,"column":4},"end":{"line":2034,"column":4}}]},"293":{"line":2057,"type":"if","locations":[{"start":{"line":2057,"column":2},"end":{"line":2057,"column":2}},{"start":{"line":2057,"column":2},"end":{"line":2057,"column":2}}]},"294":{"line":2059,"type":"binary-expr","locations":[{"start":{"line":2059,"column":12},"end":{"line":2059,"column":28}},{"start":{"line":2059,"column":32},"end":{"line":2059,"column":48}}]},"295":{"line":2075,"type":"if","locations":[{"start":{"line":2075,"column":2},"end":{"line":2075,"column":2}},{"start":{"line":2075,"column":2},"end":{"line":2075,"column":2}}]},"296":{"line":2078,"type":"if","locations":[{"start":{"line":2078,"column":4},"end":{"line":2078,"column":4}},{"start":{"line":2078,"column":4},"end":{"line":2078,"column":4}}]},"297":{"line":2078,"type":"binary-expr","locations":[{"start":{"line":2078,"column":7},"end":{"line":2078,"column":20}},{"start":{"line":2078,"column":24},"end":{"line":2078,"column":30}}]},"298":{"line":2079,"type":"if","locations":[{"start":{"line":2079,"column":6},"end":{"line":2079,"column":6}},{"start":{"line":2079,"column":6},"end":{"line":2079,"column":6}}]},"299":{"line":2083,"type":"if","locations":[{"start":{"line":2083,"column":8},"end":{"line":2083,"column":8}},{"start":{"line":2083,"column":8},"end":{"line":2083,"column":8}}]},"300":{"line":2088,"type":"if","locations":[{"start":{"line":2088,"column":11},"end":{"line":2088,"column":11}},{"start":{"line":2088,"column":11},"end":{"line":2088,"column":11}}]},"301":{"line":2110,"type":"binary-expr","locations":[{"start":{"line":2110,"column":12},"end":{"line":2110,"column":19}},{"start":{"line":2110,"column":23},"end":{"line":2110,"column":25}}]},"302":{"line":2111,"type":"if","locations":[{"start":{"line":2111,"column":2},"end":{"line":2111,"column":2}},{"start":{"line":2111,"column":2},"end":{"line":2111,"column":2}}]},"303":{"line":2114,"type":"if","locations":[{"start":{"line":2114,"column":2},"end":{"line":2114,"column":2}},{"start":{"line":2114,"column":2},"end":{"line":2114,"column":2}}]},"304":{"line":2118,"type":"if","locations":[{"start":{"line":2118,"column":2},"end":{"line":2118,"column":2}},{"start":{"line":2118,"column":2},"end":{"line":2118,"column":2}}]},"305":{"line":2119,"type":"if","locations":[{"start":{"line":2119,"column":4},"end":{"line":2119,"column":4}},{"start":{"line":2119,"column":4},"end":{"line":2119,"column":4}}]},"306":{"line":2119,"type":"binary-expr","locations":[{"start":{"line":2119,"column":7},"end":{"line":2119,"column":25}},{"start":{"line":2119,"column":29},"end":{"line":2119,"column":52}},{"start":{"line":2120,"column":6},"end":{"line":2120,"column":28}}]},"307":{"line":2126,"type":"if","locations":[{"start":{"line":2126,"column":9},"end":{"line":2126,"column":9}},{"start":{"line":2126,"column":9},"end":{"line":2126,"column":9}}]},"308":{"line":2128,"type":"binary-expr","locations":[{"start":{"line":2128,"column":20},"end":{"line":2128,"column":43}},{"start":{"line":2129,"column":6},"end":{"line":2129,"column":47}}]},"309":{"line":2132,"type":"if","locations":[{"start":{"line":2132,"column":4},"end":{"line":2132,"column":4}},{"start":{"line":2132,"column":4},"end":{"line":2132,"column":4}}]},"310":{"line":2132,"type":"binary-expr","locations":[{"start":{"line":2132,"column":7},"end":{"line":2132,"column":35}},{"start":{"line":2133,"column":7},"end":{"line":2133,"column":16}},{"start":{"line":2133,"column":20},"end":{"line":2133,"column":43}}]},"311":{"line":2138,"type":"if","locations":[{"start":{"line":2138,"column":4},"end":{"line":2138,"column":4}},{"start":{"line":2138,"column":4},"end":{"line":2138,"column":4}}]},"312":{"line":2143,"type":"cond-expr","locations":[{"start":{"line":2143,"column":50},"end":{"line":2143,"column":57}},{"start":{"line":2143,"column":60},"end":{"line":2143,"column":65}}]},"313":{"line":2156,"type":"binary-expr","locations":[{"start":{"line":2156,"column":13},"end":{"line":2156,"column":30}},{"start":{"line":2156,"column":34},"end":{"line":2156,"column":36}}]},"314":{"line":2157,"type":"if","locations":[{"start":{"line":2157,"column":2},"end":{"line":2157,"column":2}},{"start":{"line":2157,"column":2},"end":{"line":2157,"column":2}}]},"315":{"line":2184,"type":"binary-expr","locations":[{"start":{"line":2184,"column":12},"end":{"line":2184,"column":19}},{"start":{"line":2184,"column":23},"end":{"line":2184,"column":25}}]},"316":{"line":2185,"type":"if","locations":[{"start":{"line":2185,"column":2},"end":{"line":2185,"column":2}},{"start":{"line":2185,"column":2},"end":{"line":2185,"column":2}}]},"317":{"line":2194,"type":"if","locations":[{"start":{"line":2194,"column":2},"end":{"line":2194,"column":2}},{"start":{"line":2194,"column":2},"end":{"line":2194,"column":2}}]},"318":{"line":2196,"type":"if","locations":[{"start":{"line":2196,"column":9},"end":{"line":2196,"column":9}},{"start":{"line":2196,"column":9},"end":{"line":2196,"column":9}}]},"319":{"line":2196,"type":"binary-expr","locations":[{"start":{"line":2196,"column":12},"end":{"line":2196,"column":31}},{"start":{"line":2196,"column":35},"end":{"line":2196,"column":59}}]},"320":{"line":2219,"type":"if","locations":[{"start":{"line":2219,"column":2},"end":{"line":2219,"column":2}},{"start":{"line":2219,"column":2},"end":{"line":2219,"column":2}}]},"321":{"line":2224,"type":"if","locations":[{"start":{"line":2224,"column":2},"end":{"line":2224,"column":2}},{"start":{"line":2224,"column":2},"end":{"line":2224,"column":2}}]},"322":{"line":2224,"type":"binary-expr","locations":[{"start":{"line":2224,"column":5},"end":{"line":2224,"column":17}},{"start":{"line":2224,"column":21},"end":{"line":2224,"column":33}},{"start":{"line":2225,"column":4},"end":{"line":2225,"column":33}},{"start":{"line":2226,"column":4},"end":{"line":2226,"column":31}},{"start":{"line":2227,"column":4},"end":{"line":2227,"column":39}},{"start":{"line":2228,"column":4},"end":{"line":2228,"column":33}}]},"323":{"line":2233,"type":"if","locations":[{"start":{"line":2233,"column":2},"end":{"line":2233,"column":2}},{"start":{"line":2233,"column":2},"end":{"line":2233,"column":2}}]},"324":{"line":2233,"type":"binary-expr","locations":[{"start":{"line":2233,"column":5},"end":{"line":2233,"column":18}},{"start":{"line":2233,"column":23},"end":{"line":2233,"column":34}},{"start":{"line":2233,"column":39},"end":{"line":2233,"column":52}},{"start":{"line":2233,"column":57},"end":{"line":2233,"column":68}}]},"325":{"line":2255,"type":"if","locations":[{"start":{"line":2255,"column":2},"end":{"line":2255,"column":2}},{"start":{"line":2255,"column":2},"end":{"line":2255,"column":2}}]},"326":{"line":2260,"type":"if","locations":[{"start":{"line":2260,"column":2},"end":{"line":2260,"column":2}},{"start":{"line":2260,"column":2},"end":{"line":2260,"column":2}}]},"327":{"line":2260,"type":"binary-expr","locations":[{"start":{"line":2260,"column":5},"end":{"line":2260,"column":25}},{"start":{"line":2260,"column":30},"end":{"line":2260,"column":41}}]},"328":{"line":2265,"type":"if","locations":[{"start":{"line":2265,"column":2},"end":{"line":2265,"column":2}},{"start":{"line":2265,"column":2},"end":{"line":2265,"column":2}}]},"329":{"line":2268,"type":"if","locations":[{"start":{"line":2268,"column":4},"end":{"line":2268,"column":4}},{"start":{"line":2268,"column":4},"end":{"line":2268,"column":4}}]},"330":{"line":2271,"type":"if","locations":[{"start":{"line":2271,"column":11},"end":{"line":2271,"column":11}},{"start":{"line":2271,"column":11},"end":{"line":2271,"column":11}}]},"331":{"line":2317,"type":"if","locations":[{"start":{"line":2317,"column":0},"end":{"line":2317,"column":0}},{"start":{"line":2317,"column":0},"end":{"line":2317,"column":0}}]},"332":{"line":2319,"type":"if","locations":[{"start":{"line":2319,"column":2},"end":{"line":2319,"column":2}},{"start":{"line":2319,"column":2},"end":{"line":2319,"column":2}}]},"333":{"line":2322,"type":"if","locations":[{"start":{"line":2322,"column":2},"end":{"line":2322,"column":2}},{"start":{"line":2322,"column":2},"end":{"line":2322,"column":2}}]},"334":{"line":2368,"type":"if","locations":[{"start":{"line":2368,"column":2},"end":{"line":2368,"column":2}},{"start":{"line":2368,"column":2},"end":{"line":2368,"column":2}}]},"335":{"line":2371,"type":"if","locations":[{"start":{"line":2371,"column":9},"end":{"line":2371,"column":9}},{"start":{"line":2371,"column":9},"end":{"line":2371,"column":9}}]},"336":{"line":2374,"type":"binary-expr","locations":[{"start":{"line":2374,"column":14},"end":{"line":2374,"column":18}},{"start":{"line":2374,"column":22},"end":{"line":2374,"column":36}}]},"337":{"line":2375,"type":"binary-expr","locations":[{"start":{"line":2375,"column":17},"end":{"line":2375,"column":20}},{"start":{"line":2375,"column":24},"end":{"line":2375,"column":64}}]},"338":{"line":2376,"type":"binary-expr","locations":[{"start":{"line":2376,"column":17},"end":{"line":2376,"column":24}},{"start":{"line":2376,"column":28},"end":{"line":2376,"column":30}}]},"339":{"line":2378,"type":"if","locations":[{"start":{"line":2378,"column":0},"end":{"line":2378,"column":0}},{"start":{"line":2378,"column":0},"end":{"line":2378,"column":0}}]},"340":{"line":2380,"type":"if","locations":[{"start":{"line":2380,"column":7},"end":{"line":2380,"column":7}},{"start":{"line":2380,"column":7},"end":{"line":2380,"column":7}}]},"341":{"line":2404,"type":"if","locations":[{"start":{"line":2404,"column":2},"end":{"line":2404,"column":2}},{"start":{"line":2404,"column":2},"end":{"line":2404,"column":2}}]},"342":{"line":2410,"type":"if","locations":[{"start":{"line":2410,"column":6},"end":{"line":2410,"column":6}},{"start":{"line":2410,"column":6},"end":{"line":2410,"column":6}}]},"343":{"line":2414,"type":"if","locations":[{"start":{"line":2414,"column":4},"end":{"line":2414,"column":4}},{"start":{"line":2414,"column":4},"end":{"line":2414,"column":4}}]},"344":{"line":2414,"type":"binary-expr","locations":[{"start":{"line":2414,"column":7},"end":{"line":2414,"column":28}},{"start":{"line":2414,"column":32},"end":{"line":2414,"column":49}}]},"345":{"line":2418,"type":"if","locations":[{"start":{"line":2418,"column":6},"end":{"line":2418,"column":6}},{"start":{"line":2418,"column":6},"end":{"line":2418,"column":6}}]},"346":{"line":2426,"type":"if","locations":[{"start":{"line":2426,"column":2},"end":{"line":2426,"column":2}},{"start":{"line":2426,"column":2},"end":{"line":2426,"column":2}}]},"347":{"line":2427,"type":"if","locations":[{"start":{"line":2427,"column":4},"end":{"line":2427,"column":4}},{"start":{"line":2427,"column":4},"end":{"line":2427,"column":4}}]},"348":{"line":2427,"type":"binary-expr","locations":[{"start":{"line":2427,"column":7},"end":{"line":2427,"column":19}},{"start":{"line":2427,"column":23},"end":{"line":2427,"column":39}},{"start":{"line":2427,"column":43},"end":{"line":2427,"column":73}}]},"349":{"line":2431,"type":"if","locations":[{"start":{"line":2431,"column":8},"end":{"line":2431,"column":8}},{"start":{"line":2431,"column":8},"end":{"line":2431,"column":8}}]},"350":{"line":2438,"type":"if","locations":[{"start":{"line":2438,"column":4},"end":{"line":2438,"column":4}},{"start":{"line":2438,"column":4},"end":{"line":2438,"column":4}}]},"351":{"line":2438,"type":"binary-expr","locations":[{"start":{"line":2438,"column":7},"end":{"line":2438,"column":24}},{"start":{"line":2438,"column":28},"end":{"line":2438,"column":56}}]},"352":{"line":2440,"type":"if","locations":[{"start":{"line":2440,"column":6},"end":{"line":2440,"column":6}},{"start":{"line":2440,"column":6},"end":{"line":2440,"column":6}}]},"353":{"line":2440,"type":"binary-expr","locations":[{"start":{"line":2440,"column":9},"end":{"line":2440,"column":21}},{"start":{"line":2440,"column":25},"end":{"line":2440,"column":53}}]},"354":{"line":2442,"type":"if","locations":[{"start":{"line":2442,"column":8},"end":{"line":2442,"column":8}},{"start":{"line":2442,"column":8},"end":{"line":2442,"column":8}}]},"355":{"line":2455,"type":"if","locations":[{"start":{"line":2455,"column":4},"end":{"line":2455,"column":4}},{"start":{"line":2455,"column":4},"end":{"line":2455,"column":4}}]},"356":{"line":2455,"type":"binary-expr","locations":[{"start":{"line":2455,"column":7},"end":{"line":2455,"column":19}},{"start":{"line":2455,"column":23},"end":{"line":2455,"column":39}}]},"357":{"line":2457,"type":"if","locations":[{"start":{"line":2457,"column":6},"end":{"line":2457,"column":6}},{"start":{"line":2457,"column":6},"end":{"line":2457,"column":6}}]},"358":{"line":2470,"type":"if","locations":[{"start":{"line":2470,"column":6},"end":{"line":2470,"column":6}},{"start":{"line":2470,"column":6},"end":{"line":2470,"column":6}}]},"359":{"line":2470,"type":"binary-expr","locations":[{"start":{"line":2470,"column":9},"end":{"line":2470,"column":35}},{"start":{"line":2470,"column":39},"end":{"line":2470,"column":67}}]},"360":{"line":2474,"type":"if","locations":[{"start":{"line":2474,"column":8},"end":{"line":2474,"column":8}},{"start":{"line":2474,"column":8},"end":{"line":2474,"column":8}}]},"361":{"line":2489,"type":"binary-expr","locations":[{"start":{"line":2489,"column":23},"end":{"line":2489,"column":47}},{"start":{"line":2489,"column":51},"end":{"line":2489,"column":77}}]},"362":{"line":2496,"type":"if","locations":[{"start":{"line":2496,"column":6},"end":{"line":2496,"column":6}},{"start":{"line":2496,"column":6},"end":{"line":2496,"column":6}}]},"363":{"line":2503,"type":"if","locations":[{"start":{"line":2503,"column":10},"end":{"line":2503,"column":10}},{"start":{"line":2503,"column":10},"end":{"line":2503,"column":10}}]},"364":{"line":2503,"type":"binary-expr","locations":[{"start":{"line":2503,"column":13},"end":{"line":2503,"column":50}},{"start":{"line":2504,"column":12},"end":{"line":2504,"column":57}}]},"365":{"line":2508,"type":"binary-expr","locations":[{"start":{"line":2508,"column":28},"end":{"line":2508,"column":48}},{"start":{"line":2508,"column":52},"end":{"line":2508,"column":74}}]},"366":{"line":2515,"type":"if","locations":[{"start":{"line":2515,"column":8},"end":{"line":2515,"column":8}},{"start":{"line":2515,"column":8},"end":{"line":2515,"column":8}}]},"367":{"line":2525,"type":"if","locations":[{"start":{"line":2525,"column":6},"end":{"line":2525,"column":6}},{"start":{"line":2525,"column":6},"end":{"line":2525,"column":6}}]},"368":{"line":2529,"type":"if","locations":[{"start":{"line":2529,"column":8},"end":{"line":2529,"column":8}},{"start":{"line":2529,"column":8},"end":{"line":2529,"column":8}}]},"369":{"line":2540,"type":"if","locations":[{"start":{"line":2540,"column":6},"end":{"line":2540,"column":6}},{"start":{"line":2540,"column":6},"end":{"line":2540,"column":6}}]},"370":{"line":2540,"type":"binary-expr","locations":[{"start":{"line":2540,"column":9},"end":{"line":2540,"column":38}},{"start":{"line":2540,"column":42},"end":{"line":2540,"column":70}},{"start":{"line":2541,"column":8},"end":{"line":2541,"column":36}}]},"371":{"line":2551,"type":"if","locations":[{"start":{"line":2551,"column":6},"end":{"line":2551,"column":6}},{"start":{"line":2551,"column":6},"end":{"line":2551,"column":6}}]},"372":{"line":2573,"type":"if","locations":[{"start":{"line":2573,"column":8},"end":{"line":2573,"column":8}},{"start":{"line":2573,"column":8},"end":{"line":2573,"column":8}}]},"373":{"line":2579,"type":"cond-expr","locations":[{"start":{"line":2579,"column":50},"end":{"line":2579,"column":54}},{"start":{"line":2579,"column":57},"end":{"line":2579,"column":69}}]},"374":{"line":2582,"type":"if","locations":[{"start":{"line":2582,"column":8},"end":{"line":2582,"column":8}},{"start":{"line":2582,"column":8},"end":{"line":2582,"column":8}}]},"375":{"line":2584,"type":"if","locations":[{"start":{"line":2584,"column":10},"end":{"line":2584,"column":10}},{"start":{"line":2584,"column":10},"end":{"line":2584,"column":10}}]},"376":{"line":2588,"type":"if","locations":[{"start":{"line":2588,"column":10},"end":{"line":2588,"column":10}},{"start":{"line":2588,"column":10},"end":{"line":2588,"column":10}}]},"377":{"line":2595,"type":"if","locations":[{"start":{"line":2595,"column":12},"end":{"line":2595,"column":12}},{"start":{"line":2595,"column":12},"end":{"line":2595,"column":12}}]},"378":{"line":2599,"type":"if","locations":[{"start":{"line":2599,"column":17},"end":{"line":2599,"column":17}},{"start":{"line":2599,"column":17},"end":{"line":2599,"column":17}}]},"379":{"line":2611,"type":"if","locations":[{"start":{"line":2611,"column":8},"end":{"line":2611,"column":8}},{"start":{"line":2611,"column":8},"end":{"line":2611,"column":8}}]},"380":{"line":2611,"type":"binary-expr","locations":[{"start":{"line":2611,"column":11},"end":{"line":2611,"column":36}},{"start":{"line":2611,"column":40},"end":{"line":2611,"column":62}}]},"381":{"line":2614,"type":"if","locations":[{"start":{"line":2614,"column":10},"end":{"line":2614,"column":10}},{"start":{"line":2614,"column":10},"end":{"line":2614,"column":10}}]},"382":{"line":2622,"type":"if","locations":[{"start":{"line":2622,"column":10},"end":{"line":2622,"column":10}},{"start":{"line":2622,"column":10},"end":{"line":2622,"column":10}}]},"383":{"line":2622,"type":"binary-expr","locations":[{"start":{"line":2622,"column":13},"end":{"line":2622,"column":38}},{"start":{"line":2622,"column":42},"end":{"line":2622,"column":65}}]},"384":{"line":2633,"type":"binary-expr","locations":[{"start":{"line":2633,"column":25},"end":{"line":2633,"column":47}},{"start":{"line":2633,"column":51},"end":{"line":2633,"column":71}},{"start":{"line":2634,"column":12},"end":{"line":2634,"column":33}},{"start":{"line":2635,"column":13},"end":{"line":2635,"column":36}},{"start":{"line":2635,"column":40},"end":{"line":2635,"column":66}},{"start":{"line":2636,"column":12},"end":{"line":2636,"column":40}},{"start":{"line":2636,"column":44},"end":{"line":2636,"column":73}}]},"385":{"line":2671,"type":"if","locations":[{"start":{"line":2671,"column":2},"end":{"line":2671,"column":2}},{"start":{"line":2671,"column":2},"end":{"line":2671,"column":2}}]},"386":{"line":2671,"type":"binary-expr","locations":[{"start":{"line":2671,"column":5},"end":{"line":2671,"column":21}},{"start":{"line":2671,"column":25},"end":{"line":2671,"column":46}}]},"387":{"line":2675,"type":"if","locations":[{"start":{"line":2675,"column":2},"end":{"line":2675,"column":2}},{"start":{"line":2675,"column":2},"end":{"line":2675,"column":2}}]},"388":{"line":2675,"type":"binary-expr","locations":[{"start":{"line":2675,"column":5},"end":{"line":2675,"column":23}},{"start":{"line":2675,"column":27},"end":{"line":2675,"column":46}}]},"389":{"line":2677,"type":"if","locations":[{"start":{"line":2677,"column":4},"end":{"line":2677,"column":4}},{"start":{"line":2677,"column":4},"end":{"line":2677,"column":4}}]},"390":{"line":2677,"type":"binary-expr","locations":[{"start":{"line":2677,"column":7},"end":{"line":2677,"column":18}},{"start":{"line":2677,"column":23},"end":{"line":2677,"column":46}},{"start":{"line":2678,"column":6},"end":{"line":2678,"column":71}}]},"391":{"line":2687,"type":"if","locations":[{"start":{"line":2687,"column":2},"end":{"line":2687,"column":2}},{"start":{"line":2687,"column":2},"end":{"line":2687,"column":2}}]},"392":{"line":2691,"type":"binary-expr","locations":[{"start":{"line":2691,"column":17},"end":{"line":2691,"column":27}},{"start":{"line":2691,"column":31},"end":{"line":2691,"column":52}}]},"393":{"line":2695,"type":"if","locations":[{"start":{"line":2695,"column":6},"end":{"line":2695,"column":6}},{"start":{"line":2695,"column":6},"end":{"line":2695,"column":6}}]},"394":{"line":2695,"type":"binary-expr","locations":[{"start":{"line":2695,"column":9},"end":{"line":2695,"column":19}},{"start":{"line":2695,"column":24},"end":{"line":2695,"column":35}},{"start":{"line":2695,"column":39},"end":{"line":2695,"column":49}}]},"395":{"line":2702,"type":"if","locations":[{"start":{"line":2702,"column":6},"end":{"line":2702,"column":6}},{"start":{"line":2702,"column":6},"end":{"line":2702,"column":6}}]},"396":{"line":2703,"type":"if","locations":[{"start":{"line":2703,"column":8},"end":{"line":2703,"column":8}},{"start":{"line":2703,"column":8},"end":{"line":2703,"column":8}}]},"397":{"line":2716,"type":"if","locations":[{"start":{"line":2716,"column":2},"end":{"line":2716,"column":2}},{"start":{"line":2716,"column":2},"end":{"line":2716,"column":2}}]},"398":{"line":2732,"type":"if","locations":[{"start":{"line":2732,"column":4},"end":{"line":2732,"column":4}},{"start":{"line":2732,"column":4},"end":{"line":2732,"column":4}}]},"399":{"line":2740,"type":"if","locations":[{"start":{"line":2740,"column":4},"end":{"line":2740,"column":4}},{"start":{"line":2740,"column":4},"end":{"line":2740,"column":4}}]},"400":{"line":2740,"type":"binary-expr","locations":[{"start":{"line":2740,"column":7},"end":{"line":2740,"column":32}},{"start":{"line":2741,"column":6},"end":{"line":2741,"column":73}}]},"401":{"line":2741,"type":"binary-expr","locations":[{"start":{"line":2741,"column":8},"end":{"line":2741,"column":40}},{"start":{"line":2741,"column":44},"end":{"line":2741,"column":72}}]},"402":{"line":2745,"type":"if","locations":[{"start":{"line":2745,"column":4},"end":{"line":2745,"column":4}},{"start":{"line":2745,"column":4},"end":{"line":2745,"column":4}}]},"403":{"line":2746,"type":"if","locations":[{"start":{"line":2746,"column":6},"end":{"line":2746,"column":6}},{"start":{"line":2746,"column":6},"end":{"line":2746,"column":6}}]},"404":{"line":2752,"type":"if","locations":[{"start":{"line":2752,"column":6},"end":{"line":2752,"column":6}},{"start":{"line":2752,"column":6},"end":{"line":2752,"column":6}}]},"405":{"line":2761,"type":"if","locations":[{"start":{"line":2761,"column":4},"end":{"line":2761,"column":4}},{"start":{"line":2761,"column":4},"end":{"line":2761,"column":4}}]},"406":{"line":2761,"type":"binary-expr","locations":[{"start":{"line":2761,"column":7},"end":{"line":2761,"column":33}},{"start":{"line":2761,"column":37},"end":{"line":2761,"column":54}}]},"407":{"line":2762,"type":"if","locations":[{"start":{"line":2762,"column":6},"end":{"line":2762,"column":6}},{"start":{"line":2762,"column":6},"end":{"line":2762,"column":6}}]},"408":{"line":2767,"type":"if","locations":[{"start":{"line":2767,"column":6},"end":{"line":2767,"column":6}},{"start":{"line":2767,"column":6},"end":{"line":2767,"column":6}}]},"409":{"line":2775,"type":"if","locations":[{"start":{"line":2775,"column":4},"end":{"line":2775,"column":4}},{"start":{"line":2775,"column":4},"end":{"line":2775,"column":4}}]},"410":{"line":2780,"type":"if","locations":[{"start":{"line":2780,"column":4},"end":{"line":2780,"column":4}},{"start":{"line":2780,"column":4},"end":{"line":2780,"column":4}}]},"411":{"line":2780,"type":"binary-expr","locations":[{"start":{"line":2780,"column":7},"end":{"line":2780,"column":36}},{"start":{"line":2781,"column":6},"end":{"line":2781,"column":44}}]},"412":{"line":2781,"type":"binary-expr","locations":[{"start":{"line":2781,"column":8},"end":{"line":2781,"column":24}},{"start":{"line":2781,"column":28},"end":{"line":2781,"column":43}}]},"413":{"line":2789,"type":"if","locations":[{"start":{"line":2789,"column":4},"end":{"line":2789,"column":4}},{"start":{"line":2789,"column":4},"end":{"line":2789,"column":4}}]},"414":{"line":2789,"type":"binary-expr","locations":[{"start":{"line":2789,"column":7},"end":{"line":2789,"column":36}},{"start":{"line":2790,"column":7},"end":{"line":2790,"column":23}},{"start":{"line":2790,"column":27},"end":{"line":2790,"column":42}}]},"415":{"line":2799,"type":"if","locations":[{"start":{"line":2799,"column":4},"end":{"line":2799,"column":4}},{"start":{"line":2799,"column":4},"end":{"line":2799,"column":4}}]},"416":{"line":2800,"type":"if","locations":[{"start":{"line":2800,"column":6},"end":{"line":2800,"column":6}},{"start":{"line":2800,"column":6},"end":{"line":2800,"column":6}}]},"417":{"line":2804,"type":"if","locations":[{"start":{"line":2804,"column":6},"end":{"line":2804,"column":6}},{"start":{"line":2804,"column":6},"end":{"line":2804,"column":6}}]},"418":{"line":2815,"type":"if","locations":[{"start":{"line":2815,"column":4},"end":{"line":2815,"column":4}},{"start":{"line":2815,"column":4},"end":{"line":2815,"column":4}}]},"419":{"line":2816,"type":"if","locations":[{"start":{"line":2816,"column":6},"end":{"line":2816,"column":6}},{"start":{"line":2816,"column":6},"end":{"line":2816,"column":6}}]},"420":{"line":2825,"type":"if","locations":[{"start":{"line":2825,"column":4},"end":{"line":2825,"column":4}},{"start":{"line":2825,"column":4},"end":{"line":2825,"column":4}}]},"421":{"line":2826,"type":"if","locations":[{"start":{"line":2826,"column":6},"end":{"line":2826,"column":6}},{"start":{"line":2826,"column":6},"end":{"line":2826,"column":6}}]},"422":{"line":2835,"type":"if","locations":[{"start":{"line":2835,"column":6},"end":{"line":2835,"column":6}},{"start":{"line":2835,"column":6},"end":{"line":2835,"column":6}}]},"423":{"line":2845,"type":"binary-expr","locations":[{"start":{"line":2845,"column":23},"end":{"line":2845,"column":39}},{"start":{"line":2845,"column":43},"end":{"line":2845,"column":47}}]},"424":{"line":2847,"type":"if","locations":[{"start":{"line":2847,"column":8},"end":{"line":2847,"column":8}},{"start":{"line":2847,"column":8},"end":{"line":2847,"column":8}}]},"425":{"line":2850,"type":"if","locations":[{"start":{"line":2850,"column":8},"end":{"line":2850,"column":8}},{"start":{"line":2850,"column":8},"end":{"line":2850,"column":8}}]},"426":{"line":2857,"type":"if","locations":[{"start":{"line":2857,"column":10},"end":{"line":2857,"column":10}},{"start":{"line":2857,"column":10},"end":{"line":2857,"column":10}}]},"427":{"line":2857,"type":"binary-expr","locations":[{"start":{"line":2857,"column":13},"end":{"line":2857,"column":27}},{"start":{"line":2857,"column":31},"end":{"line":2857,"column":44}}]},"428":{"line":2873,"type":"if","locations":[{"start":{"line":2873,"column":4},"end":{"line":2873,"column":4}},{"start":{"line":2873,"column":4},"end":{"line":2873,"column":4}}]},"429":{"line":2873,"type":"binary-expr","locations":[{"start":{"line":2873,"column":7},"end":{"line":2873,"column":32}},{"start":{"line":2873,"column":36},"end":{"line":2873,"column":52}}]},"430":{"line":2876,"type":"if","locations":[{"start":{"line":2876,"column":11},"end":{"line":2876,"column":11}},{"start":{"line":2876,"column":11},"end":{"line":2876,"column":11}}]},"431":{"line":2876,"type":"binary-expr","locations":[{"start":{"line":2876,"column":14},"end":{"line":2876,"column":36}},{"start":{"line":2876,"column":40},"end":{"line":2876,"column":56}}]},"432":{"line":2884,"type":"if","locations":[{"start":{"line":2884,"column":10},"end":{"line":2884,"column":10}},{"start":{"line":2884,"column":10},"end":{"line":2884,"column":10}}]},"433":{"line":2890,"type":"if","locations":[{"start":{"line":2890,"column":12},"end":{"line":2890,"column":12}},{"start":{"line":2890,"column":12},"end":{"line":2890,"column":12}}]},"434":{"line":2901,"type":"if","locations":[{"start":{"line":2901,"column":6},"end":{"line":2901,"column":6}},{"start":{"line":2901,"column":6},"end":{"line":2901,"column":6}}]},"435":{"line":2901,"type":"binary-expr","locations":[{"start":{"line":2901,"column":9},"end":{"line":2901,"column":15}},{"start":{"line":2901,"column":19},"end":{"line":2901,"column":46}}]},"436":{"line":2903,"type":"if","locations":[{"start":{"line":2903,"column":8},"end":{"line":2903,"column":8}},{"start":{"line":2903,"column":8},"end":{"line":2903,"column":8}}]},"437":{"line":2903,"type":"binary-expr","locations":[{"start":{"line":2903,"column":11},"end":{"line":2903,"column":17}},{"start":{"line":2903,"column":21},"end":{"line":2903,"column":56}}]},"438":{"line":2908,"type":"if","locations":[{"start":{"line":2908,"column":8},"end":{"line":2908,"column":8}},{"start":{"line":2908,"column":8},"end":{"line":2908,"column":8}}]},"439":{"line":2908,"type":"binary-expr","locations":[{"start":{"line":2908,"column":11},"end":{"line":2908,"column":17}},{"start":{"line":2908,"column":21},"end":{"line":2908,"column":43}}]},"440":{"line":2920,"type":"if","locations":[{"start":{"line":2920,"column":4},"end":{"line":2920,"column":4}},{"start":{"line":2920,"column":4},"end":{"line":2920,"column":4}}]},"441":{"line":2920,"type":"binary-expr","locations":[{"start":{"line":2920,"column":7},"end":{"line":2920,"column":29}},{"start":{"line":2920,"column":33},"end":{"line":2920,"column":62}}]},"442":{"line":2925,"type":"if","locations":[{"start":{"line":2925,"column":4},"end":{"line":2925,"column":4}},{"start":{"line":2925,"column":4},"end":{"line":2925,"column":4}}]},"443":{"line":2925,"type":"binary-expr","locations":[{"start":{"line":2925,"column":7},"end":{"line":2925,"column":35}},{"start":{"line":2925,"column":39},"end":{"line":2925,"column":62}},{"start":{"line":2926,"column":6},"end":{"line":2926,"column":27}}]},"444":{"line":2928,"type":"cond-expr","locations":[{"start":{"line":2929,"column":8},"end":{"line":2929,"column":21}},{"start":{"line":2929,"column":24},"end":{"line":2929,"column":39}}]},"445":{"line":2935,"type":"if","locations":[{"start":{"line":2935,"column":4},"end":{"line":2935,"column":4}},{"start":{"line":2935,"column":4},"end":{"line":2935,"column":4}}]},"446":{"line":2935,"type":"binary-expr","locations":[{"start":{"line":2935,"column":7},"end":{"line":2935,"column":30}},{"start":{"line":2935,"column":34},"end":{"line":2935,"column":65}}]},"447":{"line":2936,"type":"binary-expr","locations":[{"start":{"line":2936,"column":42},"end":{"line":2936,"column":58}},{"start":{"line":2936,"column":62},"end":{"line":2936,"column":64}}]},"448":{"line":2937,"type":"if","locations":[{"start":{"line":2937,"column":6},"end":{"line":2937,"column":6}},{"start":{"line":2937,"column":6},"end":{"line":2937,"column":6}}]},"449":{"line":2942,"type":"if","locations":[{"start":{"line":2942,"column":8},"end":{"line":2942,"column":8}},{"start":{"line":2942,"column":8},"end":{"line":2942,"column":8}}]},"450":{"line":2942,"type":"binary-expr","locations":[{"start":{"line":2942,"column":11},"end":{"line":2942,"column":25}},{"start":{"line":2942,"column":29},"end":{"line":2942,"column":42}}]},"451":{"line":2967,"type":"if","locations":[{"start":{"line":2967,"column":2},"end":{"line":2967,"column":2}},{"start":{"line":2967,"column":2},"end":{"line":2967,"column":2}}]},"452":{"line":2969,"type":"if","locations":[{"start":{"line":2969,"column":4},"end":{"line":2969,"column":4}},{"start":{"line":2969,"column":4},"end":{"line":2969,"column":4}}]},"453":{"line":2969,"type":"binary-expr","locations":[{"start":{"line":2969,"column":7},"end":{"line":2969,"column":22}},{"start":{"line":2969,"column":26},"end":{"line":2969,"column":45}}]},"454":{"line":2976,"type":"if","locations":[{"start":{"line":2976,"column":4},"end":{"line":2976,"column":4}},{"start":{"line":2976,"column":4},"end":{"line":2976,"column":4}}]},"455":{"line":2979,"type":"if","locations":[{"start":{"line":2979,"column":4},"end":{"line":2979,"column":4}},{"start":{"line":2979,"column":4},"end":{"line":2979,"column":4}}]},"456":{"line":2982,"type":"if","locations":[{"start":{"line":2982,"column":4},"end":{"line":2982,"column":4}},{"start":{"line":2982,"column":4},"end":{"line":2982,"column":4}}]},"457":{"line":2985,"type":"if","locations":[{"start":{"line":2985,"column":4},"end":{"line":2985,"column":4}},{"start":{"line":2985,"column":4},"end":{"line":2985,"column":4}}]},"458":{"line":2993,"type":"if","locations":[{"start":{"line":2993,"column":4},"end":{"line":2993,"column":4}},{"start":{"line":2993,"column":4},"end":{"line":2993,"column":4}}]},"459":{"line":2995,"type":"if","locations":[{"start":{"line":2995,"column":11},"end":{"line":2995,"column":11}},{"start":{"line":2995,"column":11},"end":{"line":2995,"column":11}}]},"460":{"line":2995,"type":"binary-expr","locations":[{"start":{"line":2995,"column":14},"end":{"line":2995,"column":33}},{"start":{"line":2995,"column":37},"end":{"line":2995,"column":63}}]},"461":{"line":3001,"type":"if","locations":[{"start":{"line":3001,"column":11},"end":{"line":3001,"column":11}},{"start":{"line":3001,"column":11},"end":{"line":3001,"column":11}}]},"462":{"line":3001,"type":"binary-expr","locations":[{"start":{"line":3001,"column":14},"end":{"line":3001,"column":29}},{"start":{"line":3001,"column":34},"end":{"line":3001,"column":64}},{"start":{"line":3002,"column":6},"end":{"line":3002,"column":39}}]},"463":{"line":3008,"type":"if","locations":[{"start":{"line":3008,"column":9},"end":{"line":3008,"column":9}},{"start":{"line":3008,"column":9},"end":{"line":3008,"column":9}}]},"464":{"line":3008,"type":"binary-expr","locations":[{"start":{"line":3008,"column":12},"end":{"line":3008,"column":27}},{"start":{"line":3008,"column":31},"end":{"line":3008,"column":55}}]},"465":{"line":3011,"type":"if","locations":[{"start":{"line":3011,"column":9},"end":{"line":3011,"column":9}},{"start":{"line":3011,"column":9},"end":{"line":3011,"column":9}}]},"466":{"line":3011,"type":"binary-expr","locations":[{"start":{"line":3011,"column":12},"end":{"line":3011,"column":26}},{"start":{"line":3011,"column":30},"end":{"line":3011,"column":45}}]},"467":{"line":3013,"type":"if","locations":[{"start":{"line":3013,"column":4},"end":{"line":3013,"column":4}},{"start":{"line":3013,"column":4},"end":{"line":3013,"column":4}}]},"468":{"line":3013,"type":"binary-expr","locations":[{"start":{"line":3013,"column":7},"end":{"line":3013,"column":16}},{"start":{"line":3013,"column":20},"end":{"line":3013,"column":54}}]},"469":{"line":3013,"type":"binary-expr","locations":[{"start":{"line":3013,"column":22},"end":{"line":3013,"column":33}},{"start":{"line":3013,"column":37},"end":{"line":3013,"column":53}}]},"470":{"line":3021,"type":"if","locations":[{"start":{"line":3021,"column":4},"end":{"line":3021,"column":4}},{"start":{"line":3021,"column":4},"end":{"line":3021,"column":4}}]},"471":{"line":3026,"type":"if","locations":[{"start":{"line":3026,"column":9},"end":{"line":3026,"column":9}},{"start":{"line":3026,"column":9},"end":{"line":3026,"column":9}}]},"472":{"line":3026,"type":"binary-expr","locations":[{"start":{"line":3026,"column":12},"end":{"line":3026,"column":23}},{"start":{"line":3026,"column":27},"end":{"line":3026,"column":46}}]},"473":{"line":3032,"type":"if","locations":[{"start":{"line":3032,"column":2},"end":{"line":3032,"column":2}},{"start":{"line":3032,"column":2},"end":{"line":3032,"column":2}}]},"474":{"line":3032,"type":"binary-expr","locations":[{"start":{"line":3032,"column":5},"end":{"line":3032,"column":20}},{"start":{"line":3033,"column":4},"end":{"line":3033,"column":34}},{"start":{"line":3033,"column":38},"end":{"line":3033,"column":49}},{"start":{"line":3034,"column":5},"end":{"line":3034,"column":28}},{"start":{"line":3034,"column":32},"end":{"line":3034,"column":67}}]},"475":{"line":3036,"type":"if","locations":[{"start":{"line":3036,"column":4},"end":{"line":3036,"column":4}},{"start":{"line":3036,"column":4},"end":{"line":3036,"column":4}}]},"476":{"line":3036,"type":"binary-expr","locations":[{"start":{"line":3036,"column":7},"end":{"line":3036,"column":18}},{"start":{"line":3036,"column":22},"end":{"line":3036,"column":38}},{"start":{"line":3036,"column":42},"end":{"line":3036,"column":57}},{"start":{"line":3037,"column":7},"end":{"line":3037,"column":18}},{"start":{"line":3037,"column":22},"end":{"line":3037,"column":35}}]},"477":{"line":3056,"type":"binary-expr","locations":[{"start":{"line":3056,"column":12},"end":{"line":3056,"column":19}},{"start":{"line":3056,"column":23},"end":{"line":3056,"column":25}}]},"478":{"line":3059,"type":"binary-expr","locations":[{"start":{"line":3059,"column":15},"end":{"line":3059,"column":28}},{"start":{"line":3059,"column":32},"end":{"line":3059,"column":46}},{"start":{"line":3059,"column":50},"end":{"line":3059,"column":77}}]},"479":{"line":3083,"type":"if","locations":[{"start":{"line":3083,"column":4},"end":{"line":3083,"column":4}},{"start":{"line":3083,"column":4},"end":{"line":3083,"column":4}}]},"480":{"line":3128,"type":"if","locations":[{"start":{"line":3128,"column":2},"end":{"line":3128,"column":2}},{"start":{"line":3128,"column":2},"end":{"line":3128,"column":2}}]},"481":{"line":3131,"type":"if","locations":[{"start":{"line":3131,"column":2},"end":{"line":3131,"column":2}},{"start":{"line":3131,"column":2},"end":{"line":3131,"column":2}}]},"482":{"line":3152,"type":"if","locations":[{"start":{"line":3152,"column":4},"end":{"line":3152,"column":4}},{"start":{"line":3152,"column":4},"end":{"line":3152,"column":4}}]},"483":{"line":3155,"type":"if","locations":[{"start":{"line":3155,"column":4},"end":{"line":3155,"column":4}},{"start":{"line":3155,"column":4},"end":{"line":3155,"column":4}}]},"484":{"line":3155,"type":"binary-expr","locations":[{"start":{"line":3155,"column":7},"end":{"line":3155,"column":26}},{"start":{"line":3155,"column":30},"end":{"line":3155,"column":53}}]},"485":{"line":3167,"type":"if","locations":[{"start":{"line":3167,"column":6},"end":{"line":3167,"column":6}},{"start":{"line":3167,"column":6},"end":{"line":3167,"column":6}}]},"486":{"line":3172,"type":"binary-expr","locations":[{"start":{"line":3172,"column":24},"end":{"line":3172,"column":40}},{"start":{"line":3172,"column":44},"end":{"line":3172,"column":67}}]},"487":{"line":3173,"type":"if","locations":[{"start":{"line":3173,"column":6},"end":{"line":3173,"column":6}},{"start":{"line":3173,"column":6},"end":{"line":3173,"column":6}}]},"488":{"line":3173,"type":"binary-expr","locations":[{"start":{"line":3173,"column":9},"end":{"line":3173,"column":19}},{"start":{"line":3173,"column":23},"end":{"line":3173,"column":44}}]},"489":{"line":3177,"type":"if","locations":[{"start":{"line":3177,"column":6},"end":{"line":3177,"column":6}},{"start":{"line":3177,"column":6},"end":{"line":3177,"column":6}}]},"490":{"line":3177,"type":"binary-expr","locations":[{"start":{"line":3177,"column":9},"end":{"line":3177,"column":23}},{"start":{"line":3177,"column":27},"end":{"line":3177,"column":46}},{"start":{"line":3177,"column":50},"end":{"line":3177,"column":60}}]},"491":{"line":3187,"type":"if","locations":[{"start":{"line":3187,"column":6},"end":{"line":3187,"column":6}},{"start":{"line":3187,"column":6},"end":{"line":3187,"column":6}}]},"492":{"line":3188,"type":"if","locations":[{"start":{"line":3188,"column":8},"end":{"line":3188,"column":8}},{"start":{"line":3188,"column":8},"end":{"line":3188,"column":8}}]},"493":{"line":3191,"type":"if","locations":[{"start":{"line":3191,"column":10},"end":{"line":3191,"column":10}},{"start":{"line":3191,"column":10},"end":{"line":3191,"column":10}}]},"494":{"line":3199,"type":"if","locations":[{"start":{"line":3199,"column":15},"end":{"line":3199,"column":15}},{"start":{"line":3199,"column":15},"end":{"line":3199,"column":15}}]},"495":{"line":3219,"type":"if","locations":[{"start":{"line":3219,"column":4},"end":{"line":3219,"column":4}},{"start":{"line":3219,"column":4},"end":{"line":3219,"column":4}}]},"496":{"line":3240,"type":"binary-expr","locations":[{"start":{"line":3240,"column":12},"end":{"line":3240,"column":33}},{"start":{"line":3241,"column":8},"end":{"line":3241,"column":46}},{"start":{"line":3242,"column":8},"end":{"line":3242,"column":33}},{"start":{"line":3242,"column":37},"end":{"line":3242,"column":65}},{"start":{"line":3243,"column":8},"end":{"line":3243,"column":32}},{"start":{"line":3243,"column":36},"end":{"line":3243,"column":63}},{"start":{"line":3244,"column":9},"end":{"line":3244,"column":27}},{"start":{"line":3244,"column":32},"end":{"line":3244,"column":50}},{"start":{"line":3244,"column":54},"end":{"line":3244,"column":77}},{"start":{"line":3245,"column":10},"end":{"line":3245,"column":36}},{"start":{"line":3245,"column":40},"end":{"line":3245,"column":69}}]},"497":{"line":3257,"type":"if","locations":[{"start":{"line":3257,"column":8},"end":{"line":3257,"column":8}},{"start":{"line":3257,"column":8},"end":{"line":3257,"column":8}}]},"498":{"line":3263,"type":"if","locations":[{"start":{"line":3263,"column":6},"end":{"line":3263,"column":6}},{"start":{"line":3263,"column":6},"end":{"line":3263,"column":6}}]},"499":{"line":3265,"type":"if","locations":[{"start":{"line":3265,"column":8},"end":{"line":3265,"column":8}},{"start":{"line":3265,"column":8},"end":{"line":3265,"column":8}}]},"500":{"line":3293,"type":"if","locations":[{"start":{"line":3293,"column":4},"end":{"line":3293,"column":4}},{"start":{"line":3293,"column":4},"end":{"line":3293,"column":4}}]},"501":{"line":3300,"type":"if","locations":[{"start":{"line":3300,"column":8},"end":{"line":3300,"column":8}},{"start":{"line":3300,"column":8},"end":{"line":3300,"column":8}}]},"502":{"line":3306,"type":"if","locations":[{"start":{"line":3306,"column":4},"end":{"line":3306,"column":4}},{"start":{"line":3306,"column":4},"end":{"line":3306,"column":4}}]},"503":{"line":3333,"type":"if","locations":[{"start":{"line":3333,"column":4},"end":{"line":3333,"column":4}},{"start":{"line":3333,"column":4},"end":{"line":3333,"column":4}}]},"504":{"line":3333,"type":"binary-expr","locations":[{"start":{"line":3333,"column":7},"end":{"line":3333,"column":31}},{"start":{"line":3333,"column":35},"end":{"line":3333,"column":60}}]},"505":{"line":3351,"type":"if","locations":[{"start":{"line":3351,"column":2},"end":{"line":3351,"column":2}},{"start":{"line":3351,"column":2},"end":{"line":3351,"column":2}}]},"506":{"line":3351,"type":"binary-expr","locations":[{"start":{"line":3351,"column":5},"end":{"line":3351,"column":24}},{"start":{"line":3351,"column":28},"end":{"line":3351,"column":50}},{"start":{"line":3352,"column":4},"end":{"line":3352,"column":34}}]},"507":{"line":3355,"type":"cond-expr","locations":[{"start":{"line":3355,"column":34},"end":{"line":3355,"column":42}},{"start":{"line":3355,"column":45},"end":{"line":3355,"column":55}}]},"508":{"line":3358,"type":"if","locations":[{"start":{"line":3358,"column":2},"end":{"line":3358,"column":2}},{"start":{"line":3358,"column":2},"end":{"line":3358,"column":2}}]},"509":{"line":3369,"type":"if","locations":[{"start":{"line":3369,"column":4},"end":{"line":3369,"column":4}},{"start":{"line":3369,"column":4},"end":{"line":3369,"column":4}}]},"510":{"line":3375,"type":"if","locations":[{"start":{"line":3375,"column":4},"end":{"line":3375,"column":4}},{"start":{"line":3375,"column":4},"end":{"line":3375,"column":4}}]},"511":{"line":3375,"type":"binary-expr","locations":[{"start":{"line":3375,"column":7},"end":{"line":3375,"column":21}},{"start":{"line":3375,"column":25},"end":{"line":3375,"column":42}}]},"512":{"line":3380,"type":"if","locations":[{"start":{"line":3380,"column":4},"end":{"line":3380,"column":4}},{"start":{"line":3380,"column":4},"end":{"line":3380,"column":4}}]},"513":{"line":3387,"type":"if","locations":[{"start":{"line":3387,"column":4},"end":{"line":3387,"column":4}},{"start":{"line":3387,"column":4},"end":{"line":3387,"column":4}}]},"514":{"line":3389,"type":"if","locations":[{"start":{"line":3389,"column":6},"end":{"line":3389,"column":6}},{"start":{"line":3389,"column":6},"end":{"line":3389,"column":6}}]},"515":{"line":3403,"type":"if","locations":[{"start":{"line":3403,"column":4},"end":{"line":3403,"column":4}},{"start":{"line":3403,"column":4},"end":{"line":3403,"column":4}}]},"516":{"line":3407,"type":"if","locations":[{"start":{"line":3407,"column":6},"end":{"line":3407,"column":6}},{"start":{"line":3407,"column":6},"end":{"line":3407,"column":6}}]},"517":{"line":3409,"type":"if","locations":[{"start":{"line":3409,"column":13},"end":{"line":3409,"column":13}},{"start":{"line":3409,"column":13},"end":{"line":3409,"column":13}}]},"518":{"line":3414,"type":"if","locations":[{"start":{"line":3414,"column":13},"end":{"line":3414,"column":13}},{"start":{"line":3414,"column":13},"end":{"line":3414,"column":13}}]},"519":{"line":3414,"type":"binary-expr","locations":[{"start":{"line":3414,"column":16},"end":{"line":3414,"column":27}},{"start":{"line":3414,"column":31},"end":{"line":3414,"column":52}}]},"520":{"line":3421,"type":"if","locations":[{"start":{"line":3421,"column":6},"end":{"line":3421,"column":6}},{"start":{"line":3421,"column":6},"end":{"line":3421,"column":6}}]},"521":{"line":3422,"type":"binary-expr","locations":[{"start":{"line":3422,"column":32},"end":{"line":3422,"column":36}},{"start":{"line":3422,"column":40},"end":{"line":3422,"column":42}}]},"522":{"line":3429,"type":"if","locations":[{"start":{"line":3429,"column":4},"end":{"line":3429,"column":4}},{"start":{"line":3429,"column":4},"end":{"line":3429,"column":4}}]},"523":{"line":3431,"type":"if","locations":[{"start":{"line":3431,"column":6},"end":{"line":3431,"column":6}},{"start":{"line":3431,"column":6},"end":{"line":3431,"column":6}}]},"524":{"line":3433,"type":"if","locations":[{"start":{"line":3433,"column":13},"end":{"line":3433,"column":13}},{"start":{"line":3433,"column":13},"end":{"line":3433,"column":13}}]},"525":{"line":3438,"type":"if","locations":[{"start":{"line":3438,"column":13},"end":{"line":3438,"column":13}},{"start":{"line":3438,"column":13},"end":{"line":3438,"column":13}}]},"526":{"line":3450,"type":"if","locations":[{"start":{"line":3450,"column":4},"end":{"line":3450,"column":4}},{"start":{"line":3450,"column":4},"end":{"line":3450,"column":4}}]},"527":{"line":3452,"type":"if","locations":[{"start":{"line":3452,"column":6},"end":{"line":3452,"column":6}},{"start":{"line":3452,"column":6},"end":{"line":3452,"column":6}}]},"528":{"line":3454,"type":"if","locations":[{"start":{"line":3454,"column":13},"end":{"line":3454,"column":13}},{"start":{"line":3454,"column":13},"end":{"line":3454,"column":13}}]},"529":{"line":3472,"type":"if","locations":[{"start":{"line":3472,"column":4},"end":{"line":3472,"column":4}},{"start":{"line":3472,"column":4},"end":{"line":3472,"column":4}}]},"530":{"line":3493,"type":"if","locations":[{"start":{"line":3493,"column":4},"end":{"line":3493,"column":4}},{"start":{"line":3493,"column":4},"end":{"line":3493,"column":4}}]},"531":{"line":3498,"type":"if","locations":[{"start":{"line":3498,"column":6},"end":{"line":3498,"column":6}},{"start":{"line":3498,"column":6},"end":{"line":3498,"column":6}}]},"532":{"line":3502,"type":"if","locations":[{"start":{"line":3502,"column":6},"end":{"line":3502,"column":6}},{"start":{"line":3502,"column":6},"end":{"line":3502,"column":6}}]},"533":{"line":3526,"type":"if","locations":[{"start":{"line":3526,"column":2},"end":{"line":3526,"column":2}},{"start":{"line":3526,"column":2},"end":{"line":3526,"column":2}}]},"534":{"line":3530,"type":"if","locations":[{"start":{"line":3530,"column":9},"end":{"line":3530,"column":9}},{"start":{"line":3530,"column":9},"end":{"line":3530,"column":9}}]},"535":{"line":3532,"type":"if","locations":[{"start":{"line":3532,"column":9},"end":{"line":3532,"column":9}},{"start":{"line":3532,"column":9},"end":{"line":3532,"column":9}}]},"536":{"line":3534,"type":"if","locations":[{"start":{"line":3534,"column":4},"end":{"line":3534,"column":4}},{"start":{"line":3534,"column":4},"end":{"line":3534,"column":4}}]},"537":{"line":3542,"type":"if","locations":[{"start":{"line":3542,"column":6},"end":{"line":3542,"column":6}},{"start":{"line":3542,"column":6},"end":{"line":3542,"column":6}}]},"538":{"line":3563,"type":"if","locations":[{"start":{"line":3563,"column":2},"end":{"line":3563,"column":2}},{"start":{"line":3563,"column":2},"end":{"line":3563,"column":2}}]},"539":{"line":3563,"type":"binary-expr","locations":[{"start":{"line":3563,"column":5},"end":{"line":3563,"column":19}},{"start":{"line":3563,"column":23},"end":{"line":3563,"column":42}}]},"540":{"line":3569,"type":"if","locations":[{"start":{"line":3569,"column":2},"end":{"line":3569,"column":2}},{"start":{"line":3569,"column":2},"end":{"line":3569,"column":2}}]},"541":{"line":3571,"type":"if","locations":[{"start":{"line":3571,"column":9},"end":{"line":3571,"column":9}},{"start":{"line":3571,"column":9},"end":{"line":3571,"column":9}}]},"542":{"line":3579,"type":"if","locations":[{"start":{"line":3579,"column":2},"end":{"line":3579,"column":2}},{"start":{"line":3579,"column":2},"end":{"line":3579,"column":2}}]},"543":{"line":3579,"type":"binary-expr","locations":[{"start":{"line":3579,"column":5},"end":{"line":3579,"column":19}},{"start":{"line":3579,"column":24},"end":{"line":3579,"column":53}},{"start":{"line":3579,"column":57},"end":{"line":3579,"column":73}}]},"544":{"line":3583,"type":"if","locations":[{"start":{"line":3583,"column":2},"end":{"line":3583,"column":2}},{"start":{"line":3583,"column":2},"end":{"line":3583,"column":2}}]},"545":{"line":3588,"type":"if","locations":[{"start":{"line":3588,"column":2},"end":{"line":3588,"column":2}},{"start":{"line":3588,"column":2},"end":{"line":3588,"column":2}}]},"546":{"line":3594,"type":"if","locations":[{"start":{"line":3594,"column":2},"end":{"line":3594,"column":2}},{"start":{"line":3594,"column":2},"end":{"line":3594,"column":2}}]},"547":{"line":3597,"type":"if","locations":[{"start":{"line":3597,"column":9},"end":{"line":3597,"column":9}},{"start":{"line":3597,"column":9},"end":{"line":3597,"column":9}}]},"548":{"line":3601,"type":"if","locations":[{"start":{"line":3601,"column":4},"end":{"line":3601,"column":4}},{"start":{"line":3601,"column":4},"end":{"line":3601,"column":4}}]},"549":{"line":3606,"type":"if","locations":[{"start":{"line":3606,"column":2},"end":{"line":3606,"column":2}},{"start":{"line":3606,"column":2},"end":{"line":3606,"column":2}}]},"550":{"line":3634,"type":"if","locations":[{"start":{"line":3634,"column":6},"end":{"line":3634,"column":6}},{"start":{"line":3634,"column":6},"end":{"line":3634,"column":6}}]},"551":{"line":3636,"type":"if","locations":[{"start":{"line":3636,"column":13},"end":{"line":3636,"column":13}},{"start":{"line":3636,"column":13},"end":{"line":3636,"column":13}}]},"552":{"line":3645,"type":"cond-expr","locations":[{"start":{"line":3645,"column":50},"end":{"line":3645,"column":62}},{"start":{"line":3645,"column":65},"end":{"line":3645,"column":70}}]},"553":{"line":3649,"type":"if","locations":[{"start":{"line":3649,"column":8},"end":{"line":3649,"column":8}},{"start":{"line":3649,"column":8},"end":{"line":3649,"column":8}}]},"554":{"line":3655,"type":"cond-expr","locations":[{"start":{"line":3655,"column":58},"end":{"line":3655,"column":70}},{"start":{"line":3655,"column":73},"end":{"line":3655,"column":78}}]},"555":{"line":3659,"type":"if","locations":[{"start":{"line":3659,"column":8},"end":{"line":3659,"column":8}},{"start":{"line":3659,"column":8},"end":{"line":3659,"column":8}}]},"556":{"line":3664,"type":"if","locations":[{"start":{"line":3664,"column":8},"end":{"line":3664,"column":8}},{"start":{"line":3664,"column":8},"end":{"line":3664,"column":8}}]},"557":{"line":3664,"type":"binary-expr","locations":[{"start":{"line":3664,"column":11},"end":{"line":3664,"column":42}},{"start":{"line":3664,"column":46},"end":{"line":3664,"column":76}}]},"558":{"line":3669,"type":"if","locations":[{"start":{"line":3669,"column":8},"end":{"line":3669,"column":8}},{"start":{"line":3669,"column":8},"end":{"line":3669,"column":8}}]},"559":{"line":3675,"type":"if","locations":[{"start":{"line":3675,"column":10},"end":{"line":3675,"column":10}},{"start":{"line":3675,"column":10},"end":{"line":3675,"column":10}}]},"560":{"line":3712,"type":"if","locations":[{"start":{"line":3712,"column":4},"end":{"line":3712,"column":4}},{"start":{"line":3712,"column":4},"end":{"line":3712,"column":4}}]},"561":{"line":3734,"type":"if","locations":[{"start":{"line":3734,"column":2},"end":{"line":3734,"column":2}},{"start":{"line":3734,"column":2},"end":{"line":3734,"column":2}}]},"562":{"line":3737,"type":"binary-expr","locations":[{"start":{"line":3737,"column":19},"end":{"line":3737,"column":32}},{"start":{"line":3737,"column":36},"end":{"line":3737,"column":40}}]},"563":{"line":3740,"type":"if","locations":[{"start":{"line":3740,"column":4},"end":{"line":3740,"column":4}},{"start":{"line":3740,"column":4},"end":{"line":3740,"column":4}}]},"564":{"line":3742,"type":"binary-expr","locations":[{"start":{"line":3742,"column":24},"end":{"line":3742,"column":32}},{"start":{"line":3742,"column":36},"end":{"line":3742,"column":47}}]},"565":{"line":3743,"type":"if","locations":[{"start":{"line":3743,"column":11},"end":{"line":3743,"column":11}},{"start":{"line":3743,"column":11},"end":{"line":3743,"column":11}}]},"566":{"line":3743,"type":"binary-expr","locations":[{"start":{"line":3743,"column":14},"end":{"line":3743,"column":30}},{"start":{"line":3743,"column":34},"end":{"line":3743,"column":57}}]},"567":{"line":3744,"type":"if","locations":[{"start":{"line":3744,"column":6},"end":{"line":3744,"column":6}},{"start":{"line":3744,"column":6},"end":{"line":3744,"column":6}}]},"568":{"line":3749,"type":"binary-expr","locations":[{"start":{"line":3749,"column":24},"end":{"line":3749,"column":32}},{"start":{"line":3749,"column":36},"end":{"line":3749,"column":46}}]},"569":{"line":3750,"type":"if","locations":[{"start":{"line":3750,"column":11},"end":{"line":3750,"column":11}},{"start":{"line":3750,"column":11},"end":{"line":3750,"column":11}}]},"570":{"line":3752,"type":"binary-expr","locations":[{"start":{"line":3752,"column":24},"end":{"line":3752,"column":32}},{"start":{"line":3752,"column":36},"end":{"line":3752,"column":47}}]},"571":{"line":3753,"type":"if","locations":[{"start":{"line":3753,"column":11},"end":{"line":3753,"column":11}},{"start":{"line":3753,"column":11},"end":{"line":3753,"column":11}}]},"572":{"line":3755,"type":"binary-expr","locations":[{"start":{"line":3755,"column":24},"end":{"line":3755,"column":32}},{"start":{"line":3755,"column":36},"end":{"line":3755,"column":50}}]},"573":{"line":3759,"type":"binary-expr","locations":[{"start":{"line":3759,"column":24},"end":{"line":3759,"column":32}},{"start":{"line":3759,"column":36},"end":{"line":3759,"column":46}}]},"574":{"line":3763,"type":"cond-expr","locations":[{"start":{"line":3763,"column":31},"end":{"line":3763,"column":42}},{"start":{"line":3763,"column":45},"end":{"line":3763,"column":49}}]},"575":{"line":3764,"type":"cond-expr","locations":[{"start":{"line":3764,"column":45},"end":{"line":3764,"column":57}},{"start":{"line":3764,"column":60},"end":{"line":3764,"column":65}}]},"576":{"line":3769,"type":"if","locations":[{"start":{"line":3769,"column":2},"end":{"line":3769,"column":2}},{"start":{"line":3769,"column":2},"end":{"line":3769,"column":2}}]},"577":{"line":3769,"type":"binary-expr","locations":[{"start":{"line":3769,"column":5},"end":{"line":3769,"column":26}},{"start":{"line":3769,"column":30},"end":{"line":3769,"column":59}}]},"578":{"line":3786,"type":"if","locations":[{"start":{"line":3786,"column":2},"end":{"line":3786,"column":2}},{"start":{"line":3786,"column":2},"end":{"line":3786,"column":2}}]},"579":{"line":3786,"type":"binary-expr","locations":[{"start":{"line":3786,"column":5},"end":{"line":3786,"column":21}},{"start":{"line":3786,"column":25},"end":{"line":3786,"column":48}}]},"580":{"line":3794,"type":"if","locations":[{"start":{"line":3794,"column":2},"end":{"line":3794,"column":2}},{"start":{"line":3794,"column":2},"end":{"line":3794,"column":2}}]},"581":{"line":3798,"type":"if","locations":[{"start":{"line":3798,"column":4},"end":{"line":3798,"column":4}},{"start":{"line":3798,"column":4},"end":{"line":3798,"column":4}}]},"582":{"line":3802,"type":"if","locations":[{"start":{"line":3802,"column":4},"end":{"line":3802,"column":4}},{"start":{"line":3802,"column":4},"end":{"line":3802,"column":4}}]},"583":{"line":3803,"type":"if","locations":[{"start":{"line":3803,"column":6},"end":{"line":3803,"column":6}},{"start":{"line":3803,"column":6},"end":{"line":3803,"column":6}}]},"584":{"line":3804,"type":"if","locations":[{"start":{"line":3804,"column":8},"end":{"line":3804,"column":8}},{"start":{"line":3804,"column":8},"end":{"line":3804,"column":8}}]},"585":{"line":3806,"type":"if","locations":[{"start":{"line":3806,"column":15},"end":{"line":3806,"column":15}},{"start":{"line":3806,"column":15},"end":{"line":3806,"column":15}}]},"586":{"line":3809,"type":"if","locations":[{"start":{"line":3809,"column":13},"end":{"line":3809,"column":13}},{"start":{"line":3809,"column":13},"end":{"line":3809,"column":13}}]},"587":{"line":3810,"type":"if","locations":[{"start":{"line":3810,"column":8},"end":{"line":3810,"column":8}},{"start":{"line":3810,"column":8},"end":{"line":3810,"column":8}}]},"588":{"line":3812,"type":"if","locations":[{"start":{"line":3812,"column":10},"end":{"line":3812,"column":10}},{"start":{"line":3812,"column":10},"end":{"line":3812,"column":10}}]},"589":{"line":3815,"type":"if","locations":[{"start":{"line":3815,"column":15},"end":{"line":3815,"column":15}},{"start":{"line":3815,"column":15},"end":{"line":3815,"column":15}}]},"590":{"line":3820,"type":"if","locations":[{"start":{"line":3820,"column":6},"end":{"line":3820,"column":6}},{"start":{"line":3820,"column":6},"end":{"line":3820,"column":6}}]},"591":{"line":3824,"type":"if","locations":[{"start":{"line":3824,"column":11},"end":{"line":3824,"column":11}},{"start":{"line":3824,"column":11},"end":{"line":3824,"column":11}}]},"592":{"line":3844,"type":"if","locations":[{"start":{"line":3844,"column":4},"end":{"line":3844,"column":4}},{"start":{"line":3844,"column":4},"end":{"line":3844,"column":4}}]},"593":{"line":3844,"type":"binary-expr","locations":[{"start":{"line":3844,"column":7},"end":{"line":3844,"column":38}},{"start":{"line":3844,"column":42},"end":{"line":3844,"column":75}}]},"594":{"line":3848,"type":"if","locations":[{"start":{"line":3848,"column":2},"end":{"line":3848,"column":2}},{"start":{"line":3848,"column":2},"end":{"line":3848,"column":2}}]},"595":{"line":3851,"type":"if","locations":[{"start":{"line":3851,"column":2},"end":{"line":3851,"column":2}},{"start":{"line":3851,"column":2},"end":{"line":3851,"column":2}}]},"596":{"line":3864,"type":"binary-expr","locations":[{"start":{"line":3864,"column":12},"end":{"line":3864,"column":19}},{"start":{"line":3864,"column":23},"end":{"line":3864,"column":25}}]},"597":{"line":3872,"type":"if","locations":[{"start":{"line":3872,"column":2},"end":{"line":3872,"column":2}},{"start":{"line":3872,"column":2},"end":{"line":3872,"column":2}}]},"598":{"line":3877,"type":"if","locations":[{"start":{"line":3877,"column":2},"end":{"line":3877,"column":2}},{"start":{"line":3877,"column":2},"end":{"line":3877,"column":2}}]},"599":{"line":3884,"type":"if","locations":[{"start":{"line":3884,"column":2},"end":{"line":3884,"column":2}},{"start":{"line":3884,"column":2},"end":{"line":3884,"column":2}}]},"600":{"line":3896,"type":"if","locations":[{"start":{"line":3896,"column":2},"end":{"line":3896,"column":2}},{"start":{"line":3896,"column":2},"end":{"line":3896,"column":2}}]},"601":{"line":3902,"type":"if","locations":[{"start":{"line":3902,"column":4},"end":{"line":3902,"column":4}},{"start":{"line":3902,"column":4},"end":{"line":3902,"column":4}}]},"602":{"line":3911,"type":"if","locations":[{"start":{"line":3911,"column":4},"end":{"line":3911,"column":4}},{"start":{"line":3911,"column":4},"end":{"line":3911,"column":4}}]},"603":{"line":3917,"type":"if","locations":[{"start":{"line":3917,"column":4},"end":{"line":3917,"column":4}},{"start":{"line":3917,"column":4},"end":{"line":3917,"column":4}}]},"604":{"line":3942,"type":"if","locations":[{"start":{"line":3942,"column":2},"end":{"line":3942,"column":2}},{"start":{"line":3942,"column":2},"end":{"line":3942,"column":2}}]},"605":{"line":3945,"type":"if","locations":[{"start":{"line":3945,"column":6},"end":{"line":3945,"column":6}},{"start":{"line":3945,"column":6},"end":{"line":3945,"column":6}}]},"606":{"line":3956,"type":"if","locations":[{"start":{"line":3956,"column":6},"end":{"line":3956,"column":6}},{"start":{"line":3956,"column":6},"end":{"line":3956,"column":6}}]},"607":{"line":3966,"type":"if","locations":[{"start":{"line":3966,"column":4},"end":{"line":3966,"column":4}},{"start":{"line":3966,"column":4},"end":{"line":3966,"column":4}}]},"608":{"line":3969,"type":"if","locations":[{"start":{"line":3969,"column":4},"end":{"line":3969,"column":4}},{"start":{"line":3969,"column":4},"end":{"line":3969,"column":4}}]},"609":{"line":3990,"type":"if","locations":[{"start":{"line":3990,"column":4},"end":{"line":3990,"column":4}},{"start":{"line":3990,"column":4},"end":{"line":3990,"column":4}}]},"610":{"line":3993,"type":"if","locations":[{"start":{"line":3993,"column":4},"end":{"line":3993,"column":4}},{"start":{"line":3993,"column":4},"end":{"line":3993,"column":4}}]},"611":{"line":4007,"type":"if","locations":[{"start":{"line":4007,"column":2},"end":{"line":4007,"column":2}},{"start":{"line":4007,"column":2},"end":{"line":4007,"column":2}}]},"612":{"line":4008,"type":"if","locations":[{"start":{"line":4008,"column":4},"end":{"line":4008,"column":4}},{"start":{"line":4008,"column":4},"end":{"line":4008,"column":4}}]},"613":{"line":4024,"type":"if","locations":[{"start":{"line":4024,"column":8},"end":{"line":4024,"column":8}},{"start":{"line":4024,"column":8},"end":{"line":4024,"column":8}}]},"614":{"line":4028,"type":"if","locations":[{"start":{"line":4028,"column":10},"end":{"line":4028,"column":10}},{"start":{"line":4028,"column":10},"end":{"line":4028,"column":10}}]},"615":{"line":4029,"type":"if","locations":[{"start":{"line":4029,"column":12},"end":{"line":4029,"column":12}},{"start":{"line":4029,"column":12},"end":{"line":4029,"column":12}}]},"616":{"line":4041,"type":"if","locations":[{"start":{"line":4041,"column":12},"end":{"line":4041,"column":12}},{"start":{"line":4041,"column":12},"end":{"line":4041,"column":12}}]},"617":{"line":4045,"type":"if","locations":[{"start":{"line":4045,"column":12},"end":{"line":4045,"column":12}},{"start":{"line":4045,"column":12},"end":{"line":4045,"column":12}}]},"618":{"line":4081,"type":"if","locations":[{"start":{"line":4081,"column":16},"end":{"line":4081,"column":16}},{"start":{"line":4081,"column":16},"end":{"line":4081,"column":16}}]},"619":{"line":4086,"type":"if","locations":[{"start":{"line":4086,"column":16},"end":{"line":4086,"column":16}},{"start":{"line":4086,"column":16},"end":{"line":4086,"column":16}}]},"620":{"line":4103,"type":"if","locations":[{"start":{"line":4103,"column":14},"end":{"line":4103,"column":14}},{"start":{"line":4103,"column":14},"end":{"line":4103,"column":14}}]},"621":{"line":4145,"type":"if","locations":[{"start":{"line":4145,"column":14},"end":{"line":4145,"column":14}},{"start":{"line":4145,"column":14},"end":{"line":4145,"column":14}}]},"622":{"line":4161,"type":"if","locations":[{"start":{"line":4161,"column":16},"end":{"line":4161,"column":16}},{"start":{"line":4161,"column":16},"end":{"line":4161,"column":16}}]},"623":{"line":4173,"type":"cond-expr","locations":[{"start":{"line":4173,"column":41},"end":{"line":4173,"column":43}},{"start":{"line":4173,"column":47},"end":{"line":4173,"column":72}}]},"624":{"line":4173,"type":"cond-expr","locations":[{"start":{"line":4173,"column":67},"end":{"line":4173,"column":68}},{"start":{"line":4173,"column":71},"end":{"line":4173,"column":72}}]},"625":{"line":4205,"type":"if","locations":[{"start":{"line":4205,"column":14},"end":{"line":4205,"column":14}},{"start":{"line":4205,"column":14},"end":{"line":4205,"column":14}}]},"626":{"line":4205,"type":"binary-expr","locations":[{"start":{"line":4205,"column":17},"end":{"line":4205,"column":48}},{"start":{"line":4206,"column":16},"end":{"line":4206,"column":74}}]},"627":{"line":4220,"type":"if","locations":[{"start":{"line":4220,"column":10},"end":{"line":4220,"column":10}},{"start":{"line":4220,"column":10},"end":{"line":4220,"column":10}}]},"628":{"line":4241,"type":"if","locations":[{"start":{"line":4241,"column":2},"end":{"line":4241,"column":2}},{"start":{"line":4241,"column":2},"end":{"line":4241,"column":2}}]},"629":{"line":4270,"type":"if","locations":[{"start":{"line":4270,"column":4},"end":{"line":4270,"column":4}},{"start":{"line":4270,"column":4},"end":{"line":4270,"column":4}}]},"630":{"line":4285,"type":"if","locations":[{"start":{"line":4285,"column":2},"end":{"line":4285,"column":2}},{"start":{"line":4285,"column":2},"end":{"line":4285,"column":2}}]},"631":{"line":4289,"type":"cond-expr","locations":[{"start":{"line":4289,"column":46},"end":{"line":4289,"column":51}},{"start":{"line":4289,"column":54},"end":{"line":4289,"column":59}}]},"632":{"line":4305,"type":"if","locations":[{"start":{"line":4305,"column":6},"end":{"line":4305,"column":6}},{"start":{"line":4305,"column":6},"end":{"line":4305,"column":6}}]},"633":{"line":4309,"type":"if","locations":[{"start":{"line":4309,"column":6},"end":{"line":4309,"column":6}},{"start":{"line":4309,"column":6},"end":{"line":4309,"column":6}}]},"634":{"line":4314,"type":"if","locations":[{"start":{"line":4314,"column":8},"end":{"line":4314,"column":8}},{"start":{"line":4314,"column":8},"end":{"line":4314,"column":8}}]},"635":{"line":4322,"type":"if","locations":[{"start":{"line":4322,"column":4},"end":{"line":4322,"column":4}},{"start":{"line":4322,"column":4},"end":{"line":4322,"column":4}}]},"636":{"line":4333,"type":"if","locations":[{"start":{"line":4333,"column":4},"end":{"line":4333,"column":4}},{"start":{"line":4333,"column":4},"end":{"line":4333,"column":4}}]},"637":{"line":4363,"type":"if","locations":[{"start":{"line":4363,"column":8},"end":{"line":4363,"column":8}},{"start":{"line":4363,"column":8},"end":{"line":4363,"column":8}}]},"638":{"line":4410,"type":"if","locations":[{"start":{"line":4410,"column":16},"end":{"line":4410,"column":16}},{"start":{"line":4410,"column":16},"end":{"line":4410,"column":16}}]},"639":{"line":4416,"type":"if","locations":[{"start":{"line":4416,"column":18},"end":{"line":4416,"column":18}},{"start":{"line":4416,"column":18},"end":{"line":4416,"column":18}}]},"640":{"line":4428,"type":"if","locations":[{"start":{"line":4428,"column":16},"end":{"line":4428,"column":16}},{"start":{"line":4428,"column":16},"end":{"line":4428,"column":16}}]},"641":{"line":4428,"type":"binary-expr","locations":[{"start":{"line":4428,"column":19},"end":{"line":4428,"column":42}},{"start":{"line":4429,"column":18},"end":{"line":4429,"column":50}},{"start":{"line":4429,"column":54},"end":{"line":4429,"column":71}}]},"642":{"line":4444,"type":"if","locations":[{"start":{"line":4444,"column":18},"end":{"line":4444,"column":18}},{"start":{"line":4444,"column":18},"end":{"line":4444,"column":18}}]},"643":{"line":4463,"type":"if","locations":[{"start":{"line":4463,"column":18},"end":{"line":4463,"column":18}},{"start":{"line":4463,"column":18},"end":{"line":4463,"column":18}}]},"644":{"line":4463,"type":"binary-expr","locations":[{"start":{"line":4463,"column":21},"end":{"line":4463,"column":44}},{"start":{"line":4464,"column":20},"end":{"line":4464,"column":52}},{"start":{"line":4464,"column":56},"end":{"line":4464,"column":73}}]},"645":{"line":4476,"type":"if","locations":[{"start":{"line":4476,"column":14},"end":{"line":4476,"column":14}},{"start":{"line":4476,"column":14},"end":{"line":4476,"column":14}}]},"646":{"line":4476,"type":"binary-expr","locations":[{"start":{"line":4476,"column":17},"end":{"line":4476,"column":40}},{"start":{"line":4476,"column":44},"end":{"line":4476,"column":61}}]},"647":{"line":4484,"type":"if","locations":[{"start":{"line":4484,"column":10},"end":{"line":4484,"column":10}},{"start":{"line":4484,"column":10},"end":{"line":4484,"column":10}}]},"648":{"line":4522,"type":"if","locations":[{"start":{"line":4522,"column":6},"end":{"line":4522,"column":6}},{"start":{"line":4522,"column":6},"end":{"line":4522,"column":6}}]},"649":{"line":4522,"type":"binary-expr","locations":[{"start":{"line":4522,"column":9},"end":{"line":4522,"column":28}},{"start":{"line":4523,"column":8},"end":{"line":4523,"column":68}}]},"650":{"line":4523,"type":"binary-expr","locations":[{"start":{"line":4523,"column":10},"end":{"line":4523,"column":41}},{"start":{"line":4523,"column":45},"end":{"line":4523,"column":67}}]},"651":{"line":4535,"type":"if","locations":[{"start":{"line":4535,"column":8},"end":{"line":4535,"column":8}},{"start":{"line":4535,"column":8},"end":{"line":4535,"column":8}}]},"652":{"line":4541,"type":"if","locations":[{"start":{"line":4541,"column":8},"end":{"line":4541,"column":8}},{"start":{"line":4541,"column":8},"end":{"line":4541,"column":8}}]},"653":{"line":4558,"type":"if","locations":[{"start":{"line":4558,"column":4},"end":{"line":4558,"column":4}},{"start":{"line":4558,"column":4},"end":{"line":4558,"column":4}}]},"654":{"line":4581,"type":"if","locations":[{"start":{"line":4581,"column":2},"end":{"line":4581,"column":2}},{"start":{"line":4581,"column":2},"end":{"line":4581,"column":2}}]},"655":{"line":4585,"type":"if","locations":[{"start":{"line":4585,"column":2},"end":{"line":4585,"column":2}},{"start":{"line":4585,"column":2},"end":{"line":4585,"column":2}}]},"656":{"line":4588,"type":"cond-expr","locations":[{"start":{"line":4588,"column":48},"end":{"line":4588,"column":53}},{"start":{"line":4588,"column":56},"end":{"line":4588,"column":61}}]},"657":{"line":4618,"type":"if","locations":[{"start":{"line":4618,"column":4},"end":{"line":4618,"column":4}},{"start":{"line":4618,"column":4},"end":{"line":4618,"column":4}}]},"658":{"line":4618,"type":"binary-expr","locations":[{"start":{"line":4618,"column":7},"end":{"line":4618,"column":41}},{"start":{"line":4618,"column":45},"end":{"line":4618,"column":70}}]},"659":{"line":4621,"type":"if","locations":[{"start":{"line":4621,"column":11},"end":{"line":4621,"column":11}},{"start":{"line":4621,"column":11},"end":{"line":4621,"column":11}}]},"660":{"line":4621,"type":"binary-expr","locations":[{"start":{"line":4621,"column":14},"end":{"line":4621,"column":47}},{"start":{"line":4621,"column":51},"end":{"line":4621,"column":75}}]},"661":{"line":4637,"type":"if","locations":[{"start":{"line":4637,"column":6},"end":{"line":4637,"column":6}},{"start":{"line":4637,"column":6},"end":{"line":4637,"column":6}}]},"662":{"line":4666,"type":"if","locations":[{"start":{"line":4666,"column":2},"end":{"line":4666,"column":2}},{"start":{"line":4666,"column":2},"end":{"line":4666,"column":2}}]},"663":{"line":4674,"type":"if","locations":[{"start":{"line":4674,"column":2},"end":{"line":4674,"column":2}},{"start":{"line":4674,"column":2},"end":{"line":4674,"column":2}}]},"664":{"line":4675,"type":"if","locations":[{"start":{"line":4675,"column":4},"end":{"line":4675,"column":4}},{"start":{"line":4675,"column":4},"end":{"line":4675,"column":4}}]},"665":{"line":4682,"type":"if","locations":[{"start":{"line":4682,"column":2},"end":{"line":4682,"column":2}},{"start":{"line":4682,"column":2},"end":{"line":4682,"column":2}}]},"666":{"line":4683,"type":"if","locations":[{"start":{"line":4683,"column":4},"end":{"line":4683,"column":4}},{"start":{"line":4683,"column":4},"end":{"line":4683,"column":4}}]},"667":{"line":4686,"type":"if","locations":[{"start":{"line":4686,"column":6},"end":{"line":4686,"column":6}},{"start":{"line":4686,"column":6},"end":{"line":4686,"column":6}}]},"668":{"line":4690,"type":"if","locations":[{"start":{"line":4690,"column":4},"end":{"line":4690,"column":4}},{"start":{"line":4690,"column":4},"end":{"line":4690,"column":4}}]},"669":{"line":4699,"type":"if","locations":[{"start":{"line":4699,"column":2},"end":{"line":4699,"column":2}},{"start":{"line":4699,"column":2},"end":{"line":4699,"column":2}}]},"670":{"line":4703,"type":"if","locations":[{"start":{"line":4703,"column":6},"end":{"line":4703,"column":6}},{"start":{"line":4703,"column":6},"end":{"line":4703,"column":6}}]},"671":{"line":4710,"type":"if","locations":[{"start":{"line":4710,"column":2},"end":{"line":4710,"column":2}},{"start":{"line":4710,"column":2},"end":{"line":4710,"column":2}}]},"672":{"line":4711,"type":"cond-expr","locations":[{"start":{"line":4711,"column":33},"end":{"line":4711,"column":59}},{"start":{"line":4711,"column":62},"end":{"line":4711,"column":74}}]},"673":{"line":4715,"type":"if","locations":[{"start":{"line":4715,"column":2},"end":{"line":4715,"column":2}},{"start":{"line":4715,"column":2},"end":{"line":4715,"column":2}}]},"674":{"line":4721,"type":"binary-expr","locations":[{"start":{"line":4721,"column":33},"end":{"line":4721,"column":47}},{"start":{"line":4721,"column":51},"end":{"line":4721,"column":53}}]},"675":{"line":4728,"type":"if","locations":[{"start":{"line":4728,"column":4},"end":{"line":4728,"column":4}},{"start":{"line":4728,"column":4},"end":{"line":4728,"column":4}}]},"676":{"line":4733,"type":"if","locations":[{"start":{"line":4733,"column":4},"end":{"line":4733,"column":4}},{"start":{"line":4733,"column":4},"end":{"line":4733,"column":4}}]},"677":{"line":4741,"type":"if","locations":[{"start":{"line":4741,"column":10},"end":{"line":4741,"column":10}},{"start":{"line":4741,"column":10},"end":{"line":4741,"column":10}}]},"678":{"line":4754,"type":"if","locations":[{"start":{"line":4754,"column":4},"end":{"line":4754,"column":4}},{"start":{"line":4754,"column":4},"end":{"line":4754,"column":4}}]},"679":{"line":4756,"type":"if","locations":[{"start":{"line":4756,"column":6},"end":{"line":4756,"column":6}},{"start":{"line":4756,"column":6},"end":{"line":4756,"column":6}}]},"680":{"line":4759,"type":"cond-expr","locations":[{"start":{"line":4759,"column":38},"end":{"line":4759,"column":43}},{"start":{"line":4759,"column":46},"end":{"line":4759,"column":50}}]},"681":{"line":4765,"type":"if","locations":[{"start":{"line":4765,"column":4},"end":{"line":4765,"column":4}},{"start":{"line":4765,"column":4},"end":{"line":4765,"column":4}}]},"682":{"line":4765,"type":"binary-expr","locations":[{"start":{"line":4765,"column":7},"end":{"line":4765,"column":27}},{"start":{"line":4765,"column":31},"end":{"line":4765,"column":51}}]},"683":{"line":4766,"type":"if","locations":[{"start":{"line":4766,"column":6},"end":{"line":4766,"column":6}},{"start":{"line":4766,"column":6},"end":{"line":4766,"column":6}}]},"684":{"line":4766,"type":"binary-expr","locations":[{"start":{"line":4766,"column":9},"end":{"line":4766,"column":30}},{"start":{"line":4766,"column":34},"end":{"line":4766,"column":53}},{"start":{"line":4767,"column":9},"end":{"line":4767,"column":46}},{"start":{"line":4768,"column":8},"end":{"line":4768,"column":59}}]},"685":{"line":4782,"type":"if","locations":[{"start":{"line":4782,"column":4},"end":{"line":4782,"column":4}},{"start":{"line":4782,"column":4},"end":{"line":4782,"column":4}}]},"686":{"line":4787,"type":"if","locations":[{"start":{"line":4787,"column":4},"end":{"line":4787,"column":4}},{"start":{"line":4787,"column":4},"end":{"line":4787,"column":4}}]},"687":{"line":4794,"type":"if","locations":[{"start":{"line":4794,"column":6},"end":{"line":4794,"column":6}},{"start":{"line":4794,"column":6},"end":{"line":4794,"column":6}}]},"688":{"line":4796,"type":"cond-expr","locations":[{"start":{"line":4796,"column":38},"end":{"line":4796,"column":53}},{"start":{"line":4796,"column":56},"end":{"line":4796,"column":57}}]},"689":{"line":4800,"type":"if","locations":[{"start":{"line":4800,"column":6},"end":{"line":4800,"column":6}},{"start":{"line":4800,"column":6},"end":{"line":4800,"column":6}}]},"690":{"line":4800,"type":"binary-expr","locations":[{"start":{"line":4800,"column":9},"end":{"line":4800,"column":22}},{"start":{"line":4800,"column":26},"end":{"line":4800,"column":48}}]},"691":{"line":4802,"type":"cond-expr","locations":[{"start":{"line":4802,"column":35},"end":{"line":4802,"column":57}},{"start":{"line":4802,"column":60},"end":{"line":4802,"column":68}}]},"692":{"line":4809,"type":"if","locations":[{"start":{"line":4809,"column":13},"end":{"line":4809,"column":13}},{"start":{"line":4809,"column":13},"end":{"line":4809,"column":13}}]},"693":{"line":4833,"type":"if","locations":[{"start":{"line":4833,"column":4},"end":{"line":4833,"column":4}},{"start":{"line":4833,"column":4},"end":{"line":4833,"column":4}}]},"694":{"line":4838,"type":"if","locations":[{"start":{"line":4838,"column":4},"end":{"line":4838,"column":4}},{"start":{"line":4838,"column":4},"end":{"line":4838,"column":4}}]},"695":{"line":4843,"type":"if","locations":[{"start":{"line":4843,"column":11},"end":{"line":4843,"column":11}},{"start":{"line":4843,"column":11},"end":{"line":4843,"column":11}}]},"696":{"line":4851,"type":"if","locations":[{"start":{"line":4851,"column":6},"end":{"line":4851,"column":6}},{"start":{"line":4851,"column":6},"end":{"line":4851,"column":6}}]},"697":{"line":4890,"type":"if","locations":[{"start":{"line":4890,"column":4},"end":{"line":4890,"column":4}},{"start":{"line":4890,"column":4},"end":{"line":4890,"column":4}}]},"698":{"line":4890,"type":"binary-expr","locations":[{"start":{"line":4890,"column":7},"end":{"line":4890,"column":30}},{"start":{"line":4890,"column":34},"end":{"line":4890,"column":50}}]},"699":{"line":4903,"type":"if","locations":[{"start":{"line":4903,"column":4},"end":{"line":4903,"column":4}},{"start":{"line":4903,"column":4},"end":{"line":4903,"column":4}}]},"700":{"line":4916,"type":"if","locations":[{"start":{"line":4916,"column":4},"end":{"line":4916,"column":4}},{"start":{"line":4916,"column":4},"end":{"line":4916,"column":4}}]},"701":{"line":4916,"type":"binary-expr","locations":[{"start":{"line":4916,"column":7},"end":{"line":4916,"column":31}},{"start":{"line":4917,"column":6},"end":{"line":4917,"column":60}}]},"702":{"line":4923,"type":"if","locations":[{"start":{"line":4923,"column":4},"end":{"line":4923,"column":4}},{"start":{"line":4923,"column":4},"end":{"line":4923,"column":4}}]},"703":{"line":4925,"type":"if","locations":[{"start":{"line":4925,"column":6},"end":{"line":4925,"column":6}},{"start":{"line":4925,"column":6},"end":{"line":4925,"column":6}}]},"704":{"line":4940,"type":"if","locations":[{"start":{"line":4940,"column":6},"end":{"line":4940,"column":6}},{"start":{"line":4940,"column":6},"end":{"line":4940,"column":6}}]},"705":{"line":4946,"type":"if","locations":[{"start":{"line":4946,"column":6},"end":{"line":4946,"column":6}},{"start":{"line":4946,"column":6},"end":{"line":4946,"column":6}}]},"706":{"line":4946,"type":"binary-expr","locations":[{"start":{"line":4946,"column":9},"end":{"line":4946,"column":23}},{"start":{"line":4946,"column":27},"end":{"line":4946,"column":43}}]},"707":{"line":4956,"type":"if","locations":[{"start":{"line":4956,"column":8},"end":{"line":4956,"column":8}},{"start":{"line":4956,"column":8},"end":{"line":4956,"column":8}}]},"708":{"line":4965,"type":"if","locations":[{"start":{"line":4965,"column":12},"end":{"line":4965,"column":12}},{"start":{"line":4965,"column":12},"end":{"line":4965,"column":12}}]},"709":{"line":4966,"type":"cond-expr","locations":[{"start":{"line":4967,"column":16},"end":{"line":4967,"column":39}},{"start":{"line":4967,"column":42},"end":{"line":4967,"column":69}}]},"710":{"line":4978,"type":"if","locations":[{"start":{"line":4978,"column":8},"end":{"line":4978,"column":8}},{"start":{"line":4978,"column":8},"end":{"line":4978,"column":8}}]},"711":{"line":4980,"type":"cond-expr","locations":[{"start":{"line":4981,"column":12},"end":{"line":4981,"column":23}},{"start":{"line":4981,"column":26},"end":{"line":4981,"column":53}}]},"712":{"line":4996,"type":"if","locations":[{"start":{"line":4996,"column":6},"end":{"line":4996,"column":6}},{"start":{"line":4996,"column":6},"end":{"line":4996,"column":6}}]},"713":{"line":5004,"type":"if","locations":[{"start":{"line":5004,"column":6},"end":{"line":5004,"column":6}},{"start":{"line":5004,"column":6},"end":{"line":5004,"column":6}}]},"714":{"line":5004,"type":"binary-expr","locations":[{"start":{"line":5004,"column":9},"end":{"line":5004,"column":23}},{"start":{"line":5004,"column":27},"end":{"line":5004,"column":44}}]},"715":{"line":5006,"type":"if","locations":[{"start":{"line":5006,"column":8},"end":{"line":5006,"column":8}},{"start":{"line":5006,"column":8},"end":{"line":5006,"column":8}}]},"716":{"line":5009,"type":"if","locations":[{"start":{"line":5009,"column":8},"end":{"line":5009,"column":8}},{"start":{"line":5009,"column":8},"end":{"line":5009,"column":8}}]},"717":{"line":5037,"type":"if","locations":[{"start":{"line":5037,"column":4},"end":{"line":5037,"column":4}},{"start":{"line":5037,"column":4},"end":{"line":5037,"column":4}}]},"718":{"line":5055,"type":"if","locations":[{"start":{"line":5055,"column":4},"end":{"line":5055,"column":4}},{"start":{"line":5055,"column":4},"end":{"line":5055,"column":4}}]},"719":{"line":5073,"type":"cond-expr","locations":[{"start":{"line":5073,"column":30},"end":{"line":5073,"column":44}},{"start":{"line":5073,"column":47},"end":{"line":5073,"column":60}}]},"720":{"line":5074,"type":"if","locations":[{"start":{"line":5074,"column":2},"end":{"line":5074,"column":2}},{"start":{"line":5074,"column":2},"end":{"line":5074,"column":2}}]},"721":{"line":5079,"type":"if","locations":[{"start":{"line":5079,"column":4},"end":{"line":5079,"column":4}},{"start":{"line":5079,"column":4},"end":{"line":5079,"column":4}}]},"722":{"line":5081,"type":"if","locations":[{"start":{"line":5081,"column":11},"end":{"line":5081,"column":11}},{"start":{"line":5081,"column":11},"end":{"line":5081,"column":11}}]},"723":{"line":5083,"type":"if","locations":[{"start":{"line":5083,"column":11},"end":{"line":5083,"column":11}},{"start":{"line":5083,"column":11},"end":{"line":5083,"column":11}}]},"724":{"line":5083,"type":"binary-expr","locations":[{"start":{"line":5083,"column":14},"end":{"line":5083,"column":32}},{"start":{"line":5083,"column":36},"end":{"line":5083,"column":53}},{"start":{"line":5083,"column":57},"end":{"line":5083,"column":73}}]},"725":{"line":5096,"type":"if","locations":[{"start":{"line":5096,"column":2},"end":{"line":5096,"column":2}},{"start":{"line":5096,"column":2},"end":{"line":5096,"column":2}}]},"726":{"line":5096,"type":"binary-expr","locations":[{"start":{"line":5096,"column":5},"end":{"line":5096,"column":21}},{"start":{"line":5096,"column":25},"end":{"line":5096,"column":43}},{"start":{"line":5096,"column":47},"end":{"line":5096,"column":67}}]},"727":{"line":5119,"type":"if","locations":[{"start":{"line":5119,"column":4},"end":{"line":5119,"column":4}},{"start":{"line":5119,"column":4},"end":{"line":5119,"column":4}}]},"728":{"line":5137,"type":"if","locations":[{"start":{"line":5137,"column":2},"end":{"line":5137,"column":2}},{"start":{"line":5137,"column":2},"end":{"line":5137,"column":2}}]},"729":{"line":5137,"type":"binary-expr","locations":[{"start":{"line":5137,"column":5},"end":{"line":5137,"column":21}},{"start":{"line":5138,"column":4},"end":{"line":5138,"column":66}}]},"730":{"line":5138,"type":"binary-expr","locations":[{"start":{"line":5138,"column":6},"end":{"line":5138,"column":33}},{"start":{"line":5138,"column":37},"end":{"line":5138,"column":65}}]},"731":{"line":5142,"type":"if","locations":[{"start":{"line":5142,"column":6},"end":{"line":5142,"column":6}},{"start":{"line":5142,"column":6},"end":{"line":5142,"column":6}}]},"732":{"line":5153,"type":"if","locations":[{"start":{"line":5153,"column":4},"end":{"line":5153,"column":4}},{"start":{"line":5153,"column":4},"end":{"line":5153,"column":4}}]},"733":{"line":5155,"type":"if","locations":[{"start":{"line":5155,"column":6},"end":{"line":5155,"column":6}},{"start":{"line":5155,"column":6},"end":{"line":5155,"column":6}}]},"734":{"line":5155,"type":"binary-expr","locations":[{"start":{"line":5155,"column":9},"end":{"line":5155,"column":22}},{"start":{"line":5155,"column":26},"end":{"line":5155,"column":41}}]},"735":{"line":5161,"type":"if","locations":[{"start":{"line":5161,"column":6},"end":{"line":5161,"column":6}},{"start":{"line":5161,"column":6},"end":{"line":5161,"column":6}}]},"736":{"line":5161,"type":"binary-expr","locations":[{"start":{"line":5161,"column":9},"end":{"line":5161,"column":22}},{"start":{"line":5161,"column":26},"end":{"line":5161,"column":47}}]},"737":{"line":5162,"type":"if","locations":[{"start":{"line":5162,"column":8},"end":{"line":5162,"column":8}},{"start":{"line":5162,"column":8},"end":{"line":5162,"column":8}}]},"738":{"line":5172,"type":"if","locations":[{"start":{"line":5172,"column":4},"end":{"line":5172,"column":4}},{"start":{"line":5172,"column":4},"end":{"line":5172,"column":4}}]},"739":{"line":5174,"type":"if","locations":[{"start":{"line":5174,"column":6},"end":{"line":5174,"column":6}},{"start":{"line":5174,"column":6},"end":{"line":5174,"column":6}}]},"740":{"line":5174,"type":"binary-expr","locations":[{"start":{"line":5174,"column":9},"end":{"line":5174,"column":29}},{"start":{"line":5174,"column":33},"end":{"line":5174,"column":56}},{"start":{"line":5175,"column":8},"end":{"line":5175,"column":34}}]},"741":{"line":5183,"type":"binary-expr","locations":[{"start":{"line":5183,"column":22},"end":{"line":5183,"column":42}},{"start":{"line":5183,"column":46},"end":{"line":5183,"column":70}},{"start":{"line":5184,"column":6},"end":{"line":5184,"column":33}}]},"742":{"line":5185,"type":"if","locations":[{"start":{"line":5185,"column":4},"end":{"line":5185,"column":4}},{"start":{"line":5185,"column":4},"end":{"line":5185,"column":4}}]},"743":{"line":5185,"type":"binary-expr","locations":[{"start":{"line":5185,"column":7},"end":{"line":5185,"column":23}},{"start":{"line":5185,"column":27},"end":{"line":5185,"column":38}}]},"744":{"line":5191,"type":"binary-expr","locations":[{"start":{"line":5191,"column":9},"end":{"line":5191,"column":17}},{"start":{"line":5191,"column":21},"end":{"line":5191,"column":32}}]},"745":{"line":5211,"type":"if","locations":[{"start":{"line":5211,"column":2},"end":{"line":5211,"column":2}},{"start":{"line":5211,"column":2},"end":{"line":5211,"column":2}}]},"746":{"line":5214,"type":"if","locations":[{"start":{"line":5214,"column":6},"end":{"line":5214,"column":6}},{"start":{"line":5214,"column":6},"end":{"line":5214,"column":6}}]},"747":{"line":5232,"type":"if","locations":[{"start":{"line":5232,"column":6},"end":{"line":5232,"column":6}},{"start":{"line":5232,"column":6},"end":{"line":5232,"column":6}}]},"748":{"line":5232,"type":"binary-expr","locations":[{"start":{"line":5232,"column":9},"end":{"line":5232,"column":23}},{"start":{"line":5232,"column":27},"end":{"line":5232,"column":57}},{"start":{"line":5233,"column":8},"end":{"line":5233,"column":41}}]},"749":{"line":5250,"type":"if","locations":[{"start":{"line":5250,"column":2},"end":{"line":5250,"column":2}},{"start":{"line":5250,"column":2},"end":{"line":5250,"column":2}}]},"750":{"line":5268,"type":"if","locations":[{"start":{"line":5268,"column":2},"end":{"line":5268,"column":2}},{"start":{"line":5268,"column":2},"end":{"line":5268,"column":2}}]},"751":{"line":5273,"type":"if","locations":[{"start":{"line":5273,"column":6},"end":{"line":5273,"column":6}},{"start":{"line":5273,"column":6},"end":{"line":5273,"column":6}}]},"752":{"line":5278,"type":"if","locations":[{"start":{"line":5278,"column":9},"end":{"line":5278,"column":9}},{"start":{"line":5278,"column":9},"end":{"line":5278,"column":9}}]},"753":{"line":5280,"type":"if","locations":[{"start":{"line":5280,"column":4},"end":{"line":5280,"column":4}},{"start":{"line":5280,"column":4},"end":{"line":5280,"column":4}}]},"754":{"line":5281,"type":"if","locations":[{"start":{"line":5281,"column":6},"end":{"line":5281,"column":6}},{"start":{"line":5281,"column":6},"end":{"line":5281,"column":6}}]},"755":{"line":5288,"type":"if","locations":[{"start":{"line":5288,"column":4},"end":{"line":5288,"column":4}},{"start":{"line":5288,"column":4},"end":{"line":5288,"column":4}}]},"756":{"line":5293,"type":"if","locations":[{"start":{"line":5293,"column":4},"end":{"line":5293,"column":4}},{"start":{"line":5293,"column":4},"end":{"line":5293,"column":4}}]},"757":{"line":5300,"type":"if","locations":[{"start":{"line":5300,"column":4},"end":{"line":5300,"column":4}},{"start":{"line":5300,"column":4},"end":{"line":5300,"column":4}}]},"758":{"line":5302,"type":"if","locations":[{"start":{"line":5302,"column":6},"end":{"line":5302,"column":6}},{"start":{"line":5302,"column":6},"end":{"line":5302,"column":6}}]},"759":{"line":5304,"type":"if","locations":[{"start":{"line":5304,"column":8},"end":{"line":5304,"column":8}},{"start":{"line":5304,"column":8},"end":{"line":5304,"column":8}}]},"760":{"line":5321,"type":"if","locations":[{"start":{"line":5321,"column":6},"end":{"line":5321,"column":6}},{"start":{"line":5321,"column":6},"end":{"line":5321,"column":6}}]},"761":{"line":5321,"type":"binary-expr","locations":[{"start":{"line":5321,"column":9},"end":{"line":5321,"column":30}},{"start":{"line":5321,"column":34},"end":{"line":5321,"column":50}},{"start":{"line":5321,"column":54},"end":{"line":5321,"column":73}},{"start":{"line":5322,"column":8},"end":{"line":5322,"column":26}}]},"762":{"line":5340,"type":"if","locations":[{"start":{"line":5340,"column":2},"end":{"line":5340,"column":2}},{"start":{"line":5340,"column":2},"end":{"line":5340,"column":2}}]},"763":{"line":5343,"type":"if","locations":[{"start":{"line":5343,"column":2},"end":{"line":5343,"column":2}},{"start":{"line":5343,"column":2},"end":{"line":5343,"column":2}}]},"764":{"line":5346,"type":"if","locations":[{"start":{"line":5346,"column":2},"end":{"line":5346,"column":2}},{"start":{"line":5346,"column":2},"end":{"line":5346,"column":2}}]},"765":{"line":5349,"type":"cond-expr","locations":[{"start":{"line":5349,"column":19},"end":{"line":5349,"column":21}},{"start":{"line":5349,"column":24},"end":{"line":5349,"column":25}}]},"766":{"line":5366,"type":"if","locations":[{"start":{"line":5366,"column":2},"end":{"line":5366,"column":2}},{"start":{"line":5366,"column":2},"end":{"line":5366,"column":2}}]},"767":{"line":5374,"type":"if","locations":[{"start":{"line":5374,"column":2},"end":{"line":5374,"column":2}},{"start":{"line":5374,"column":2},"end":{"line":5374,"column":2}}]},"768":{"line":5374,"type":"binary-expr","locations":[{"start":{"line":5374,"column":6},"end":{"line":5374,"column":35}},{"start":{"line":5374,"column":39},"end":{"line":5374,"column":73}},{"start":{"line":5375,"column":4},"end":{"line":5375,"column":30}}]},"769":{"line":5377,"type":"if","locations":[{"start":{"line":5377,"column":4},"end":{"line":5377,"column":4}},{"start":{"line":5377,"column":4},"end":{"line":5377,"column":4}}]},"770":{"line":5382,"type":"if","locations":[{"start":{"line":5382,"column":4},"end":{"line":5382,"column":4}},{"start":{"line":5382,"column":4},"end":{"line":5382,"column":4}}]},"771":{"line":5382,"type":"binary-expr","locations":[{"start":{"line":5382,"column":7},"end":{"line":5382,"column":33}},{"start":{"line":5383,"column":6},"end":{"line":5383,"column":30}},{"start":{"line":5384,"column":6},"end":{"line":5384,"column":54}}]},"772":{"line":5400,"type":"if","locations":[{"start":{"line":5400,"column":4},"end":{"line":5400,"column":4}},{"start":{"line":5400,"column":4},"end":{"line":5400,"column":4}}]},"773":{"line":5408,"type":"if","locations":[{"start":{"line":5408,"column":6},"end":{"line":5408,"column":6}},{"start":{"line":5408,"column":6},"end":{"line":5408,"column":6}}]},"774":{"line":5435,"type":"if","locations":[{"start":{"line":5435,"column":2},"end":{"line":5435,"column":2}},{"start":{"line":5435,"column":2},"end":{"line":5435,"column":2}}]},"775":{"line":5440,"type":"if","locations":[{"start":{"line":5440,"column":2},"end":{"line":5440,"column":2}},{"start":{"line":5440,"column":2},"end":{"line":5440,"column":2}}]},"776":{"line":5444,"type":"if","locations":[{"start":{"line":5444,"column":2},"end":{"line":5444,"column":2}},{"start":{"line":5444,"column":2},"end":{"line":5444,"column":2}}]},"777":{"line":5447,"type":"binary-expr","locations":[{"start":{"line":5447,"column":15},"end":{"line":5447,"column":25}},{"start":{"line":5447,"column":29},"end":{"line":5447,"column":31}}]},"778":{"line":5452,"type":"if","locations":[{"start":{"line":5452,"column":2},"end":{"line":5452,"column":2}},{"start":{"line":5452,"column":2},"end":{"line":5452,"column":2}}]},"779":{"line":5453,"type":"if","locations":[{"start":{"line":5453,"column":4},"end":{"line":5453,"column":4}},{"start":{"line":5453,"column":4},"end":{"line":5453,"column":4}}]},"780":{"line":5460,"type":"if","locations":[{"start":{"line":5460,"column":2},"end":{"line":5460,"column":2}},{"start":{"line":5460,"column":2},"end":{"line":5460,"column":2}}]},"781":{"line":5460,"type":"binary-expr","locations":[{"start":{"line":5460,"column":5},"end":{"line":5460,"column":21}},{"start":{"line":5460,"column":25},"end":{"line":5460,"column":42}}]},"782":{"line":5461,"type":"binary-expr","locations":[{"start":{"line":5461,"column":26},"end":{"line":5461,"column":48}},{"start":{"line":5461,"column":52},"end":{"line":5461,"column":59}}]},"783":{"line":5465,"type":"if","locations":[{"start":{"line":5465,"column":4},"end":{"line":5465,"column":4}},{"start":{"line":5465,"column":4},"end":{"line":5465,"column":4}}]},"784":{"line":5465,"type":"binary-expr","locations":[{"start":{"line":5465,"column":7},"end":{"line":5465,"column":23}},{"start":{"line":5465,"column":27},"end":{"line":5465,"column":44}}]},"785":{"line":5473,"type":"if","locations":[{"start":{"line":5473,"column":4},"end":{"line":5473,"column":4}},{"start":{"line":5473,"column":4},"end":{"line":5473,"column":4}}]},"786":{"line":5477,"type":"if","locations":[{"start":{"line":5477,"column":11},"end":{"line":5477,"column":11}},{"start":{"line":5477,"column":11},"end":{"line":5477,"column":11}}]},"787":{"line":5480,"type":"if","locations":[{"start":{"line":5480,"column":6},"end":{"line":5480,"column":6}},{"start":{"line":5480,"column":6},"end":{"line":5480,"column":6}}]},"788":{"line":5484,"type":"cond-expr","locations":[{"start":{"line":5484,"column":49},"end":{"line":5484,"column":64}},{"start":{"line":5484,"column":67},"end":{"line":5484,"column":71}}]},"789":{"line":5490,"type":"if","locations":[{"start":{"line":5490,"column":8},"end":{"line":5490,"column":8}},{"start":{"line":5490,"column":8},"end":{"line":5490,"column":8}}]},"790":{"line":5491,"type":"if","locations":[{"start":{"line":5491,"column":10},"end":{"line":5491,"column":10}},{"start":{"line":5491,"column":10},"end":{"line":5491,"column":10}}]},"791":{"line":5493,"type":"if","locations":[{"start":{"line":5493,"column":17},"end":{"line":5493,"column":17}},{"start":{"line":5493,"column":17},"end":{"line":5493,"column":17}}]},"792":{"line":5502,"type":"if","locations":[{"start":{"line":5502,"column":8},"end":{"line":5502,"column":8}},{"start":{"line":5502,"column":8},"end":{"line":5502,"column":8}}]},"793":{"line":5504,"type":"if","locations":[{"start":{"line":5504,"column":15},"end":{"line":5504,"column":15}},{"start":{"line":5504,"column":15},"end":{"line":5504,"column":15}}]},"794":{"line":5504,"type":"binary-expr","locations":[{"start":{"line":5504,"column":18},"end":{"line":5504,"column":49}},{"start":{"line":5504,"column":53},"end":{"line":5504,"column":67}}]},"795":{"line":5507,"type":"if","locations":[{"start":{"line":5507,"column":8},"end":{"line":5507,"column":8}},{"start":{"line":5507,"column":8},"end":{"line":5507,"column":8}}]},"796":{"line":5509,"type":"if","locations":[{"start":{"line":5509,"column":15},"end":{"line":5509,"column":15}},{"start":{"line":5509,"column":15},"end":{"line":5509,"column":15}}]},"797":{"line":5514,"type":"if","locations":[{"start":{"line":5514,"column":8},"end":{"line":5514,"column":8}},{"start":{"line":5514,"column":8},"end":{"line":5514,"column":8}}]},"798":{"line":5514,"type":"binary-expr","locations":[{"start":{"line":5514,"column":11},"end":{"line":5514,"column":37}},{"start":{"line":5514,"column":41},"end":{"line":5514,"column":63}}]},"799":{"line":5518,"type":"binary-expr","locations":[{"start":{"line":5518,"column":23},"end":{"line":5518,"column":37}},{"start":{"line":5518,"column":41},"end":{"line":5518,"column":48}}]},"800":{"line":5519,"type":"binary-expr","locations":[{"start":{"line":5519,"column":19},"end":{"line":5519,"column":29}},{"start":{"line":5519,"column":33},"end":{"line":5519,"column":40}}]},"801":{"line":5520,"type":"if","locations":[{"start":{"line":5520,"column":6},"end":{"line":5520,"column":6}},{"start":{"line":5520,"column":6},"end":{"line":5520,"column":6}}]},"802":{"line":5527,"type":"if","locations":[{"start":{"line":5527,"column":6},"end":{"line":5527,"column":6}},{"start":{"line":5527,"column":6},"end":{"line":5527,"column":6}}]},"803":{"line":5528,"type":"if","locations":[{"start":{"line":5528,"column":8},"end":{"line":5528,"column":8}},{"start":{"line":5528,"column":8},"end":{"line":5528,"column":8}}]},"804":{"line":5528,"type":"binary-expr","locations":[{"start":{"line":5528,"column":11},"end":{"line":5528,"column":31}},{"start":{"line":5528,"column":35},"end":{"line":5528,"column":55}}]},"805":{"line":5531,"type":"if","locations":[{"start":{"line":5531,"column":15},"end":{"line":5531,"column":15}},{"start":{"line":5531,"column":15},"end":{"line":5531,"column":15}}]},"806":{"line":5546,"type":"if","locations":[{"start":{"line":5546,"column":4},"end":{"line":5546,"column":4}},{"start":{"line":5546,"column":4},"end":{"line":5546,"column":4}}]},"807":{"line":5552,"type":"if","locations":[{"start":{"line":5552,"column":2},"end":{"line":5552,"column":2}},{"start":{"line":5552,"column":2},"end":{"line":5552,"column":2}}]},"808":{"line":5553,"type":"if","locations":[{"start":{"line":5553,"column":4},"end":{"line":5553,"column":4}},{"start":{"line":5553,"column":4},"end":{"line":5553,"column":4}}]},"809":{"line":5556,"type":"if","locations":[{"start":{"line":5556,"column":6},"end":{"line":5556,"column":6}},{"start":{"line":5556,"column":6},"end":{"line":5556,"column":6}}]},"810":{"line":5556,"type":"binary-expr","locations":[{"start":{"line":5556,"column":9},"end":{"line":5556,"column":33}},{"start":{"line":5556,"column":37},"end":{"line":5556,"column":50}}]},"811":{"line":5559,"type":"if","locations":[{"start":{"line":5559,"column":8},"end":{"line":5559,"column":8}},{"start":{"line":5559,"column":8},"end":{"line":5559,"column":8}}]},"812":{"line":5574,"type":"binary-expr","locations":[{"start":{"line":5574,"column":8},"end":{"line":5574,"column":30}},{"start":{"line":5574,"column":34},"end":{"line":5574,"column":52}}]},"813":{"line":5576,"type":"if","locations":[{"start":{"line":5576,"column":4},"end":{"line":5576,"column":4}},{"start":{"line":5576,"column":4},"end":{"line":5576,"column":4}}]},"814":{"line":5590,"type":"binary-expr","locations":[{"start":{"line":5590,"column":27},"end":{"line":5590,"column":57}},{"start":{"line":5591,"column":9},"end":{"line":5591,"column":23}},{"start":{"line":5591,"column":27},"end":{"line":5591,"column":67}}]},"815":{"line":5595,"type":"if","locations":[{"start":{"line":5595,"column":6},"end":{"line":5595,"column":6}},{"start":{"line":5595,"column":6},"end":{"line":5595,"column":6}}]},"816":{"line":5595,"type":"binary-expr","locations":[{"start":{"line":5595,"column":9},"end":{"line":5595,"column":22}},{"start":{"line":5595,"column":27},"end":{"line":5595,"column":42}},{"start":{"line":5596,"column":8},"end":{"line":5596,"column":48}}]},"817":{"line":5603,"type":"if","locations":[{"start":{"line":5603,"column":2},"end":{"line":5603,"column":2}},{"start":{"line":5603,"column":2},"end":{"line":5603,"column":2}}]},"818":{"line":5608,"type":"if","locations":[{"start":{"line":5608,"column":2},"end":{"line":5608,"column":2}},{"start":{"line":5608,"column":2},"end":{"line":5608,"column":2}}]},"819":{"line":5628,"type":"if","locations":[{"start":{"line":5628,"column":2},"end":{"line":5628,"column":2}},{"start":{"line":5628,"column":2},"end":{"line":5628,"column":2}}]},"820":{"line":5637,"type":"binary-expr","locations":[{"start":{"line":5637,"column":26},"end":{"line":5637,"column":43}},{"start":{"line":5638,"column":6},"end":{"line":5638,"column":28}}]},"821":{"line":5641,"type":"if","locations":[{"start":{"line":5641,"column":4},"end":{"line":5641,"column":4}},{"start":{"line":5641,"column":4},"end":{"line":5641,"column":4}}]},"822":{"line":5643,"type":"if","locations":[{"start":{"line":5643,"column":6},"end":{"line":5643,"column":6}},{"start":{"line":5643,"column":6},"end":{"line":5643,"column":6}}]},"823":{"line":5643,"type":"binary-expr","locations":[{"start":{"line":5643,"column":9},"end":{"line":5643,"column":32}},{"start":{"line":5643,"column":36},"end":{"line":5643,"column":67}}]},"824":{"line":5653,"type":"binary-expr","locations":[{"start":{"line":5653,"column":26},"end":{"line":5653,"column":40}},{"start":{"line":5654,"column":7},"end":{"line":5654,"column":21}},{"start":{"line":5654,"column":26},"end":{"line":5654,"column":43}},{"start":{"line":5654,"column":48},"end":{"line":5654,"column":62}}]},"825":{"line":5657,"type":"binary-expr","locations":[{"start":{"line":5657,"column":26},"end":{"line":5657,"column":60}},{"start":{"line":5658,"column":6},"end":{"line":5658,"column":62}}]},"826":{"line":5659,"type":"if","locations":[{"start":{"line":5659,"column":4},"end":{"line":5659,"column":4}},{"start":{"line":5659,"column":4},"end":{"line":5659,"column":4}}]},"827":{"line":5659,"type":"binary-expr","locations":[{"start":{"line":5659,"column":7},"end":{"line":5659,"column":21}},{"start":{"line":5660,"column":7},"end":{"line":5660,"column":26}},{"start":{"line":5660,"column":30},"end":{"line":5660,"column":44}},{"start":{"line":5660,"column":48},"end":{"line":5660,"column":62}}]},"828":{"line":5667,"type":"if","locations":[{"start":{"line":5667,"column":4},"end":{"line":5667,"column":4}},{"start":{"line":5667,"column":4},"end":{"line":5667,"column":4}}]},"829":{"line":5671,"type":"if","locations":[{"start":{"line":5671,"column":4},"end":{"line":5671,"column":4}},{"start":{"line":5671,"column":4},"end":{"line":5671,"column":4}}]},"830":{"line":5675,"type":"if","locations":[{"start":{"line":5675,"column":11},"end":{"line":5675,"column":11}},{"start":{"line":5675,"column":11},"end":{"line":5675,"column":11}}]},"831":{"line":5693,"type":"if","locations":[{"start":{"line":5693,"column":2},"end":{"line":5693,"column":2}},{"start":{"line":5693,"column":2},"end":{"line":5693,"column":2}}]},"832":{"line":5693,"type":"binary-expr","locations":[{"start":{"line":5693,"column":5},"end":{"line":5693,"column":19}},{"start":{"line":5693,"column":23},"end":{"line":5693,"column":40}},{"start":{"line":5693,"column":44},"end":{"line":5693,"column":73}}]},"833":{"line":5712,"type":"if","locations":[{"start":{"line":5712,"column":2},"end":{"line":5712,"column":2}},{"start":{"line":5712,"column":2},"end":{"line":5712,"column":2}}]},"834":{"line":5714,"type":"if","locations":[{"start":{"line":5714,"column":4},"end":{"line":5714,"column":4}},{"start":{"line":5714,"column":4},"end":{"line":5714,"column":4}}]},"835":{"line":5727,"type":"if","locations":[{"start":{"line":5727,"column":2},"end":{"line":5727,"column":2}},{"start":{"line":5727,"column":2},"end":{"line":5727,"column":2}}]},"836":{"line":5734,"type":"if","locations":[{"start":{"line":5734,"column":2},"end":{"line":5734,"column":2}},{"start":{"line":5734,"column":2},"end":{"line":5734,"column":2}}]},"837":{"line":5742,"type":"if","locations":[{"start":{"line":5742,"column":2},"end":{"line":5742,"column":2}},{"start":{"line":5742,"column":2},"end":{"line":5742,"column":2}}]},"838":{"line":5750,"type":"if","locations":[{"start":{"line":5750,"column":2},"end":{"line":5750,"column":2}},{"start":{"line":5750,"column":2},"end":{"line":5750,"column":2}}]},"839":{"line":5750,"type":"binary-expr","locations":[{"start":{"line":5750,"column":5},"end":{"line":5750,"column":19}},{"start":{"line":5750,"column":24},"end":{"line":5750,"column":40}},{"start":{"line":5750,"column":44},"end":{"line":5750,"column":65}}]},"840":{"line":5757,"type":"if","locations":[{"start":{"line":5757,"column":2},"end":{"line":5757,"column":2}},{"start":{"line":5757,"column":2},"end":{"line":5757,"column":2}}]},"841":{"line":5761,"type":"if","locations":[{"start":{"line":5761,"column":2},"end":{"line":5761,"column":2}},{"start":{"line":5761,"column":2},"end":{"line":5761,"column":2}}]},"842":{"line":5773,"type":"if","locations":[{"start":{"line":5773,"column":2},"end":{"line":5773,"column":2}},{"start":{"line":5773,"column":2},"end":{"line":5773,"column":2}}]},"843":{"line":5774,"type":"if","locations":[{"start":{"line":5774,"column":4},"end":{"line":5774,"column":4}},{"start":{"line":5774,"column":4},"end":{"line":5774,"column":4}}]},"844":{"line":5781,"type":"if","locations":[{"start":{"line":5781,"column":4},"end":{"line":5781,"column":4}},{"start":{"line":5781,"column":4},"end":{"line":5781,"column":4}}]},"845":{"line":5790,"type":"if","locations":[{"start":{"line":5790,"column":4},"end":{"line":5790,"column":4}},{"start":{"line":5790,"column":4},"end":{"line":5790,"column":4}}]},"846":{"line":5798,"type":"if","locations":[{"start":{"line":5798,"column":9},"end":{"line":5798,"column":9}},{"start":{"line":5798,"column":9},"end":{"line":5798,"column":9}}]},"847":{"line":5800,"type":"if","locations":[{"start":{"line":5800,"column":4},"end":{"line":5800,"column":4}},{"start":{"line":5800,"column":4},"end":{"line":5800,"column":4}}]},"848":{"line":5806,"type":"if","locations":[{"start":{"line":5806,"column":4},"end":{"line":5806,"column":4}},{"start":{"line":5806,"column":4},"end":{"line":5806,"column":4}}]},"849":{"line":5810,"type":"if","locations":[{"start":{"line":5810,"column":6},"end":{"line":5810,"column":6}},{"start":{"line":5810,"column":6},"end":{"line":5810,"column":6}}]},"850":{"line":5810,"type":"binary-expr","locations":[{"start":{"line":5810,"column":9},"end":{"line":5810,"column":28}},{"start":{"line":5810,"column":32},"end":{"line":5810,"column":47}}]},"851":{"line":5826,"type":"if","locations":[{"start":{"line":5826,"column":2},"end":{"line":5826,"column":2}},{"start":{"line":5826,"column":2},"end":{"line":5826,"column":2}}]},"852":{"line":5828,"type":"if","locations":[{"start":{"line":5828,"column":4},"end":{"line":5828,"column":4}},{"start":{"line":5828,"column":4},"end":{"line":5828,"column":4}}]},"853":{"line":5830,"type":"if","locations":[{"start":{"line":5830,"column":6},"end":{"line":5830,"column":6}},{"start":{"line":5830,"column":6},"end":{"line":5830,"column":6}}]},"854":{"line":5835,"type":"if","locations":[{"start":{"line":5835,"column":6},"end":{"line":5835,"column":6}},{"start":{"line":5835,"column":6},"end":{"line":5835,"column":6}}]},"855":{"line":5845,"type":"if","locations":[{"start":{"line":5845,"column":6},"end":{"line":5845,"column":6}},{"start":{"line":5845,"column":6},"end":{"line":5845,"column":6}}]},"856":{"line":5859,"type":"if","locations":[{"start":{"line":5859,"column":2},"end":{"line":5859,"column":2}},{"start":{"line":5859,"column":2},"end":{"line":5859,"column":2}}]},"857":{"line":5861,"type":"if","locations":[{"start":{"line":5861,"column":4},"end":{"line":5861,"column":4}},{"start":{"line":5861,"column":4},"end":{"line":5861,"column":4}}]},"858":{"line":5868,"type":"if","locations":[{"start":{"line":5868,"column":4},"end":{"line":5868,"column":4}},{"start":{"line":5868,"column":4},"end":{"line":5868,"column":4}}]},"859":{"line":5868,"type":"binary-expr","locations":[{"start":{"line":5868,"column":7},"end":{"line":5868,"column":21}},{"start":{"line":5868,"column":25},"end":{"line":5868,"column":42}}]},"860":{"line":5872,"type":"if","locations":[{"start":{"line":5872,"column":6},"end":{"line":5872,"column":6}},{"start":{"line":5872,"column":6},"end":{"line":5872,"column":6}}]},"861":{"line":5879,"type":"if","locations":[{"start":{"line":5879,"column":6},"end":{"line":5879,"column":6}},{"start":{"line":5879,"column":6},"end":{"line":5879,"column":6}}]},"862":{"line":5892,"type":"if","locations":[{"start":{"line":5892,"column":2},"end":{"line":5892,"column":2}},{"start":{"line":5892,"column":2},"end":{"line":5892,"column":2}}]},"863":{"line":5894,"type":"if","locations":[{"start":{"line":5894,"column":4},"end":{"line":5894,"column":4}},{"start":{"line":5894,"column":4},"end":{"line":5894,"column":4}}]},"864":{"line":5894,"type":"binary-expr","locations":[{"start":{"line":5894,"column":7},"end":{"line":5894,"column":28}},{"start":{"line":5894,"column":32},"end":{"line":5894,"column":52}},{"start":{"line":5895,"column":6},"end":{"line":5895,"column":28}},{"start":{"line":5895,"column":32},"end":{"line":5895,"column":57}}]},"865":{"line":5902,"type":"if","locations":[{"start":{"line":5902,"column":4},"end":{"line":5902,"column":4}},{"start":{"line":5902,"column":4},"end":{"line":5902,"column":4}}]},"866":{"line":5902,"type":"binary-expr","locations":[{"start":{"line":5902,"column":7},"end":{"line":5902,"column":22}},{"start":{"line":5902,"column":26},"end":{"line":5902,"column":48}},{"start":{"line":5902,"column":52},"end":{"line":5902,"column":72}},{"start":{"line":5903,"column":6},"end":{"line":5903,"column":24}}]},"867":{"line":5914,"type":"if","locations":[{"start":{"line":5914,"column":2},"end":{"line":5914,"column":2}},{"start":{"line":5914,"column":2},"end":{"line":5914,"column":2}}]},"868":{"line":5914,"type":"binary-expr","locations":[{"start":{"line":5914,"column":5},"end":{"line":5914,"column":25}},{"start":{"line":5914,"column":29},"end":{"line":5914,"column":48}}]},"869":{"line":5916,"type":"if","locations":[{"start":{"line":5916,"column":4},"end":{"line":5916,"column":4}},{"start":{"line":5916,"column":4},"end":{"line":5916,"column":4}}]},"870":{"line":5916,"type":"binary-expr","locations":[{"start":{"line":5916,"column":7},"end":{"line":5916,"column":24}},{"start":{"line":5916,"column":28},"end":{"line":5916,"column":48}}]},"871":{"line":5924,"type":"if","locations":[{"start":{"line":5924,"column":4},"end":{"line":5924,"column":4}},{"start":{"line":5924,"column":4},"end":{"line":5924,"column":4}}]},"872":{"line":5932,"type":"if","locations":[{"start":{"line":5932,"column":2},"end":{"line":5932,"column":2}},{"start":{"line":5932,"column":2},"end":{"line":5932,"column":2}}]},"873":{"line":5932,"type":"binary-expr","locations":[{"start":{"line":5932,"column":5},"end":{"line":5932,"column":22}},{"start":{"line":5932,"column":26},"end":{"line":5932,"column":44}}]},"874":{"line":5958,"type":"if","locations":[{"start":{"line":5958,"column":2},"end":{"line":5958,"column":2}},{"start":{"line":5958,"column":2},"end":{"line":5958,"column":2}}]},"875":{"line":5958,"type":"binary-expr","locations":[{"start":{"line":5958,"column":5},"end":{"line":5958,"column":19}},{"start":{"line":5958,"column":23},"end":{"line":5958,"column":40}}]},"876":{"line":5966,"type":"if","locations":[{"start":{"line":5966,"column":2},"end":{"line":5966,"column":2}},{"start":{"line":5966,"column":2},"end":{"line":5966,"column":2}}]},"877":{"line":5966,"type":"binary-expr","locations":[{"start":{"line":5966,"column":5},"end":{"line":5966,"column":13}},{"start":{"line":5966,"column":17},"end":{"line":5966,"column":34}},{"start":{"line":5966,"column":38},"end":{"line":5966,"column":61}}]},"878":{"line":5970,"type":"binary-expr","locations":[{"start":{"line":5970,"column":15},"end":{"line":5970,"column":25}},{"start":{"line":5970,"column":29},"end":{"line":5970,"column":31}}]},"879":{"line":5971,"type":"if","locations":[{"start":{"line":5971,"column":2},"end":{"line":5971,"column":2}},{"start":{"line":5971,"column":2},"end":{"line":5971,"column":2}}]},"880":{"line":5975,"type":"if","locations":[{"start":{"line":5975,"column":4},"end":{"line":5975,"column":4}},{"start":{"line":5975,"column":4},"end":{"line":5975,"column":4}}]},"881":{"line":5979,"type":"if","locations":[{"start":{"line":5979,"column":4},"end":{"line":5979,"column":4}},{"start":{"line":5979,"column":4},"end":{"line":5979,"column":4}}]},"882":{"line":5987,"type":"if","locations":[{"start":{"line":5987,"column":2},"end":{"line":5987,"column":2}},{"start":{"line":5987,"column":2},"end":{"line":5987,"column":2}}]},"883":{"line":5993,"type":"if","locations":[{"start":{"line":5993,"column":4},"end":{"line":5993,"column":4}},{"start":{"line":5993,"column":4},"end":{"line":5993,"column":4}}]},"884":{"line":5993,"type":"binary-expr","locations":[{"start":{"line":5993,"column":7},"end":{"line":5993,"column":21}},{"start":{"line":5993,"column":25},"end":{"line":5993,"column":51}}]},"885":{"line":5998,"type":"if","locations":[{"start":{"line":5998,"column":4},"end":{"line":5998,"column":4}},{"start":{"line":5998,"column":4},"end":{"line":5998,"column":4}}]},"886":{"line":5998,"type":"binary-expr","locations":[{"start":{"line":5998,"column":7},"end":{"line":5998,"column":15}},{"start":{"line":5998,"column":19},"end":{"line":5998,"column":37}}]},"887":{"line":6004,"type":"if","locations":[{"start":{"line":6004,"column":4},"end":{"line":6004,"column":4}},{"start":{"line":6004,"column":4},"end":{"line":6004,"column":4}}]},"888":{"line":6013,"type":"if","locations":[{"start":{"line":6013,"column":2},"end":{"line":6013,"column":2}},{"start":{"line":6013,"column":2},"end":{"line":6013,"column":2}}]},"889":{"line":6013,"type":"binary-expr","locations":[{"start":{"line":6013,"column":5},"end":{"line":6013,"column":21}},{"start":{"line":6013,"column":25},"end":{"line":6013,"column":46}}]},"890":{"line":6019,"type":"if","locations":[{"start":{"line":6019,"column":2},"end":{"line":6019,"column":2}},{"start":{"line":6019,"column":2},"end":{"line":6019,"column":2}}]},"891":{"line":6028,"type":"if","locations":[{"start":{"line":6028,"column":2},"end":{"line":6028,"column":2}},{"start":{"line":6028,"column":2},"end":{"line":6028,"column":2}}]},"892":{"line":6032,"type":"if","locations":[{"start":{"line":6032,"column":2},"end":{"line":6032,"column":2}},{"start":{"line":6032,"column":2},"end":{"line":6032,"column":2}}]},"893":{"line":6037,"type":"if","locations":[{"start":{"line":6037,"column":2},"end":{"line":6037,"column":2}},{"start":{"line":6037,"column":2},"end":{"line":6037,"column":2}}]},"894":{"line":6038,"type":"binary-expr","locations":[{"start":{"line":6038,"column":28},"end":{"line":6038,"column":32}},{"start":{"line":6038,"column":36},"end":{"line":6038,"column":38}}]},"895":{"line":6046,"type":"binary-expr","locations":[{"start":{"line":6046,"column":14},"end":{"line":6046,"column":27}},{"start":{"line":6046,"column":31},"end":{"line":6046,"column":33}}]},"896":{"line":6049,"type":"if","locations":[{"start":{"line":6049,"column":2},"end":{"line":6049,"column":2}},{"start":{"line":6049,"column":2},"end":{"line":6049,"column":2}}]},"897":{"line":6056,"type":"if","locations":[{"start":{"line":6056,"column":4},"end":{"line":6056,"column":4}},{"start":{"line":6056,"column":4},"end":{"line":6056,"column":4}}]},"898":{"line":6058,"type":"if","locations":[{"start":{"line":6058,"column":6},"end":{"line":6058,"column":6}},{"start":{"line":6058,"column":6},"end":{"line":6058,"column":6}}]},"899":{"line":6064,"type":"if","locations":[{"start":{"line":6064,"column":6},"end":{"line":6064,"column":6}},{"start":{"line":6064,"column":6},"end":{"line":6064,"column":6}}]},"900":{"line":6072,"type":"if","locations":[{"start":{"line":6072,"column":8},"end":{"line":6072,"column":8}},{"start":{"line":6072,"column":8},"end":{"line":6072,"column":8}}]},"901":{"line":6074,"type":"if","locations":[{"start":{"line":6074,"column":10},"end":{"line":6074,"column":10}},{"start":{"line":6074,"column":10},"end":{"line":6074,"column":10}}]},"902":{"line":6074,"type":"binary-expr","locations":[{"start":{"line":6074,"column":13},"end":{"line":6074,"column":28}},{"start":{"line":6074,"column":32},"end":{"line":6074,"column":55}}]},"903":{"line":6091,"type":"if","locations":[{"start":{"line":6091,"column":2},"end":{"line":6091,"column":2}},{"start":{"line":6091,"column":2},"end":{"line":6091,"column":2}}]},"904":{"line":6095,"type":"if","locations":[{"start":{"line":6095,"column":2},"end":{"line":6095,"column":2}},{"start":{"line":6095,"column":2},"end":{"line":6095,"column":2}}]},"905":{"line":6098,"type":"if","locations":[{"start":{"line":6098,"column":2},"end":{"line":6098,"column":2}},{"start":{"line":6098,"column":2},"end":{"line":6098,"column":2}}]},"906":{"line":6103,"type":"if","locations":[{"start":{"line":6103,"column":2},"end":{"line":6103,"column":2}},{"start":{"line":6103,"column":2},"end":{"line":6103,"column":2}}]},"907":{"line":6120,"type":"if","locations":[{"start":{"line":6120,"column":2},"end":{"line":6120,"column":2}},{"start":{"line":6120,"column":2},"end":{"line":6120,"column":2}}]},"908":{"line":6124,"type":"if","locations":[{"start":{"line":6124,"column":2},"end":{"line":6124,"column":2}},{"start":{"line":6124,"column":2},"end":{"line":6124,"column":2}}]},"909":{"line":6125,"type":"binary-expr","locations":[{"start":{"line":6125,"column":28},"end":{"line":6125,"column":32}},{"start":{"line":6125,"column":36},"end":{"line":6125,"column":38}}]},"910":{"line":6130,"type":"if","locations":[{"start":{"line":6130,"column":2},"end":{"line":6130,"column":2}},{"start":{"line":6130,"column":2},"end":{"line":6130,"column":2}}]},"911":{"line":6131,"type":"binary-expr","locations":[{"start":{"line":6131,"column":13},"end":{"line":6131,"column":26}},{"start":{"line":6131,"column":30},"end":{"line":6131,"column":32}}]},"912":{"line":6131,"type":"binary-expr","locations":[{"start":{"line":6131,"column":44},"end":{"line":6131,"column":58}},{"start":{"line":6131,"column":62},"end":{"line":6131,"column":64}}]},"913":{"line":6132,"type":"if","locations":[{"start":{"line":6132,"column":9},"end":{"line":6132,"column":9}},{"start":{"line":6132,"column":9},"end":{"line":6132,"column":9}}]},"914":{"line":6138,"type":"if","locations":[{"start":{"line":6138,"column":2},"end":{"line":6138,"column":2}},{"start":{"line":6138,"column":2},"end":{"line":6138,"column":2}}]},"915":{"line":6149,"type":"cond-expr","locations":[{"start":{"line":6149,"column":43},"end":{"line":6149,"column":44}},{"start":{"line":6149,"column":47},"end":{"line":6149,"column":48}}]},"916":{"line":6149,"type":"binary-expr","locations":[{"start":{"line":6149,"column":14},"end":{"line":6149,"column":26}},{"start":{"line":6149,"column":30},"end":{"line":6149,"column":39}}]},"917":{"line":6150,"type":"binary-expr","locations":[{"start":{"line":6150,"column":8},"end":{"line":6150,"column":31}},{"start":{"line":6150,"column":35},"end":{"line":6150,"column":60}}]},"918":{"line":6151,"type":"if","locations":[{"start":{"line":6151,"column":4},"end":{"line":6151,"column":4}},{"start":{"line":6151,"column":4},"end":{"line":6151,"column":4}}]},"919":{"line":6160,"type":"if","locations":[{"start":{"line":6160,"column":2},"end":{"line":6160,"column":2}},{"start":{"line":6160,"column":2},"end":{"line":6160,"column":2}}]},"920":{"line":6173,"type":"if","locations":[{"start":{"line":6173,"column":2},"end":{"line":6173,"column":2}},{"start":{"line":6173,"column":2},"end":{"line":6173,"column":2}}]},"921":{"line":6176,"type":"if","locations":[{"start":{"line":6176,"column":2},"end":{"line":6176,"column":2}},{"start":{"line":6176,"column":2},"end":{"line":6176,"column":2}}]},"922":{"line":6181,"type":"if","locations":[{"start":{"line":6181,"column":2},"end":{"line":6181,"column":2}},{"start":{"line":6181,"column":2},"end":{"line":6181,"column":2}}]},"923":{"line":6197,"type":"binary-expr","locations":[{"start":{"line":6197,"column":30},"end":{"line":6197,"column":42}},{"start":{"line":6197,"column":46},"end":{"line":6197,"column":48}}]},"924":{"line":6216,"type":"if","locations":[{"start":{"line":6216,"column":4},"end":{"line":6216,"column":4}},{"start":{"line":6216,"column":4},"end":{"line":6216,"column":4}}]},"925":{"line":6226,"type":"binary-expr","locations":[{"start":{"line":6226,"column":26},"end":{"line":6226,"column":48}},{"start":{"line":6226,"column":52},"end":{"line":6226,"column":59}}]},"926":{"line":6235,"type":"if","locations":[{"start":{"line":6235,"column":6},"end":{"line":6235,"column":6}},{"start":{"line":6235,"column":6},"end":{"line":6235,"column":6}}]},"927":{"line":6239,"type":"binary-expr","locations":[{"start":{"line":6239,"column":22},"end":{"line":6239,"column":43}},{"start":{"line":6239,"column":47},"end":{"line":6239,"column":54}}]},"928":{"line":6243,"type":"if","locations":[{"start":{"line":6243,"column":6},"end":{"line":6243,"column":6}},{"start":{"line":6243,"column":6},"end":{"line":6243,"column":6}}]},"929":{"line":6251,"type":"if","locations":[{"start":{"line":6251,"column":8},"end":{"line":6251,"column":8}},{"start":{"line":6251,"column":8},"end":{"line":6251,"column":8}}]},"930":{"line":6255,"type":"if","locations":[{"start":{"line":6255,"column":10},"end":{"line":6255,"column":10}},{"start":{"line":6255,"column":10},"end":{"line":6255,"column":10}}]},"931":{"line":6255,"type":"binary-expr","locations":[{"start":{"line":6255,"column":13},"end":{"line":6255,"column":23}},{"start":{"line":6255,"column":27},"end":{"line":6255,"column":49}}]},"932":{"line":6259,"type":"if","locations":[{"start":{"line":6259,"column":12},"end":{"line":6259,"column":12}},{"start":{"line":6259,"column":12},"end":{"line":6259,"column":12}}]},"933":{"line":6265,"type":"if","locations":[{"start":{"line":6265,"column":15},"end":{"line":6265,"column":15}},{"start":{"line":6265,"column":15},"end":{"line":6265,"column":15}}]},"934":{"line":6265,"type":"binary-expr","locations":[{"start":{"line":6265,"column":18},"end":{"line":6265,"column":28}},{"start":{"line":6265,"column":32},"end":{"line":6265,"column":54}}]},"935":{"line":6271,"type":"if","locations":[{"start":{"line":6271,"column":8},"end":{"line":6271,"column":8}},{"start":{"line":6271,"column":8},"end":{"line":6271,"column":8}}]},"936":{"line":6279,"type":"if","locations":[{"start":{"line":6279,"column":8},"end":{"line":6279,"column":8}},{"start":{"line":6279,"column":8},"end":{"line":6279,"column":8}}]},"937":{"line":6282,"type":"if","locations":[{"start":{"line":6282,"column":15},"end":{"line":6282,"column":15}},{"start":{"line":6282,"column":15},"end":{"line":6282,"column":15}}]},"938":{"line":6285,"type":"if","locations":[{"start":{"line":6285,"column":15},"end":{"line":6285,"column":15}},{"start":{"line":6285,"column":15},"end":{"line":6285,"column":15}}]},"939":{"line":6287,"type":"binary-expr","locations":[{"start":{"line":6287,"column":25},"end":{"line":6287,"column":45}},{"start":{"line":6287,"column":49},"end":{"line":6287,"column":56}}]},"940":{"line":6326,"type":"if","locations":[{"start":{"line":6326,"column":6},"end":{"line":6326,"column":6}},{"start":{"line":6326,"column":6},"end":{"line":6326,"column":6}}]},"941":{"line":6331,"type":"if","locations":[{"start":{"line":6331,"column":6},"end":{"line":6331,"column":6}},{"start":{"line":6331,"column":6},"end":{"line":6331,"column":6}}]},"942":{"line":6339,"type":"if","locations":[{"start":{"line":6339,"column":6},"end":{"line":6339,"column":6}},{"start":{"line":6339,"column":6},"end":{"line":6339,"column":6}}]},"943":{"line":6355,"type":"if","locations":[{"start":{"line":6355,"column":4},"end":{"line":6355,"column":4}},{"start":{"line":6355,"column":4},"end":{"line":6355,"column":4}}]},"944":{"line":6372,"type":"if","locations":[{"start":{"line":6372,"column":4},"end":{"line":6372,"column":4}},{"start":{"line":6372,"column":4},"end":{"line":6372,"column":4}}]},"945":{"line":6375,"type":"if","locations":[{"start":{"line":6375,"column":4},"end":{"line":6375,"column":4}},{"start":{"line":6375,"column":4},"end":{"line":6375,"column":4}}]},"946":{"line":6390,"type":"if","locations":[{"start":{"line":6390,"column":2},"end":{"line":6390,"column":2}},{"start":{"line":6390,"column":2},"end":{"line":6390,"column":2}}]},"947":{"line":6393,"type":"switch","locations":[{"start":{"line":6394,"column":2},"end":{"line":6394,"column":15}},{"start":{"line":6395,"column":2},"end":{"line":6395,"column":18}},{"start":{"line":6396,"column":2},"end":{"line":6396,"column":20}},{"start":{"line":6397,"column":2},"end":{"line":6397,"column":18}},{"start":{"line":6398,"column":2},"end":{"line":6398,"column":16}},{"start":{"line":6399,"column":2},"end":{"line":6399,"column":19}},{"start":{"line":6400,"column":2},"end":{"line":6400,"column":16}},{"start":{"line":6401,"column":2},"end":{"line":6401,"column":13}},{"start":{"line":6402,"column":2},"end":{"line":6402,"column":16}},{"start":{"line":6403,"column":2},"end":{"line":6403,"column":19}},{"start":{"line":6404,"column":2},"end":{"line":6404,"column":15}},{"start":{"line":6405,"column":2},"end":{"line":6405,"column":22}},{"start":{"line":6406,"column":2},"end":{"line":6406,"column":19}},{"start":{"line":6407,"column":2},"end":{"line":6407,"column":21}},{"start":{"line":6408,"column":2},"end":{"line":6408,"column":18}},{"start":{"line":6409,"column":2},"end":{"line":6409,"column":14}},{"start":{"line":6410,"column":2},"end":{"line":6410,"column":15}},{"start":{"line":6411,"column":2},"end":{"line":6411,"column":16}},{"start":{"line":6412,"column":2},"end":{"line":6413,"column":16}}]},"948":{"line":6437,"type":"binary-expr","locations":[{"start":{"line":6437,"column":9},"end":{"line":6437,"column":21}},{"start":{"line":6437,"column":25},"end":{"line":6437,"column":52}}]},"949":{"line":6458,"type":"if","locations":[{"start":{"line":6458,"column":2},"end":{"line":6458,"column":2}},{"start":{"line":6458,"column":2},"end":{"line":6458,"column":2}}]},"950":{"line":6458,"type":"binary-expr","locations":[{"start":{"line":6458,"column":5},"end":{"line":6458,"column":17}},{"start":{"line":6458,"column":21},"end":{"line":6458,"column":38}}]},"951":{"line":6464,"type":"if","locations":[{"start":{"line":6464,"column":2},"end":{"line":6464,"column":2}},{"start":{"line":6464,"column":2},"end":{"line":6464,"column":2}}]},"952":{"line":6468,"type":"if","locations":[{"start":{"line":6468,"column":6},"end":{"line":6468,"column":6}},{"start":{"line":6468,"column":6},"end":{"line":6468,"column":6}}]},"953":{"line":6475,"type":"if","locations":[{"start":{"line":6475,"column":2},"end":{"line":6475,"column":2}},{"start":{"line":6475,"column":2},"end":{"line":6475,"column":2}}]},"954":{"line":6491,"type":"binary-expr","locations":[{"start":{"line":6491,"column":10},"end":{"line":6491,"column":31}},{"start":{"line":6492,"column":4},"end":{"line":6492,"column":59}}]},"955":{"line":6503,"type":"binary-expr","locations":[{"start":{"line":6503,"column":10},"end":{"line":6503,"column":31}},{"start":{"line":6504,"column":4},"end":{"line":6504,"column":59}}]},"956":{"line":6515,"type":"binary-expr","locations":[{"start":{"line":6515,"column":9},"end":{"line":6515,"column":21}},{"start":{"line":6515,"column":25},"end":{"line":6515,"column":54}}]},"957":{"line":6526,"type":"binary-expr","locations":[{"start":{"line":6526,"column":9},"end":{"line":6526,"column":30}},{"start":{"line":6526,"column":34},"end":{"line":6526,"column":45}}]},"958":{"line":6537,"type":"binary-expr","locations":[{"start":{"line":6537,"column":10},"end":{"line":6537,"column":32}},{"start":{"line":6538,"column":4},"end":{"line":6538,"column":60}}]},"959":{"line":6565,"type":"if","locations":[{"start":{"line":6565,"column":2},"end":{"line":6565,"column":2}},{"start":{"line":6565,"column":2},"end":{"line":6565,"column":2}}]},"960":{"line":6565,"type":"binary-expr","locations":[{"start":{"line":6565,"column":5},"end":{"line":6565,"column":17}},{"start":{"line":6566,"column":4},"end":{"line":6566,"column":57}}]},"961":{"line":6566,"type":"binary-expr","locations":[{"start":{"line":6566,"column":7},"end":{"line":6566,"column":20}},{"start":{"line":6566,"column":26},"end":{"line":6566,"column":37}},{"start":{"line":6566,"column":43},"end":{"line":6566,"column":55}}]},"962":{"line":6568,"type":"binary-expr","locations":[{"start":{"line":6568,"column":12},"end":{"line":6568,"column":24}},{"start":{"line":6568,"column":28},"end":{"line":6568,"column":41}}]},"963":{"line":6584,"type":"binary-expr","locations":[{"start":{"line":6584,"column":10},"end":{"line":6584,"column":22}},{"start":{"line":6584,"column":26},"end":{"line":6584,"column":53}},{"start":{"line":6584,"column":58},"end":{"line":6584,"column":68}}]},"964":{"line":6598,"type":"binary-expr","locations":[{"start":{"line":6598,"column":9},"end":{"line":6598,"column":21}},{"start":{"line":6598,"column":26},"end":{"line":6598,"column":39}}]},"965":{"line":6612,"type":"binary-expr","locations":[{"start":{"line":6612,"column":9},"end":{"line":6612,"column":21}},{"start":{"line":6612,"column":26},"end":{"line":6612,"column":38}}]},"966":{"line":6628,"type":"if","locations":[{"start":{"line":6628,"column":2},"end":{"line":6628,"column":2}},{"start":{"line":6628,"column":2},"end":{"line":6628,"column":2}}]},"967":{"line":6629,"type":"if","locations":[{"start":{"line":6629,"column":4},"end":{"line":6629,"column":4}},{"start":{"line":6629,"column":4},"end":{"line":6629,"column":4}}]},"968":{"line":6632,"type":"binary-expr","locations":[{"start":{"line":6632,"column":14},"end":{"line":6632,"column":41}},{"start":{"line":6633,"column":8},"end":{"line":6633,"column":61}}]},"969":{"line":6633,"type":"binary-expr","locations":[{"start":{"line":6633,"column":11},"end":{"line":6633,"column":24}},{"start":{"line":6633,"column":30},"end":{"line":6633,"column":41}},{"start":{"line":6633,"column":47},"end":{"line":6633,"column":59}}]},"970":{"line":6647,"type":"binary-expr","locations":[{"start":{"line":6647,"column":9},"end":{"line":6647,"column":21}},{"start":{"line":6647,"column":25},"end":{"line":6647,"column":46}}]},"971":{"line":6659,"type":"if","locations":[{"start":{"line":6659,"column":2},"end":{"line":6659,"column":2}},{"start":{"line":6659,"column":2},"end":{"line":6659,"column":2}}]},"972":{"line":6659,"type":"binary-expr","locations":[{"start":{"line":6659,"column":5},"end":{"line":6659,"column":10}},{"start":{"line":6659,"column":14},"end":{"line":6659,"column":39}}]},"973":{"line":6661,"type":"if","locations":[{"start":{"line":6661,"column":4},"end":{"line":6661,"column":4}},{"start":{"line":6661,"column":4},"end":{"line":6661,"column":4}}]},"974":{"line":6666,"type":"if","locations":[{"start":{"line":6666,"column":11},"end":{"line":6666,"column":11}},{"start":{"line":6666,"column":11},"end":{"line":6666,"column":11}}]},"975":{"line":6692,"type":"if","locations":[{"start":{"line":6692,"column":2},"end":{"line":6692,"column":2}},{"start":{"line":6692,"column":2},"end":{"line":6692,"column":2}}]},"976":{"line":6697,"type":"if","locations":[{"start":{"line":6697,"column":9},"end":{"line":6697,"column":9}},{"start":{"line":6697,"column":9},"end":{"line":6697,"column":9}}]},"977":{"line":6699,"type":"if","locations":[{"start":{"line":6699,"column":6},"end":{"line":6699,"column":6}},{"start":{"line":6699,"column":6},"end":{"line":6699,"column":6}}]},"978":{"line":6708,"type":"if","locations":[{"start":{"line":6708,"column":6},"end":{"line":6708,"column":6}},{"start":{"line":6708,"column":6},"end":{"line":6708,"column":6}}]},"979":{"line":6712,"type":"if","locations":[{"start":{"line":6712,"column":10},"end":{"line":6712,"column":10}},{"start":{"line":6712,"column":10},"end":{"line":6712,"column":10}}]},"980":{"line":6715,"type":"if","locations":[{"start":{"line":6715,"column":12},"end":{"line":6715,"column":12}},{"start":{"line":6715,"column":12},"end":{"line":6715,"column":12}}]},"981":{"line":6717,"type":"if","locations":[{"start":{"line":6717,"column":14},"end":{"line":6717,"column":14}},{"start":{"line":6717,"column":14},"end":{"line":6717,"column":14}}]},"982":{"line":6725,"type":"if","locations":[{"start":{"line":6725,"column":19},"end":{"line":6725,"column":19}},{"start":{"line":6725,"column":19},"end":{"line":6725,"column":19}}]},"983":{"line":6731,"type":"if","locations":[{"start":{"line":6731,"column":13},"end":{"line":6731,"column":13}},{"start":{"line":6731,"column":13},"end":{"line":6731,"column":13}}]},"984":{"line":6735,"type":"if","locations":[{"start":{"line":6735,"column":8},"end":{"line":6735,"column":8}},{"start":{"line":6735,"column":8},"end":{"line":6735,"column":8}}]},"985":{"line":6737,"type":"if","locations":[{"start":{"line":6737,"column":15},"end":{"line":6737,"column":15}},{"start":{"line":6737,"column":15},"end":{"line":6737,"column":15}}]},"986":{"line":6765,"type":"if","locations":[{"start":{"line":6765,"column":4},"end":{"line":6765,"column":4}},{"start":{"line":6765,"column":4},"end":{"line":6765,"column":4}}]},"987":{"line":6784,"type":"if","locations":[{"start":{"line":6784,"column":4},"end":{"line":6784,"column":4}},{"start":{"line":6784,"column":4},"end":{"line":6784,"column":4}}]},"988":{"line":6792,"type":"if","locations":[{"start":{"line":6792,"column":6},"end":{"line":6792,"column":6}},{"start":{"line":6792,"column":6},"end":{"line":6792,"column":6}}]},"989":{"line":6802,"type":"if","locations":[{"start":{"line":6802,"column":8},"end":{"line":6802,"column":8}},{"start":{"line":6802,"column":8},"end":{"line":6802,"column":8}}]},"990":{"line":6813,"type":"if","locations":[{"start":{"line":6813,"column":10},"end":{"line":6813,"column":10}},{"start":{"line":6813,"column":10},"end":{"line":6813,"column":10}}]},"991":{"line":6817,"type":"cond-expr","locations":[{"start":{"line":6817,"column":32},"end":{"line":6817,"column":50}},{"start":{"line":6817,"column":53},"end":{"line":6817,"column":57}}]},"992":{"line":6820,"type":"if","locations":[{"start":{"line":6820,"column":10},"end":{"line":6820,"column":10}},{"start":{"line":6820,"column":10},"end":{"line":6820,"column":10}}]},"993":{"line":6820,"type":"binary-expr","locations":[{"start":{"line":6820,"column":13},"end":{"line":6820,"column":17}},{"start":{"line":6820,"column":21},"end":{"line":6820,"column":35}}]},"994":{"line":6829,"type":"if","locations":[{"start":{"line":6829,"column":10},"end":{"line":6829,"column":10}},{"start":{"line":6829,"column":10},"end":{"line":6829,"column":10}}]},"995":{"line":6839,"type":"if","locations":[{"start":{"line":6839,"column":17},"end":{"line":6839,"column":17}},{"start":{"line":6839,"column":17},"end":{"line":6839,"column":17}}]},"996":{"line":6846,"type":"if","locations":[{"start":{"line":6846,"column":10},"end":{"line":6846,"column":10}},{"start":{"line":6846,"column":10},"end":{"line":6846,"column":10}}]},"997":{"line":6852,"type":"if","locations":[{"start":{"line":6852,"column":10},"end":{"line":6852,"column":10}},{"start":{"line":6852,"column":10},"end":{"line":6852,"column":10}}]},"998":{"line":6859,"type":"if","locations":[{"start":{"line":6859,"column":10},"end":{"line":6859,"column":10}},{"start":{"line":6859,"column":10},"end":{"line":6859,"column":10}}]},"999":{"line":6860,"type":"if","locations":[{"start":{"line":6860,"column":12},"end":{"line":6860,"column":12}},{"start":{"line":6860,"column":12},"end":{"line":6860,"column":12}}]},"1000":{"line":6868,"type":"if","locations":[{"start":{"line":6868,"column":12},"end":{"line":6868,"column":12}},{"start":{"line":6868,"column":12},"end":{"line":6868,"column":12}}]},"1001":{"line":6873,"type":"if","locations":[{"start":{"line":6873,"column":12},"end":{"line":6873,"column":12}},{"start":{"line":6873,"column":12},"end":{"line":6873,"column":12}}]},"1002":{"line":6879,"type":"if","locations":[{"start":{"line":6879,"column":8},"end":{"line":6879,"column":8}},{"start":{"line":6879,"column":8},"end":{"line":6879,"column":8}}]},"1003":{"line":6879,"type":"binary-expr","locations":[{"start":{"line":6879,"column":11},"end":{"line":6879,"column":18}},{"start":{"line":6879,"column":22},"end":{"line":6879,"column":39}}]},"1004":{"line":6889,"type":"if","locations":[{"start":{"line":6889,"column":0},"end":{"line":6889,"column":0}},{"start":{"line":6889,"column":0},"end":{"line":6889,"column":0}}]},"1005":{"line":6891,"type":"if","locations":[{"start":{"line":6891,"column":4},"end":{"line":6891,"column":4}},{"start":{"line":6891,"column":4},"end":{"line":6891,"column":4}}]},"1006":{"line":6896,"type":"if","locations":[{"start":{"line":6896,"column":6},"end":{"line":6896,"column":6}},{"start":{"line":6896,"column":6},"end":{"line":6896,"column":6}}]},"1007":{"line":6946,"type":"if","locations":[{"start":{"line":6946,"column":4},"end":{"line":6946,"column":4}},{"start":{"line":6946,"column":4},"end":{"line":6946,"column":4}}]},"1008":{"line":6952,"type":"if","locations":[{"start":{"line":6952,"column":4},"end":{"line":6952,"column":4}},{"start":{"line":6952,"column":4},"end":{"line":6952,"column":4}}]},"1009":{"line":6962,"type":"if","locations":[{"start":{"line":6962,"column":4},"end":{"line":6962,"column":4}},{"start":{"line":6962,"column":4},"end":{"line":6962,"column":4}}]},"1010":{"line":6972,"type":"if","locations":[{"start":{"line":6972,"column":4},"end":{"line":6972,"column":4}},{"start":{"line":6972,"column":4},"end":{"line":6972,"column":4}}]},"1011":{"line":6974,"type":"if","locations":[{"start":{"line":6974,"column":11},"end":{"line":6974,"column":11}},{"start":{"line":6974,"column":11},"end":{"line":6974,"column":11}}]},"1012":{"line":6978,"type":"if","locations":[{"start":{"line":6978,"column":6},"end":{"line":6978,"column":6}},{"start":{"line":6978,"column":6},"end":{"line":6978,"column":6}}]},"1013":{"line":6980,"type":"if","locations":[{"start":{"line":6980,"column":13},"end":{"line":6980,"column":13}},{"start":{"line":6980,"column":13},"end":{"line":6980,"column":13}}]},"1014":{"line":6997,"type":"if","locations":[{"start":{"line":6997,"column":4},"end":{"line":6997,"column":4}},{"start":{"line":6997,"column":4},"end":{"line":6997,"column":4}}]},"1015":{"line":6999,"type":"if","locations":[{"start":{"line":6999,"column":11},"end":{"line":6999,"column":11}},{"start":{"line":6999,"column":11},"end":{"line":6999,"column":11}}]},"1016":{"line":7004,"type":"if","locations":[{"start":{"line":7004,"column":4},"end":{"line":7004,"column":4}},{"start":{"line":7004,"column":4},"end":{"line":7004,"column":4}}]},"1017":{"line":7010,"type":"binary-expr","locations":[{"start":{"line":7010,"column":22},"end":{"line":7010,"column":28}},{"start":{"line":7010,"column":32},"end":{"line":7010,"column":51}}]},"1018":{"line":7011,"type":"if","locations":[{"start":{"line":7011,"column":8},"end":{"line":7011,"column":8}},{"start":{"line":7011,"column":8},"end":{"line":7011,"column":8}}]},"1019":{"line":7015,"type":"if","locations":[{"start":{"line":7015,"column":6},"end":{"line":7015,"column":6}},{"start":{"line":7015,"column":6},"end":{"line":7015,"column":6}}]},"1020":{"line":7040,"type":"if","locations":[{"start":{"line":7040,"column":6},"end":{"line":7040,"column":6}},{"start":{"line":7040,"column":6},"end":{"line":7040,"column":6}}]},"1021":{"line":7065,"type":"binary-expr","locations":[{"start":{"line":7065,"column":10},"end":{"line":7065,"column":19}},{"start":{"line":7065,"column":23},"end":{"line":7065,"column":27}}]},"1022":{"line":7066,"type":"if","locations":[{"start":{"line":7066,"column":2},"end":{"line":7066,"column":2}},{"start":{"line":7066,"column":2},"end":{"line":7066,"column":2}}]},"1023":{"line":7066,"type":"binary-expr","locations":[{"start":{"line":7066,"column":5},"end":{"line":7066,"column":21}},{"start":{"line":7066,"column":25},"end":{"line":7066,"column":36}}]},"1024":{"line":7073,"type":"if","locations":[{"start":{"line":7073,"column":2},"end":{"line":7073,"column":2}},{"start":{"line":7073,"column":2},"end":{"line":7073,"column":2}}]},"1025":{"line":7081,"type":"if","locations":[{"start":{"line":7081,"column":2},"end":{"line":7081,"column":2}},{"start":{"line":7081,"column":2},"end":{"line":7081,"column":2}}]},"1026":{"line":7089,"type":"if","locations":[{"start":{"line":7089,"column":2},"end":{"line":7089,"column":2}},{"start":{"line":7089,"column":2},"end":{"line":7089,"column":2}}]},"1027":{"line":7091,"type":"if","locations":[{"start":{"line":7091,"column":9},"end":{"line":7091,"column":9}},{"start":{"line":7091,"column":9},"end":{"line":7091,"column":9}}]},"1028":{"line":7101,"type":"if","locations":[{"start":{"line":7101,"column":4},"end":{"line":7101,"column":4}},{"start":{"line":7101,"column":4},"end":{"line":7101,"column":4}}]},"1029":{"line":7102,"type":"if","locations":[{"start":{"line":7102,"column":6},"end":{"line":7102,"column":6}},{"start":{"line":7102,"column":6},"end":{"line":7102,"column":6}}]},"1030":{"line":7105,"type":"if","locations":[{"start":{"line":7105,"column":11},"end":{"line":7105,"column":11}},{"start":{"line":7105,"column":11},"end":{"line":7105,"column":11}}]},"1031":{"line":7111,"type":"if","locations":[{"start":{"line":7111,"column":2},"end":{"line":7111,"column":2}},{"start":{"line":7111,"column":2},"end":{"line":7111,"column":2}}]},"1032":{"line":7111,"type":"binary-expr","locations":[{"start":{"line":7111,"column":5},"end":{"line":7111,"column":15}},{"start":{"line":7111,"column":19},"end":{"line":7111,"column":34}}]},"1033":{"line":7112,"type":"if","locations":[{"start":{"line":7112,"column":4},"end":{"line":7112,"column":4}},{"start":{"line":7112,"column":4},"end":{"line":7112,"column":4}}]},"1034":{"line":7137,"type":"if","locations":[{"start":{"line":7137,"column":4},"end":{"line":7137,"column":4}},{"start":{"line":7137,"column":4},"end":{"line":7137,"column":4}}]},"1035":{"line":7143,"type":"if","locations":[{"start":{"line":7143,"column":4},"end":{"line":7143,"column":4}},{"start":{"line":7143,"column":4},"end":{"line":7143,"column":4}}]},"1036":{"line":7157,"type":"if","locations":[{"start":{"line":7157,"column":8},"end":{"line":7157,"column":8}},{"start":{"line":7157,"column":8},"end":{"line":7157,"column":8}}]},"1037":{"line":7164,"type":"if","locations":[{"start":{"line":7164,"column":8},"end":{"line":7164,"column":8}},{"start":{"line":7164,"column":8},"end":{"line":7164,"column":8}}]},"1038":{"line":7172,"type":"if","locations":[{"start":{"line":7172,"column":8},"end":{"line":7172,"column":8}},{"start":{"line":7172,"column":8},"end":{"line":7172,"column":8}}]},"1039":{"line":7174,"type":"if","locations":[{"start":{"line":7174,"column":10},"end":{"line":7174,"column":10}},{"start":{"line":7174,"column":10},"end":{"line":7174,"column":10}}]},"1040":{"line":7180,"type":"if","locations":[{"start":{"line":7180,"column":12},"end":{"line":7180,"column":12}},{"start":{"line":7180,"column":12},"end":{"line":7180,"column":12}}]},"1041":{"line":7182,"type":"if","locations":[{"start":{"line":7182,"column":19},"end":{"line":7182,"column":19}},{"start":{"line":7182,"column":19},"end":{"line":7182,"column":19}}]},"1042":{"line":7192,"type":"if","locations":[{"start":{"line":7192,"column":8},"end":{"line":7192,"column":8}},{"start":{"line":7192,"column":8},"end":{"line":7192,"column":8}}]},"1043":{"line":7193,"type":"if","locations":[{"start":{"line":7193,"column":10},"end":{"line":7193,"column":10}},{"start":{"line":7193,"column":10},"end":{"line":7193,"column":10}}]},"1044":{"line":7201,"type":"if","locations":[{"start":{"line":7201,"column":10},"end":{"line":7201,"column":10}},{"start":{"line":7201,"column":10},"end":{"line":7201,"column":10}}]},"1045":{"line":7202,"type":"if","locations":[{"start":{"line":7202,"column":12},"end":{"line":7202,"column":12}},{"start":{"line":7202,"column":12},"end":{"line":7202,"column":12}}]},"1046":{"line":7263,"type":"if","locations":[{"start":{"line":7263,"column":2},"end":{"line":7263,"column":2}},{"start":{"line":7263,"column":2},"end":{"line":7263,"column":2}}]},"1047":{"line":7263,"type":"binary-expr","locations":[{"start":{"line":7263,"column":5},"end":{"line":7263,"column":8}},{"start":{"line":7263,"column":12},"end":{"line":7263,"column":32}}]},"1048":{"line":7272,"type":"if","locations":[{"start":{"line":7272,"column":2},"end":{"line":7272,"column":2}},{"start":{"line":7272,"column":2},"end":{"line":7272,"column":2}}]},"1049":{"line":7344,"type":"if","locations":[{"start":{"line":7344,"column":4},"end":{"line":7344,"column":4}},{"start":{"line":7344,"column":4},"end":{"line":7344,"column":4}}]},"1050":{"line":7344,"type":"binary-expr","locations":[{"start":{"line":7344,"column":8},"end":{"line":7344,"column":18}},{"start":{"line":7344,"column":22},"end":{"line":7344,"column":33}},{"start":{"line":7345,"column":8},"end":{"line":7345,"column":12}},{"start":{"line":7345,"column":16},"end":{"line":7345,"column":21}},{"start":{"line":7345,"column":25},"end":{"line":7345,"column":51}},{"start":{"line":7346,"column":7},"end":{"line":7346,"column":12}},{"start":{"line":7346,"column":16},"end":{"line":7346,"column":32}},{"start":{"line":7346,"column":36},"end":{"line":7346,"column":62}}]},"1051":{"line":7353,"type":"if","locations":[{"start":{"line":7353,"column":2},"end":{"line":7353,"column":2}},{"start":{"line":7353,"column":2},"end":{"line":7353,"column":2}}]},"1052":{"line":7357,"type":"cond-expr","locations":[{"start":{"line":7357,"column":30},"end":{"line":7357,"column":37}},{"start":{"line":7357,"column":40},"end":{"line":7357,"column":47}}]},"1053":{"line":7363,"type":"if","locations":[{"start":{"line":7363,"column":6},"end":{"line":7363,"column":6}},{"start":{"line":7363,"column":6},"end":{"line":7363,"column":6}}]},"1054":{"line":7381,"type":"if","locations":[{"start":{"line":7381,"column":2},"end":{"line":7381,"column":2}},{"start":{"line":7381,"column":2},"end":{"line":7381,"column":2}}]},"1055":{"line":7384,"type":"if","locations":[{"start":{"line":7384,"column":2},"end":{"line":7384,"column":2}},{"start":{"line":7384,"column":2},"end":{"line":7384,"column":2}}]},"1056":{"line":7401,"type":"if","locations":[{"start":{"line":7401,"column":0},"end":{"line":7401,"column":0}},{"start":{"line":7401,"column":0},"end":{"line":7401,"column":0}}]},"1057":{"line":7405,"type":"if","locations":[{"start":{"line":7405,"column":4},"end":{"line":7405,"column":4}},{"start":{"line":7405,"column":4},"end":{"line":7405,"column":4}}]},"1058":{"line":7424,"type":"if","locations":[{"start":{"line":7424,"column":2},"end":{"line":7424,"column":2}},{"start":{"line":7424,"column":2},"end":{"line":7424,"column":2}}]},"1059":{"line":7447,"type":"if","locations":[{"start":{"line":7447,"column":2},"end":{"line":7447,"column":2}},{"start":{"line":7447,"column":2},"end":{"line":7447,"column":2}}]},"1060":{"line":7454,"type":"if","locations":[{"start":{"line":7454,"column":2},"end":{"line":7454,"column":2}},{"start":{"line":7454,"column":2},"end":{"line":7454,"column":2}}]},"1061":{"line":7454,"type":"binary-expr","locations":[{"start":{"line":7454,"column":5},"end":{"line":7454,"column":28}},{"start":{"line":7455,"column":4},"end":{"line":7455,"column":61}}]},"1062":{"line":7460,"type":"if","locations":[{"start":{"line":7460,"column":6},"end":{"line":7460,"column":6}},{"start":{"line":7460,"column":6},"end":{"line":7460,"column":6}}]},"1063":{"line":7464,"type":"if","locations":[{"start":{"line":7464,"column":6},"end":{"line":7464,"column":6}},{"start":{"line":7464,"column":6},"end":{"line":7464,"column":6}}]},"1064":{"line":7531,"type":"if","locations":[{"start":{"line":7531,"column":2},"end":{"line":7531,"column":2}},{"start":{"line":7531,"column":2},"end":{"line":7531,"column":2}}]},"1065":{"line":7531,"type":"binary-expr","locations":[{"start":{"line":7531,"column":5},"end":{"line":7531,"column":28}},{"start":{"line":7531,"column":32},"end":{"line":7531,"column":58}}]},"1066":{"line":7611,"type":"if","locations":[{"start":{"line":7611,"column":2},"end":{"line":7611,"column":2}},{"start":{"line":7611,"column":2},"end":{"line":7611,"column":2}}]},"1067":{"line":7692,"type":"if","locations":[{"start":{"line":7692,"column":4},"end":{"line":7692,"column":4}},{"start":{"line":7692,"column":4},"end":{"line":7692,"column":4}}]},"1068":{"line":7715,"type":"if","locations":[{"start":{"line":7715,"column":2},"end":{"line":7715,"column":2}},{"start":{"line":7715,"column":2},"end":{"line":7715,"column":2}}]},"1069":{"line":7876,"type":"if","locations":[{"start":{"line":7876,"column":2},"end":{"line":7876,"column":2}},{"start":{"line":7876,"column":2},"end":{"line":7876,"column":2}}]},"1070":{"line":8034,"type":"if","locations":[{"start":{"line":8034,"column":0},"end":{"line":8034,"column":0}},{"start":{"line":8034,"column":0},"end":{"line":8034,"column":0}}]},"1071":{"line":8061,"type":"binary-expr","locations":[{"start":{"line":8061,"column":29},"end":{"line":8061,"column":35}},{"start":{"line":8061,"column":39},"end":{"line":8061,"column":45}}]},"1072":{"line":8065,"type":"cond-expr","locations":[{"start":{"line":8065,"column":47},"end":{"line":8065,"column":51}},{"start":{"line":8065,"column":54},"end":{"line":8065,"column":58}}]},"1073":{"line":8080,"type":"if","locations":[{"start":{"line":8080,"column":2},"end":{"line":8080,"column":2}},{"start":{"line":8080,"column":2},"end":{"line":8080,"column":2}}]},"1074":{"line":8088,"type":"if","locations":[{"start":{"line":8088,"column":4},"end":{"line":8088,"column":4}},{"start":{"line":8088,"column":4},"end":{"line":8088,"column":4}}]},"1075":{"line":8088,"type":"binary-expr","locations":[{"start":{"line":8088,"column":7},"end":{"line":8088,"column":23}},{"start":{"line":8088,"column":28},"end":{"line":8088,"column":43}},{"start":{"line":8088,"column":47},"end":{"line":8088,"column":63}}]},"1076":{"line":8092,"type":"if","locations":[{"start":{"line":8092,"column":4},"end":{"line":8092,"column":4}},{"start":{"line":8092,"column":4},"end":{"line":8092,"column":4}}]},"1077":{"line":8094,"type":"if","locations":[{"start":{"line":8094,"column":6},"end":{"line":8094,"column":6}},{"start":{"line":8094,"column":6},"end":{"line":8094,"column":6}}]},"1078":{"line":8094,"type":"binary-expr","locations":[{"start":{"line":8094,"column":9},"end":{"line":8094,"column":21}},{"start":{"line":8095,"column":9},"end":{"line":8095,"column":26}},{"start":{"line":8095,"column":30},"end":{"line":8095,"column":64}}]},"1079":{"line":8109,"type":"if","locations":[{"start":{"line":8109,"column":0},"end":{"line":8109,"column":0}},{"start":{"line":8109,"column":0},"end":{"line":8109,"column":0}}]},"1080":{"line":8112,"type":"if","locations":[{"start":{"line":8112,"column":7},"end":{"line":8112,"column":7}},{"start":{"line":8112,"column":7},"end":{"line":8112,"column":7}}]},"1081":{"line":8117,"type":"if","locations":[{"start":{"line":8117,"column":0},"end":{"line":8117,"column":0}},{"start":{"line":8117,"column":0},"end":{"line":8117,"column":0}}]},"1082":{"line":8119,"type":"switch","locations":[{"start":{"line":8121,"column":6},"end":{"line":8124,"column":14}},{"start":{"line":8125,"column":6},"end":{"line":8128,"column":61}}]},"1083":{"line":8151,"type":"if","locations":[{"start":{"line":8151,"column":0},"end":{"line":8151,"column":0}},{"start":{"line":8151,"column":0},"end":{"line":8151,"column":0}}]},"1084":{"line":8151,"type":"binary-expr","locations":[{"start":{"line":8151,"column":3},"end":{"line":8151,"column":11}},{"start":{"line":8151,"column":16},"end":{"line":8151,"column":44}},{"start":{"line":8151,"column":48},"end":{"line":8151,"column":58}}]},"1085":{"line":8162,"type":"if","locations":[{"start":{"line":8162,"column":2},"end":{"line":8162,"column":2}},{"start":{"line":8162,"column":2},"end":{"line":8162,"column":2}}]},"1086":{"line":8162,"type":"binary-expr","locations":[{"start":{"line":8162,"column":5},"end":{"line":8162,"column":34}},{"start":{"line":8163,"column":4},"end":{"line":8163,"column":33}},{"start":{"line":8163,"column":37},"end":{"line":8163,"column":51}}]},"1087":{"line":8168,"type":"if","locations":[{"start":{"line":8168,"column":2},"end":{"line":8168,"column":2}},{"start":{"line":8168,"column":2},"end":{"line":8168,"column":2}}]},"1088":{"line":8170,"type":"if","locations":[{"start":{"line":8170,"column":4},"end":{"line":8170,"column":4}},{"start":{"line":8170,"column":4},"end":{"line":8170,"column":4}}]}},"code":["/**"," * A JavaScript implementation of the JSON-LD API."," *"," * @author Dave Longley"," *"," * @license BSD 3-Clause License"," * Copyright (c) 2011-2015 Digital Bazaar, Inc."," * All rights reserved."," *"," * Redistribution and use in source and binary forms, with or without"," * modification, are permitted provided that the following conditions are met:"," *"," * Redistributions of source code must retain the above copyright notice,"," * this list of conditions and the following disclaimer."," *"," * Redistributions in binary form must reproduce the above copyright"," * notice, this list of conditions and the following disclaimer in the"," * documentation and/or other materials provided with the distribution."," *"," * Neither the name of the Digital Bazaar, Inc. nor the names of its"," * contributors may be used to endorse or promote products derived from"," * this software without specific prior written permission."," *"," * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS"," * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED"," * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A"," * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT"," * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"," * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED"," * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR"," * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF"," * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING"," * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS"," * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."," */","(function() {","","// determine if in-browser or using node.js","var _nodejs = (","  typeof process !== 'undefined' && process.versions && process.versions.node);","var _browser = !_nodejs &&","  (typeof window !== 'undefined' || typeof self !== 'undefined');","if(_browser) {","  if(typeof global === 'undefined') {","    if(typeof window !== 'undefined') {","      global = window;","    } else if(typeof self !== 'undefined') {","      global = self;","    } else if(typeof $ !== 'undefined') {","      global = $;","    }","  }","}","","// attaches jsonld API to the given object","var wrapper = function(jsonld) {","","/* Core API */","","/**"," * Performs JSON-LD compaction."," *"," * @param input the JSON-LD input to compact."," * @param ctx the context to compact with."," * @param [options] options to use:"," *          [base] the base IRI to use."," *          [compactArrays] true to compact arrays to single values when"," *            appropriate, false not to (default: true)."," *          [graph] true to always output a top-level graph (default: false)."," *          [expandContext] a context to expand with."," *          [skipExpansion] true to assume the input is expanded and skip"," *            expansion, false not to, defaults to false."," *          [documentLoader(url, callback(err, remoteDoc))] the document loader."," * @param callback(err, compacted, ctx) called once the operation completes."," */","jsonld.compact = function(input, ctx, options, callback) {","  if(arguments.length < 2) {","    return jsonld.nextTick(function() {","      callback(new TypeError('Could not compact, too few arguments.'));","    });","  }","","  // get arguments","  if(typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","","  if(ctx === null) {","    return jsonld.nextTick(function() {","      callback(new JsonLdError(","        'The compaction context must not be null.',","        'jsonld.CompactError', {code: 'invalid local context'}));","    });","  }","","  // nothing to compact","  if(input === null) {","    return jsonld.nextTick(function() {","      callback(null, null);","    });","  }","","  // set default options","  if(!('base' in options)) {","    options.base = (typeof input === 'string') ? input : '';","  }","  if(!('compactArrays' in options)) {","    options.compactArrays = true;","  }","  if(!('graph' in options)) {","    options.graph = false;","  }","  if(!('skipExpansion' in options)) {","    options.skipExpansion = false;","  }","  if(!('documentLoader' in options)) {","    options.documentLoader = jsonld.loadDocument;","  }","  if(!('link' in options)) {","    options.link = false;","  }","  if(options.link) {","    // force skip expansion when linking, \"link\" is not part of the public","    // API, it should only be called from framing","    options.skipExpansion = true;","  }","","  var expand = function(input, options, callback) {","    if(options.skipExpansion) {","      return jsonld.nextTick(function() {","        callback(null, input);","      });","    }","    jsonld.expand(input, options, callback);","  };","","  // expand input then do compaction","  expand(input, options, function(err, expanded) {","    if(err) {","      return callback(new JsonLdError(","        'Could not expand input before compaction.',","        'jsonld.CompactError', {cause: err}));","    }","","    // process context","    var activeCtx = _getInitialContext(options);","    jsonld.processContext(activeCtx, ctx, options, function(err, activeCtx) {","      if(err) {","        return callback(new JsonLdError(","          'Could not process context before compaction.',","          'jsonld.CompactError', {cause: err}));","      }","","      var compacted;","      try {","        // do compaction","        compacted = new Processor().compact(activeCtx, null, expanded, options);","      } catch(ex) {","        return callback(ex);","      }","","      cleanup(null, compacted, activeCtx, options);","    });","  });","","  // performs clean up after compaction","  function cleanup(err, compacted, activeCtx, options) {","    if(err) {","      return callback(err);","    }","","    if(options.compactArrays && !options.graph && _isArray(compacted)) {","      if(compacted.length === 1) {","        // simplify to a single item","        compacted = compacted[0];","      } else if(compacted.length === 0) {","        // simplify to an empty object","        compacted = {};","      }","    } else if(options.graph && _isObject(compacted)) {","      // always use array if graph option is on","      compacted = [compacted];","    }","","    // follow @context key","    if(_isObject(ctx) && '@context' in ctx) {","      ctx = ctx['@context'];","    }","","    // build output context","    ctx = _clone(ctx);","    if(!_isArray(ctx)) {","      ctx = [ctx];","    }","    // remove empty contexts","    var tmp = ctx;","    ctx = [];","    for(var i = 0; i < tmp.length; ++i) {","      if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {","        ctx.push(tmp[i]);","      }","    }","","    // remove array if only one context","    var hasContext = (ctx.length > 0);","    if(ctx.length === 1) {","      ctx = ctx[0];","    }","","    // add context and/or @graph","    if(_isArray(compacted)) {","      // use '@graph' keyword","      var kwgraph = _compactIri(activeCtx, '@graph');","      var graph = compacted;","      compacted = {};","      if(hasContext) {","        compacted['@context'] = ctx;","      }","      compacted[kwgraph] = graph;","    } else if(_isObject(compacted) && hasContext) {","      // reorder keys so @context is first","      var graph = compacted;","      compacted = {'@context': ctx};","      for(var key in graph) {","        compacted[key] = graph[key];","      }","    }","","    callback(null, compacted, activeCtx);","  }","};","","/**"," * Performs JSON-LD expansion."," *"," * @param input the JSON-LD input to expand."," * @param [options] the options to use:"," *          [base] the base IRI to use."," *          [expandContext] a context to expand with."," *          [keepFreeFloatingNodes] true to keep free-floating nodes,"," *            false not to, defaults to false."," *          [documentLoader(url, callback(err, remoteDoc))] the document loader."," * @param callback(err, expanded) called once the operation completes."," */","jsonld.expand = function(input, options, callback) {","  if(arguments.length < 1) {","    return jsonld.nextTick(function() {","      callback(new TypeError('Could not expand, too few arguments.'));","    });","  }","","  // get arguments","  if(typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","","  // set default options","  if(!('documentLoader' in options)) {","    options.documentLoader = jsonld.loadDocument;","  }","  if(!('keepFreeFloatingNodes' in options)) {","    options.keepFreeFloatingNodes = false;","  }","","  jsonld.nextTick(function() {","    // if input is a string, attempt to dereference remote document","    if(typeof input === 'string') {","      var done = function(err, remoteDoc) {","        if(err) {","          return callback(err);","        }","        try {","          if(!remoteDoc.document) {","            throw new JsonLdError(","              'No remote document found at the given URL.',","              'jsonld.NullRemoteDocument');","          }","          if(typeof remoteDoc.document === 'string') {","            remoteDoc.document = JSON.parse(remoteDoc.document);","          }","        } catch(ex) {","          return callback(new JsonLdError(","            'Could not retrieve a JSON-LD document from the URL. URL ' +","            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {","              code: 'loading document failed',","              cause: ex,","              remoteDoc: remoteDoc","          }));","        }","        expand(remoteDoc);","      };","      var promise = options.documentLoader(input, done);","      if(promise && 'then' in promise) {","        promise.then(done.bind(null, null), done);","      }","      return;","    }","    // nothing to load","    expand({contextUrl: null, documentUrl: null, document: input});","  });","","  function expand(remoteDoc) {","    // set default base","    if(!('base' in options)) {","      options.base = remoteDoc.documentUrl || '';","    }","    // build meta-object and retrieve all @context URLs","    var input = {","      document: _clone(remoteDoc.document),","      remoteContext: {'@context': remoteDoc.contextUrl}","    };","    if('expandContext' in options) {","      var expandContext = _clone(options.expandContext);","      if(typeof expandContext === 'object' && '@context' in expandContext) {","        input.expandContext = expandContext;","      } else {","        input.expandContext = {'@context': expandContext};","      }","    }","    _retrieveContextUrls(input, options, function(err, input) {","      if(err) {","        return callback(err);","      }","","      var expanded;","      try {","        var processor = new Processor();","        var activeCtx = _getInitialContext(options);","        var document = input.document;","        var remoteContext = input.remoteContext['@context'];","","        // process optional expandContext","        if(input.expandContext) {","          activeCtx = processor.processContext(","            activeCtx, input.expandContext['@context'], options);","        }","","        // process remote context from HTTP Link Header","        if(remoteContext) {","          activeCtx = processor.processContext(","            activeCtx, remoteContext, options);","        }","","        // expand document","        expanded = processor.expand(","          activeCtx, null, document, options, false);","","        // optimize away @graph with no other properties","        if(_isObject(expanded) && ('@graph' in expanded) &&","          Object.keys(expanded).length === 1) {","          expanded = expanded['@graph'];","        } else if(expanded === null) {","          expanded = [];","        }","","        // normalize to an array","        if(!_isArray(expanded)) {","          expanded = [expanded];","        }","      } catch(ex) {","        return callback(ex);","      }","      callback(null, expanded);","    });","  }","};","","/**"," * Performs JSON-LD flattening."," *"," * @param input the JSON-LD to flatten."," * @param ctx the context to use to compact the flattened output, or null."," * @param [options] the options to use:"," *          [base] the base IRI to use."," *          [expandContext] a context to expand with."," *          [documentLoader(url, callback(err, remoteDoc))] the document loader."," * @param callback(err, flattened) called once the operation completes."," */","jsonld.flatten = function(input, ctx, options, callback) {","  if(arguments.length < 1) {","    return jsonld.nextTick(function() {","      callback(new TypeError('Could not flatten, too few arguments.'));","    });","  }","","  // get arguments","  if(typeof options === 'function') {","    callback = options;","    options = {};","  } else if(typeof ctx === 'function') {","    callback = ctx;","    ctx = null;","    options = {};","  }","  options = options || {};","","  // set default options","  if(!('base' in options)) {","    options.base = (typeof input === 'string') ? input : '';","  }","  if(!('documentLoader' in options)) {","    options.documentLoader = jsonld.loadDocument;","  }","","  // expand input","  jsonld.expand(input, options, function(err, _input) {","    if(err) {","      return callback(new JsonLdError(","        'Could not expand input before flattening.',","        'jsonld.FlattenError', {cause: err}));","    }","","    var flattened;","    try {","      // do flattening","      flattened = new Processor().flatten(_input);","    } catch(ex) {","      return callback(ex);","    }","","    if(ctx === null) {","      return callback(null, flattened);","    }","","    // compact result (force @graph option to true, skip expansion)","    options.graph = true;","    options.skipExpansion = true;","    jsonld.compact(flattened, ctx, options, function(err, compacted) {","      if(err) {","        return callback(new JsonLdError(","          'Could not compact flattened output.',","          'jsonld.FlattenError', {cause: err}));","      }","      callback(null, compacted);","    });","  });","};","","/**"," * Performs JSON-LD framing."," *"," * @param input the JSON-LD input to frame."," * @param frame the JSON-LD frame to use."," * @param [options] the framing options."," *          [base] the base IRI to use."," *          [expandContext] a context to expand with."," *          [embed] default @embed flag: '@last', '@always', '@never', '@link'"," *            (default: '@last')."," *          [explicit] default @explicit flag (default: false)."," *          [requireAll] default @requireAll flag (default: true)."," *          [omitDefault] default @omitDefault flag (default: false)."," *          [documentLoader(url, callback(err, remoteDoc))] the document loader."," * @param callback(err, framed) called once the operation completes."," */","jsonld.frame = function(input, frame, options, callback) {","  if(arguments.length < 2) {","    return jsonld.nextTick(function() {","      callback(new TypeError('Could not frame, too few arguments.'));","    });","  }","","  // get arguments","  if(typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","","  // set default options","  if(!('base' in options)) {","    options.base = (typeof input === 'string') ? input : '';","  }","  if(!('documentLoader' in options)) {","    options.documentLoader = jsonld.loadDocument;","  }","  if(!('embed' in options)) {","    options.embed = '@last';","  }","  options.explicit = options.explicit || false;","  if(!('requireAll' in options)) {","    options.requireAll = true;","  }","  options.omitDefault = options.omitDefault || false;","","  jsonld.nextTick(function() {","    // if frame is a string, attempt to dereference remote document","    if(typeof frame === 'string') {","      var done = function(err, remoteDoc) {","        if(err) {","          return callback(err);","        }","        try {","          if(!remoteDoc.document) {","            throw new JsonLdError(","              'No remote document found at the given URL.',","              'jsonld.NullRemoteDocument');","          }","          if(typeof remoteDoc.document === 'string') {","            remoteDoc.document = JSON.parse(remoteDoc.document);","          }","        } catch(ex) {","          return callback(new JsonLdError(","            'Could not retrieve a JSON-LD document from the URL. URL ' +","            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {","              code: 'loading document failed',","              cause: ex,","              remoteDoc: remoteDoc","          }));","        }","        doFrame(remoteDoc);","      };","      var promise = options.documentLoader(frame, done);","      if(promise && 'then' in promise) {","        promise.then(done.bind(null, null), done);","      }","      return;","    }","    // nothing to load","    doFrame({contextUrl: null, documentUrl: null, document: frame});","  });","","  function doFrame(remoteFrame) {","    // preserve frame context and add any Link header context","    var frame = remoteFrame.document;","    var ctx;","    if(frame) {","      ctx = frame['@context'];","      if(remoteFrame.contextUrl) {","        if(!ctx) {","          ctx = remoteFrame.contextUrl;","        } else if(_isArray(ctx)) {","          ctx.push(remoteFrame.contextUrl);","        } else {","          ctx = [ctx, remoteFrame.contextUrl];","        }","        frame['@context'] = ctx;","      } else {","        ctx = ctx || {};","      }","    } else {","      ctx = {};","    }","","    // expand input","    jsonld.expand(input, options, function(err, expanded) {","      if(err) {","        return callback(new JsonLdError(","          'Could not expand input before framing.',","          'jsonld.FrameError', {cause: err}));","      }","","      // expand frame","      var opts = _clone(options);","      opts.isFrame = true;","      opts.keepFreeFloatingNodes = true;","      jsonld.expand(frame, opts, function(err, expandedFrame) {","        if(err) {","          return callback(new JsonLdError(","            'Could not expand frame before framing.',","            'jsonld.FrameError', {cause: err}));","        }","","        var framed;","        try {","          // do framing","          framed = new Processor().frame(expanded, expandedFrame, opts);","        } catch(ex) {","          return callback(ex);","        }","","        // compact result (force @graph option to true, skip expansion,","        // check for linked embeds)","        opts.graph = true;","        opts.skipExpansion = true;","        opts.link = {};","        jsonld.compact(framed, ctx, opts, function(err, compacted, ctx) {","          if(err) {","            return callback(new JsonLdError(","              'Could not compact framed output.',","              'jsonld.FrameError', {cause: err}));","          }","          // get graph alias","          var graph = _compactIri(ctx, '@graph');","          // remove @preserve from results","          opts.link = {};","          compacted[graph] = _removePreserve(ctx, compacted[graph], opts);","          callback(null, compacted);","        });","      });","    });","  }","};","","/**"," * **Experimental**"," *"," * Links a JSON-LD document's nodes in memory."," *"," * @param input the JSON-LD document to link."," * @param ctx the JSON-LD context to apply."," * @param [options] the options to use:"," *          [base] the base IRI to use."," *          [expandContext] a context to expand with."," *          [documentLoader(url, callback(err, remoteDoc))] the document loader."," * @param callback(err, linked) called once the operation completes."," */","jsonld.link = function(input, ctx, options, callback) {","  // API matches running frame with a wildcard frame and embed: '@link'","  // get arguments","  var frame = {};","  if(ctx) {","    frame['@context'] = ctx;","  }","  frame['@embed'] = '@link';","  jsonld.frame(input, frame, options, callback);","};","","/**"," * **Deprecated**"," *"," * Performs JSON-LD objectification."," *"," * @param input the JSON-LD document to objectify."," * @param ctx the JSON-LD context to apply."," * @param [options] the options to use:"," *          [base] the base IRI to use."," *          [expandContext] a context to expand with."," *          [documentLoader(url, callback(err, remoteDoc))] the document loader."," * @param callback(err, linked) called once the operation completes."," */","jsonld.objectify = function(input, ctx, options, callback) {","  if(typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","","  // set default options","  if(!('base' in options)) {","    options.base = (typeof input === 'string') ? input : '';","  }","  if(!('documentLoader' in options)) {","    options.documentLoader = jsonld.loadDocument;","  }","","  // expand input","  jsonld.expand(input, options, function(err, _input) {","    if(err) {","      return callback(new JsonLdError(","        'Could not expand input before linking.',","        'jsonld.LinkError', {cause: err}));","    }","","    var flattened;","    try {","      // flatten the graph","      flattened = new Processor().flatten(_input);","    } catch(ex) {","      return callback(ex);","    }","","    // compact result (force @graph option to true, skip expansion)","    options.graph = true;","    options.skipExpansion = true;","    jsonld.compact(flattened, ctx, options, function(err, compacted, ctx) {","      if(err) {","        return callback(new JsonLdError(","          'Could not compact flattened output before linking.',","          'jsonld.LinkError', {cause: err}));","      }","      // get graph alias","      var graph = _compactIri(ctx, '@graph');","      var top = compacted[graph][0];","","      var recurse = function(subject) {","        // can't replace just a string","        if(!_isObject(subject) && !_isArray(subject)) {","          return;","        }","","        // bottom out recursion on re-visit","        if(_isObject(subject)) {","          if(recurse.visited[subject['@id']]) {","            return;","          }","          recurse.visited[subject['@id']] = true;","        }","","        // each array element *or* object key","        for(var k in subject) {","          var obj = subject[k];","          var isid = (jsonld.getContextValue(ctx, k, '@type') === '@id');","","          // can't replace a non-object or non-array unless it's an @id","          if(!_isArray(obj) && !_isObject(obj) && !isid) {","            continue;","          }","","          if(_isString(obj) && isid) {","            subject[k] = obj = top[obj];","            recurse(obj);","          } else if(_isArray(obj)) {","            for(var i = 0; i < obj.length; ++i) {","              if(_isString(obj[i]) && isid) {","                obj[i] = top[obj[i]];","              } else if(_isObject(obj[i]) && '@id' in obj[i]) {","                obj[i] = top[obj[i]['@id']];","              }","              recurse(obj[i]);","            }","          } else if(_isObject(obj)) {","            var sid = obj['@id'];","            subject[k] = obj = top[sid];","            recurse(obj);","          }","        }","      };","      recurse.visited = {};","      recurse(top);","","      compacted.of_type = {};","      for(var s in top) {","        if(!('@type' in top[s])) {","          continue;","        }","        var types = top[s]['@type'];","        if(!_isArray(types)) {","          types = [types];","        }","        for(var t = 0; t < types.length; ++t) {","          if(!(types[t] in compacted.of_type)) {","            compacted.of_type[types[t]] = [];","          }","          compacted.of_type[types[t]].push(top[s]);","        }","      }","      callback(null, compacted);","    });","  });","};","","/**"," * Performs RDF dataset normalization on the given input. The input is JSON-LD"," * unless the 'inputFormat' option is used. The output is an RDF dataset"," * unless the 'format' option is used."," *"," * @param input the input to normalize as JSON-LD or as a format specified by"," *          the 'inputFormat' option."," * @param [options] the options to use:"," *          [algorithm] the normalization algorithm to use, `URDNA2015` or"," *            `URGNA2012` (default: `URGNA2012`)."," *          [base] the base IRI to use."," *          [expandContext] a context to expand with."," *          [inputFormat] the format if input is not JSON-LD:"," *            'application/nquads' for N-Quads."," *          [format] the format if output is a string:"," *            'application/nquads' for N-Quads."," *          [documentLoader(url, callback(err, remoteDoc))] the document loader."," * @param callback(err, normalized) called once the operation completes."," */","jsonld.normalize = function(input, options, callback) {","  if(arguments.length < 1) {","    return jsonld.nextTick(function() {","      callback(new TypeError('Could not normalize, too few arguments.'));","    });","  }","","  // get arguments","  if(typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","","  // set default options","  if(!('algorithm' in options)) {","    options.algorithm = 'URGNA2012';","  }","  if(!('base' in options)) {","    options.base = (typeof input === 'string') ? input : '';","  }","  if(!('documentLoader' in options)) {","    options.documentLoader = jsonld.loadDocument;","  }","","  if('inputFormat' in options) {","    if(options.inputFormat !== 'application/nquads') {","      return callback(new JsonLdError(","        'Unknown normalization input format.',","        'jsonld.NormalizeError'));","    }","    var parsedInput = _parseNQuads(input);","    // do normalization","    new Processor().normalize(parsedInput, options, callback);","  } else {","    // convert to RDF dataset then do normalization","    var opts = _clone(options);","    delete opts.format;","    opts.produceGeneralizedRdf = false;","    jsonld.toRDF(input, opts, function(err, dataset) {","      if(err) {","        return callback(new JsonLdError(","          'Could not convert input to RDF dataset before normalization.',","          'jsonld.NormalizeError', {cause: err}));","      }","      // do normalization","      new Processor().normalize(dataset, options, callback);","    });","  }","};","","/**"," * Converts an RDF dataset to JSON-LD."," *"," * @param dataset a serialized string of RDF in a format specified by the"," *          format option or an RDF dataset to convert."," * @param [options] the options to use:"," *          [format] the format if dataset param must first be parsed:"," *            'application/nquads' for N-Quads (default)."," *          [rdfParser] a custom RDF-parser to use to parse the dataset."," *          [useRdfType] true to use rdf:type, false to use @type"," *            (default: false)."," *          [useNativeTypes] true to convert XSD types into native types"," *            (boolean, integer, double), false not to (default: false)."," * @param callback(err, output) called once the operation completes."," */","jsonld.fromRDF = function(dataset, options, callback) {","  if(arguments.length < 1) {","    return jsonld.nextTick(function() {","      callback(new TypeError('Could not convert from RDF, too few arguments.'));","    });","  }","","  // get arguments","  if(typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","","  // set default options","  if(!('useRdfType' in options)) {","    options.useRdfType = false;","  }","  if(!('useNativeTypes' in options)) {","    options.useNativeTypes = false;","  }","","  if(!('format' in options) && _isString(dataset)) {","    // set default format to nquads","    if(!('format' in options)) {","      options.format = 'application/nquads';","    }","  }","","  jsonld.nextTick(function() {","    // handle special format","    var rdfParser;","    if(options.format) {","      // check supported formats","      rdfParser = options.rdfParser || _rdfParsers[options.format];","      if(!rdfParser) {","        return callback(new JsonLdError(","          'Unknown input format.',","          'jsonld.UnknownFormat', {format: options.format}));","      }","    } else {","      // no-op parser, assume dataset already parsed","      rdfParser = function() {","        return dataset;","      };","    }","","    var callbackCalled = false;","    try {","      // rdf parser may be async or sync, always pass callback","      dataset = rdfParser(dataset, function(err, dataset) {","        callbackCalled = true;","        if(err) {","          return callback(err);","        }","        fromRDF(dataset, options, callback);","      });","    } catch(e) {","      if(!callbackCalled) {","        return callback(e);","      }","      throw e;","    }","    // handle synchronous or promise-based parser","    if(dataset) {","      // if dataset is actually a promise","      if('then' in dataset) {","        return dataset.then(function(dataset) {","          fromRDF(dataset, options, callback);","        }, callback);","      }","      // parser is synchronous","      fromRDF(dataset, options, callback);","    }","","    function fromRDF(dataset, options, callback) {","      // convert from RDF","      new Processor().fromRDF(dataset, options, callback);","    }","  });","};","","/**"," * Outputs the RDF dataset found in the given JSON-LD object."," *"," * @param input the JSON-LD input."," * @param [options] the options to use:"," *          [base] the base IRI to use."," *          [expandContext] a context to expand with."," *          [format] the format to use to output a string:"," *            'application/nquads' for N-Quads."," *          [produceGeneralizedRdf] true to output generalized RDF, false"," *            to produce only standard RDF (default: false)."," *          [documentLoader(url, callback(err, remoteDoc))] the document loader."," * @param callback(err, dataset) called once the operation completes."," */","jsonld.toRDF = function(input, options, callback) {","  if(arguments.length < 1) {","    return jsonld.nextTick(function() {","      callback(new TypeError('Could not convert to RDF, too few arguments.'));","    });","  }","","  // get arguments","  if(typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","","  // set default options","  if(!('base' in options)) {","    options.base = (typeof input === 'string') ? input : '';","  }","  if(!('documentLoader' in options)) {","    options.documentLoader = jsonld.loadDocument;","  }","","  // expand input","  jsonld.expand(input, options, function(err, expanded) {","    if(err) {","      return callback(new JsonLdError(","        'Could not expand input before serialization to RDF.',","        'jsonld.RdfError', {cause: err}));","    }","","    var dataset;","    try {","      // output RDF dataset","      dataset = Processor.prototype.toRDF(expanded, options);","      if(options.format) {","        if(options.format === 'application/nquads') {","          return callback(null, _toNQuads(dataset));","        }","        throw new JsonLdError(","          'Unknown output format.',","          'jsonld.UnknownFormat', {format: options.format});","      }","    } catch(ex) {","      return callback(ex);","    }","    callback(null, dataset);","  });","};","","/**"," * **Experimental**"," *"," * Recursively flattens the nodes in the given JSON-LD input into a map of"," * node ID => node."," *"," * @param input the JSON-LD input."," * @param [options] the options to use:"," *          [base] the base IRI to use."," *          [expandContext] a context to expand with."," *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes."," *          [namer] (deprecated)"," *          [documentLoader(url, callback(err, remoteDoc))] the document loader."," * @param callback(err, nodeMap) called once the operation completes."," */","jsonld.createNodeMap = function(input, options, callback) {","  if(arguments.length < 1) {","    return jsonld.nextTick(function() {","      callback(new TypeError('Could not create node map, too few arguments.'));","    });","  }","","  // get arguments","  if(typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","","  // set default options","  if(!('base' in options)) {","    options.base = (typeof input === 'string') ? input : '';","  }","  if(!('documentLoader' in options)) {","    options.documentLoader = jsonld.loadDocument;","  }","","  // expand input","  jsonld.expand(input, options, function(err, _input) {","    if(err) {","      return callback(new JsonLdError(","        'Could not expand input before creating node map.',","        'jsonld.CreateNodeMapError', {cause: err}));","    }","","    var nodeMap;","    try {","      nodeMap = new Processor().createNodeMap(_input, options);","    } catch(ex) {","      return callback(ex);","    }","","    callback(null, nodeMap);","  });","};","","/**"," * **Experimental**"," *"," * Merges two or more JSON-LD documents into a single flattened document."," *"," * @param docs the JSON-LD documents to merge together."," * @param ctx the context to use to compact the merged result, or null."," * @param [options] the options to use:"," *          [base] the base IRI to use."," *          [expandContext] a context to expand with."," *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes."," *          [namer] (deprecated)."," *          [mergeNodes] true to merge properties for nodes with the same ID,"," *            false to ignore new properties for nodes with the same ID once"," *            the ID has been defined; note that this may not prevent merging"," *            new properties where a node is in the `object` position"," *            (default: true)."," *          [documentLoader(url, callback(err, remoteDoc))] the document loader."," * @param callback(err, merged) called once the operation completes."," */","jsonld.merge = function(docs, ctx, options, callback) {","  if(arguments.length < 1) {","    return jsonld.nextTick(function() {","      callback(new TypeError('Could not merge, too few arguments.'));","    });","  }","  if(!_isArray(docs)) {","    return jsonld.nextTick(function() {","      callback(new TypeError('Could not merge, \"docs\" must be an array.'));","    });","  }","","  // get arguments","  if(typeof options === 'function') {","    callback = options;","    options = {};","  } else if(typeof ctx === 'function') {","    callback = ctx;","    ctx = null;","    options = {};","  }","  options = options || {};","","  // expand all documents","  var expanded = [];","  var error = null;","  var count = docs.length;","  for(var i = 0; i < docs.length; ++i) {","    var opts = {};","    for(var key in options) {","      opts[key] = options[key];","    }","    jsonld.expand(docs[i], opts, expandComplete);","  }","","  function expandComplete(err, _input) {","    if(error) {","      return;","    }","    if(err) {","      error = err;","      return callback(new JsonLdError(","        'Could not expand input before flattening.',","        'jsonld.FlattenError', {cause: err}));","    }","    expanded.push(_input);","    if(--count === 0) {","      merge(expanded);","    }","  }","","  function merge(expanded) {","    var mergeNodes = true;","    if('mergeNodes' in options) {","      mergeNodes = options.mergeNodes;","    }","","    var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');","    var graphs = {'@default': {}};","","    var defaultGraph;","    try {","      for(var i = 0; i < expanded.length; ++i) {","        // uniquely relabel blank nodes","        var doc = expanded[i];","        doc = jsonld.relabelBlankNodes(doc, {","          issuer: new IdentifierIssuer('_:b' + i + '-')","        });","","        // add nodes to the shared node map graphs if merging nodes, to a","        // separate graph set if not","        var _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};","        _createNodeMap(doc, _graphs, '@default', issuer);","","        if(_graphs !== graphs) {","          // merge document graphs but don't merge existing nodes","          for(var graphName in _graphs) {","            var _nodeMap = _graphs[graphName];","            if(!(graphName in graphs)) {","              graphs[graphName] = _nodeMap;","              continue;","            }","            var nodeMap = graphs[graphName];","            for(var key in _nodeMap) {","              if(!(key in nodeMap)) {","                nodeMap[key] = _nodeMap[key];","              }","            }","          }","        }","      }","","      // add all non-default graphs to default graph","      defaultGraph = _mergeNodeMaps(graphs);","    } catch(ex) {","      return callback(ex);","    }","","    // produce flattened output","    var flattened = [];","    var keys = Object.keys(defaultGraph).sort();","    for(var ki = 0; ki < keys.length; ++ki) {","      var node = defaultGraph[keys[ki]];","      // only add full subjects to top-level","      if(!_isSubjectReference(node)) {","        flattened.push(node);","      }","    }","","    if(ctx === null) {","      return callback(null, flattened);","    }","","    // compact result (force @graph option to true, skip expansion)","    options.graph = true;","    options.skipExpansion = true;","    jsonld.compact(flattened, ctx, options, function(err, compacted) {","      if(err) {","        return callback(new JsonLdError(","          'Could not compact merged output.',","          'jsonld.MergeError', {cause: err}));","      }","      callback(null, compacted);","    });","  }","};","","/**"," * Relabels all blank nodes in the given JSON-LD input."," *"," * @param input the JSON-LD input."," * @param [options] the options to use:"," *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes."," *          [namer] (deprecated)."," */","jsonld.relabelBlankNodes = function(input, options) {","  options = options || {};","  var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');","  return _labelBlankNodes(issuer, input);","};","","/**"," * Prepends a base IRI to the given relative IRI."," *"," * @param base the base IRI."," * @param iri the relative IRI."," *"," * @return the absolute IRI."," */","jsonld.prependBase = function(base, iri) {","  return _prependBase(base, iri);","};","","/**"," * The default document loader for external documents. If the environment"," * is node.js, a callback-continuation-style document loader is used; otherwise,"," * a promises-style document loader is used."," *"," * @param url the URL to load."," * @param callback(err, remoteDoc) called once the operation completes,"," *          if using a non-promises API."," *"," * @return a promise, if using a promises API."," */","jsonld.documentLoader = function(url, callback) {","  var err = new JsonLdError(","    'Could not retrieve a JSON-LD document from the URL. URL ' +","    'dereferencing not implemented.', 'jsonld.LoadDocumentError',","    {code: 'loading document failed'});","  if(_nodejs) {","    return callback(err, {contextUrl: null, documentUrl: url, document: null});","  }","  return jsonld.promisify(function(callback) {","    callback(err);","  });","};","","/**"," * Deprecated default document loader. Use or override jsonld.documentLoader"," * instead."," */","jsonld.loadDocument = function(url, callback) {","  var promise = jsonld.documentLoader(url, callback);","  if(promise && 'then' in promise) {","    promise.then(callback.bind(null, null), callback);","  }","};","","/* Promises API */","","/**"," * Creates a new promises API object."," *"," * @param [options] the options to use:"," *          [api] an object to attach the API to."," *          [version] 'json-ld-1.0' to output a standard JSON-LD 1.0 promises"," *            API, 'jsonld.js' to output the same with augmented proprietary"," *            methods (default: 'jsonld.js')"," *"," * @return the promises API object."," */","jsonld.promises = function(options) {","  options = options || {};","  var slice = Array.prototype.slice;","  var promisify = jsonld.promisify;","","  // handle 'api' option as version, set defaults","  var api = options.api || {};","  var version = options.version || 'jsonld.js';","  if(typeof options.api === 'string') {","    if(!options.version) {","      version = options.api;","    }","    api = {};","  }","","  api.expand = function(input) {","    if(arguments.length < 1) {","      throw new TypeError('Could not expand, too few arguments.');","    }","    return promisify.apply(null, [jsonld.expand].concat(slice.call(arguments)));","  };","  api.compact = function(input, ctx) {","    if(arguments.length < 2) {","      throw new TypeError('Could not compact, too few arguments.');","    }","    var compact = function(input, ctx, options, callback) {","      // ensure only one value is returned in callback","      jsonld.compact(input, ctx, options, function(err, compacted) {","        callback(err, compacted);","      });","    };","    return promisify.apply(null, [compact].concat(slice.call(arguments)));","  };","  api.flatten = function(input) {","    if(arguments.length < 1) {","      throw new TypeError('Could not flatten, too few arguments.');","    }","    return promisify.apply(","      null, [jsonld.flatten].concat(slice.call(arguments)));","  };","  api.frame = function(input, frame) {","    if(arguments.length < 2) {","      throw new TypeError('Could not frame, too few arguments.');","    }","    return promisify.apply(null, [jsonld.frame].concat(slice.call(arguments)));","  };","  api.fromRDF = function(dataset) {","    if(arguments.length < 1) {","      throw new TypeError('Could not convert from RDF, too few arguments.');","    }","    return promisify.apply(","      null, [jsonld.fromRDF].concat(slice.call(arguments)));","  };","  api.toRDF = function(input) {","    if(arguments.length < 1) {","      throw new TypeError('Could not convert to RDF, too few arguments.');","    }","    return promisify.apply(null, [jsonld.toRDF].concat(slice.call(arguments)));","  };","  api.normalize = function(input) {","    if(arguments.length < 1) {","      throw new TypeError('Could not normalize, too few arguments.');","    }","    return promisify.apply(","      null, [jsonld.normalize].concat(slice.call(arguments)));","  };","","  if(version === 'jsonld.js') {","    api.link = function(input, ctx) {","      if(arguments.length < 2) {","        throw new TypeError('Could not link, too few arguments.');","      }","      return promisify.apply(","        null, [jsonld.link].concat(slice.call(arguments)));","    };","    api.objectify = function(input) {","      return promisify.apply(","        null, [jsonld.objectify].concat(slice.call(arguments)));","    };","    api.createNodeMap = function(input) {","      return promisify.apply(","        null, [jsonld.createNodeMap].concat(slice.call(arguments)));","    };","    api.merge = function(input) {","      return promisify.apply(","        null, [jsonld.merge].concat(slice.call(arguments)));","    };","  }","","  try {","    jsonld.Promise = global.Promise || require('es6-promise').Promise;","  } catch(e) {","    var f = function() {","      throw new Error('Unable to find a Promise implementation.');","    };","    for(var method in api) {","      api[method] = f;","    }","  }","","  return api;","};","","/**"," * Converts a node.js async op into a promise w/boxed resolved value(s)."," *"," * @param op the operation to convert."," *"," * @return the promise."," */","jsonld.promisify = function(op) {","  if(!jsonld.Promise) {","    try {","      jsonld.Promise = global.Promise || require('es6-promise').Promise;","    } catch(e) {","      throw new Error('Unable to find a Promise implementation.');","    }","  }","  var args = Array.prototype.slice.call(arguments, 1);","  return new jsonld.Promise(function(resolve, reject) {","    op.apply(null, args.concat(function(err, value) {","      if(!err) {","        resolve(value);","      } else {","        reject(err);","      }","    }));","  });","};","","// extend jsonld.promises w/jsonld.js methods","jsonld.promises({api: jsonld.promises});","","/* WebIDL API */","","function JsonLdProcessor() {}","JsonLdProcessor.prototype = jsonld.promises({version: 'json-ld-1.0'});","JsonLdProcessor.prototype.toString = function() {","  if(this instanceof JsonLdProcessor) {","    return '[object JsonLdProcessor]';","  }","  return '[object JsonLdProcessorPrototype]';","};","jsonld.JsonLdProcessor = JsonLdProcessor;","","// IE8 has Object.defineProperty but it only","// works on DOM nodes -- so feature detection","// requires try/catch :-(","var canDefineProperty = !!Object.defineProperty;","if(canDefineProperty) {","  try {","    Object.defineProperty({}, 'x', {});","  } catch(e) {","    canDefineProperty = false;","  }","}","","if(canDefineProperty) {","  Object.defineProperty(JsonLdProcessor, 'prototype', {","    writable: false,","    enumerable: false","  });","  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {","    writable: true,","    enumerable: false,","    configurable: true,","    value: JsonLdProcessor","  });","}","","// setup browser global JsonLdProcessor","if(_browser && typeof global.JsonLdProcessor === 'undefined') {","  if(canDefineProperty) {","    Object.defineProperty(global, 'JsonLdProcessor', {","      writable: true,","      enumerable: false,","      configurable: true,","      value: JsonLdProcessor","    });","  } else {","    global.JsonLdProcessor = JsonLdProcessor;","  }","}","","/* Utility API */","","// define setImmediate and nextTick","//// nextTick implementation with browser-compatible fallback ////","// from https://github.com/caolan/async/blob/master/lib/async.js","","// capture the global reference to guard against fakeTimer mocks","var _setImmediate = typeof setImmediate === 'function' && setImmediate;","","var _delay = _setImmediate ? function(fn) {","  // not a direct alias (for IE10 compatibility)","  _setImmediate(fn);","} : function(fn) {","  setTimeout(fn, 0);","};","","if(typeof process === 'object' && typeof process.nextTick === 'function') {","  jsonld.nextTick = process.nextTick;","} else {","  jsonld.nextTick = _delay;","}","jsonld.setImmediate = _setImmediate ? _delay : jsonld.nextTick;","","/**"," * Parses a link header. The results will be key'd by the value of \"rel\"."," *"," * Link: <http://json-ld.org/contexts/person.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""," *"," * Parses as: {"," *   'http://www.w3.org/ns/json-ld#context': {"," *     target: http://json-ld.org/contexts/person.jsonld,"," *     type: 'application/ld+json'"," *   }"," * }"," *"," * If there is more than one \"rel\" with the same IRI, then entries in the"," * resulting map for that \"rel\" will be arrays."," *"," * @param header the link header to parse."," */","jsonld.parseLinkHeader = function(header) {","  var rval = {};","  // split on unbracketed/unquoted commas","  var entries = header.match(/(?:<[^>]*?>|\"[^\"]*?\"|[^,])+/g);","  var rLinkHeader = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;","  for(var i = 0; i < entries.length; ++i) {","    var match = entries[i].match(rLinkHeader);","    if(!match) {","      continue;","    }","    var result = {target: match[1]};","    var params = match[2];","    var rParams = /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;","    while(match = rParams.exec(params)) {","      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];","    }","    var rel = result['rel'] || '';","    if(_isArray(rval[rel])) {","      rval[rel].push(result);","    } else if(rel in rval) {","      rval[rel] = [rval[rel], result];","    } else {","      rval[rel] = result;","    }","  }","  return rval;","};","","/**"," * Creates a simple queue for requesting documents."," */","jsonld.RequestQueue = function() {","  this._requests = {};","};","jsonld.RequestQueue.prototype.wrapLoader = function(loader) {","  this._loader = loader;","  this._usePromise = (loader.length === 1);","  return this.add.bind(this);","};","jsonld.RequestQueue.prototype.add = function(url, callback) {","  var self = this;","","  // callback must be given if not using promises","  if(!callback && !self._usePromise) {","    throw new Error('callback must be specified.');","  }","","  // Promise-based API","  if(self._usePromise) {","    return new jsonld.Promise(function(resolve, reject) {","      var load = self._requests[url];","      if(!load) {","        // load URL then remove from queue","        load = self._requests[url] = self._loader(url)","          .then(function(remoteDoc) {","            delete self._requests[url];","            return remoteDoc;","          }).catch(function(err) {","            delete self._requests[url];","            throw err;","          });","      }","      // resolve/reject promise once URL has been loaded","      load.then(function(remoteDoc) {","        resolve(remoteDoc);","      }).catch(function(err) {","        reject(err);","      });","    });","  }","","  // callback-based API","  if(url in self._requests) {","    self._requests[url].push(callback);","  } else {","    self._requests[url] = [callback];","    self._loader(url, function(err, remoteDoc) {","      var callbacks = self._requests[url];","      delete self._requests[url];","      for(var i = 0; i < callbacks.length; ++i) {","        callbacks[i](err, remoteDoc);","      }","    });","  }","};","","/**"," * Creates a simple document cache that retains documents for a short"," * period of time."," *"," * FIXME: Implement simple HTTP caching instead."," *"," * @param size the maximum size of the cache."," */","jsonld.DocumentCache = function(size) {","  this.order = [];","  this.cache = {};","  this.size = size || 50;","  this.expires = 30 * 1000;","};","jsonld.DocumentCache.prototype.get = function(url) {","  if(url in this.cache) {","    var entry = this.cache[url];","    if(entry.expires >= +new Date()) {","      return entry.ctx;","    }","    delete this.cache[url];","    this.order.splice(this.order.indexOf(url), 1);","  }","  return null;","};","jsonld.DocumentCache.prototype.set = function(url, ctx) {","  if(this.order.length === this.size) {","    delete this.cache[this.order.shift()];","  }","  this.order.push(url);","  this.cache[url] = {ctx: ctx, expires: (+new Date() + this.expires)};","};","","/**"," * Creates an active context cache."," *"," * @param size the maximum size of the cache."," */","jsonld.ActiveContextCache = function(size) {","  this.order = [];","  this.cache = {};","  this.size = size || 100;","};","jsonld.ActiveContextCache.prototype.get = function(activeCtx, localCtx) {","  var key1 = JSON.stringify(activeCtx);","  var key2 = JSON.stringify(localCtx);","  var level1 = this.cache[key1];","  if(level1 && key2 in level1) {","    return level1[key2];","  }","  return null;","};","jsonld.ActiveContextCache.prototype.set = function(","  activeCtx, localCtx, result) {","  if(this.order.length === this.size) {","    var entry = this.order.shift();","    delete this.cache[entry.activeCtx][entry.localCtx];","  }","  var key1 = JSON.stringify(activeCtx);","  var key2 = JSON.stringify(localCtx);","  this.order.push({activeCtx: key1, localCtx: key2});","  if(!(key1 in this.cache)) {","    this.cache[key1] = {};","  }","  this.cache[key1][key2] = _clone(result);","};","","/**"," * Default JSON-LD cache."," */","jsonld.cache = {","  activeCtx: new jsonld.ActiveContextCache()","};","","/**"," * Document loaders."," */","jsonld.documentLoaders = {};","","/**"," * Creates a built-in jquery document loader."," *"," * @param $ the jquery instance to use."," * @param options the options to use:"," *          secure: require all URLs to use HTTPS."," *          usePromise: true to use a promises API, false for a"," *            callback-continuation-style API; defaults to true if Promise"," *            is globally defined, false if not."," *"," * @return the jquery document loader."," */","jsonld.documentLoaders.jquery = function($, options) {","  options = options || {};","  var queue = new jsonld.RequestQueue();","","  // use option or, by default, use Promise when its defined","  var usePromise = ('usePromise' in options ?","    options.usePromise : (typeof Promise !== 'undefined'));","  if(usePromise) {","    return queue.wrapLoader(function(url) {","      return jsonld.promisify(loader, url);","    });","  }","  return queue.wrapLoader(loader);","","  function loader(url, callback) {","    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {","      return callback(new JsonLdError(","        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +","        'supported.',","        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),","        {contextUrl: null, documentUrl: url, document: null});","    }","    if(options.secure && url.indexOf('https') !== 0) {","      return callback(new JsonLdError(","        'URL could not be dereferenced; secure mode is enabled and ' +","        'the URL\\'s scheme is not \"https\".',","        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),","        {contextUrl: null, documentUrl: url, document: null});","    }","    $.ajax({","      url: url,","      accepts: {","        json: 'application/ld+json, application/json'","      },","      // ensure Accept header is very specific for JSON-LD/JSON","      headers: {","        'Accept': 'application/ld+json, application/json'","      },","      dataType: 'json',","      crossDomain: true,","      success: function(data, textStatus, jqXHR) {","        var doc = {contextUrl: null, documentUrl: url, document: data};","","        // handle Link Header","        var contentType = jqXHR.getResponseHeader('Content-Type');","        var linkHeader = jqXHR.getResponseHeader('Link');","        if(linkHeader && contentType !== 'application/ld+json') {","          // only 1 related link header permitted","          linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];","          if(_isArray(linkHeader)) {","            return callback(new JsonLdError(","              'URL could not be dereferenced, it has more than one ' +","              'associated HTTP Link Header.',","              'jsonld.InvalidUrl',","              {code: 'multiple context link headers', url: url}), doc);","          }","          if(linkHeader) {","            doc.contextUrl = linkHeader.target;","          }","        }","","        callback(null, doc);","      },","      error: function(jqXHR, textStatus, err) {","        callback(new JsonLdError(","          'URL could not be dereferenced, an error occurred.',","          'jsonld.LoadDocumentError',","          {code: 'loading document failed', url: url, cause: err}),","          {contextUrl: null, documentUrl: url, document: null});","      }","    });","  }","};","","/**"," * Creates a built-in node document loader."," *"," * @param options the options to use:"," *          secure: require all URLs to use HTTPS."," *          strictSSL: true to require SSL certificates to be valid,"," *            false not to (default: true)."," *          maxRedirects: the maximum number of redirects to permit, none by"," *            default."," *          request: the object which will make the request, default is"," *            provided by `https://www.npmjs.com/package/request`."," *          headers: an array of headers which will be passed as request"," *            headers for the requested document. Accept is not allowed."," *          usePromise: true to use a promises API, false for a"," *            callback-continuation-style API; false by default."," *"," * @return the node document loader."," */","jsonld.documentLoaders.node = function(options) {","  options = options || {};","  var strictSSL = ('strictSSL' in options) ? options.strictSSL : true;","  var maxRedirects = ('maxRedirects' in options) ? options.maxRedirects : -1;","  var request = ('request' in options) ? options.request : require('request');","  var acceptHeader = 'application/ld+json, application/json';","  var http = require('http');","  // TODO: disable cache until HTTP caching implemented","  //var cache = new jsonld.DocumentCache();","","  var queue = new jsonld.RequestQueue();","  if(options.usePromise) {","    return queue.wrapLoader(function(url) {","      return jsonld.promisify(loadDocument, url, []);","    });","  }","  var headers = options.headers || {};","  if('Accept' in headers || 'accept' in headers) {","    throw new RangeError(","      'Accept header may not be specified as an option; only \"' +","      acceptHeader + '\" is supported.');","  }","  return queue.wrapLoader(function(url, callback) {","    loadDocument(url, [], callback);","  });","","  function loadDocument(url, redirects, callback) {","    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {","      return callback(new JsonLdError(","        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +","        'supported.',","        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),","        {contextUrl: null, documentUrl: url, document: null});","    }","    if(options.secure && url.indexOf('https') !== 0) {","      return callback(new JsonLdError(","        'URL could not be dereferenced; secure mode is enabled and ' +","        'the URL\\'s scheme is not \"https\".',","        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),","        {contextUrl: null, documentUrl: url, document: null});","    }","    // TODO: disable cache until HTTP caching implemented","    var doc = null;//cache.get(url);","    if(doc !== null) {","      return callback(null, doc);","    }","    var headers = {'Accept': acceptHeader};","    for(var k in options.headers) { headers[k] = options.headers[k]; }","    request({","      url: url,","      headers: headers,","      strictSSL: strictSSL,","      followRedirect: false","    }, handleResponse);","","    function handleResponse(err, res, body) {","      doc = {contextUrl: null, documentUrl: url, document: body || null};","","      // handle error","      if(err) {","        return callback(new JsonLdError(","          'URL could not be dereferenced, an error occurred.',","          'jsonld.LoadDocumentError',","          {code: 'loading document failed', url: url, cause: err}), doc);","      }","      var statusText = http.STATUS_CODES[res.statusCode];","      if(res.statusCode >= 400) {","        return callback(new JsonLdError(","          'URL could not be dereferenced: ' + statusText,","          'jsonld.InvalidUrl', {","            code: 'loading document failed',","            url: url,","            httpStatusCode: res.statusCode","          }), doc);","      }","","      // handle Link Header","      if(res.headers.link &&","        res.headers['content-type'] !== 'application/ld+json') {","        // only 1 related link header permitted","        var linkHeader = jsonld.parseLinkHeader(","          res.headers.link)[LINK_HEADER_REL];","        if(_isArray(linkHeader)) {","          return callback(new JsonLdError(","            'URL could not be dereferenced, it has more than one associated ' +","            'HTTP Link Header.',","            'jsonld.InvalidUrl',","            {code: 'multiple context link headers', url: url}), doc);","        }","        if(linkHeader) {","          doc.contextUrl = linkHeader.target;","        }","      }","","      // handle redirect","      if(res.statusCode >= 300 && res.statusCode < 400 &&","        res.headers.location) {","        if(redirects.length === maxRedirects) {","          return callback(new JsonLdError(","            'URL could not be dereferenced; there were too many redirects.',","            'jsonld.TooManyRedirects', {","              code: 'loading document failed',","              url: url,","              httpStatusCode: res.statusCode,","              redirects: redirects","            }), doc);","        }","        if(redirects.indexOf(url) !== -1) {","          return callback(new JsonLdError(","            'URL could not be dereferenced; infinite redirection was detected.',","            'jsonld.InfiniteRedirectDetected', {","              code: 'recursive context inclusion',","              url: url,","              httpStatusCode: res.statusCode,","              redirects: redirects","            }), doc);","        }","        redirects.push(url);","        return loadDocument(res.headers.location, redirects, callback);","      }","      // cache for each redirected URL","      redirects.push(url);","      // TODO: disable cache until HTTP caching implemented","      /*for(var i = 0; i < redirects.length; ++i) {","        cache.set(","          redirects[i],","          {contextUrl: null, documentUrl: redirects[i], document: body});","      }*/","      callback(err, doc);","    }","  }","};","","/**"," * Creates a built-in XMLHttpRequest document loader."," *"," * @param options the options to use:"," *          secure: require all URLs to use HTTPS."," *          usePromise: true to use a promises API, false for a"," *            callback-continuation-style API; defaults to true if Promise"," *            is globally defined, false if not."," *          [xhr]: the XMLHttpRequest API to use."," *"," * @return the XMLHttpRequest document loader."," */","jsonld.documentLoaders.xhr = function(options) {","  options = options || {};","  var rlink = /(^|(\\r\\n))link:/i;","  var queue = new jsonld.RequestQueue();","","  // use option or, by default, use Promise when its defined","  var usePromise = ('usePromise' in options ?","    options.usePromise : (typeof Promise !== 'undefined'));","  if(usePromise) {","    return queue.wrapLoader(function(url) {","      return jsonld.promisify(loader, url);","    });","  }","  return queue.wrapLoader(loader);","","  function loader(url, callback) {","    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {","      return callback(new JsonLdError(","        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +","        'supported.',","        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),","        {contextUrl: null, documentUrl: url, document: null});","    }","    if(options.secure && url.indexOf('https') !== 0) {","      return callback(new JsonLdError(","        'URL could not be dereferenced; secure mode is enabled and ' +","        'the URL\\'s scheme is not \"https\".',","        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),","        {contextUrl: null, documentUrl: url, document: null});","    }","    var xhr = options.xhr || XMLHttpRequest;","    var req = new xhr();","    req.onload = function() {","      if(req.status >= 400) {","        return callback(new JsonLdError(","          'URL could not be dereferenced: ' + req.statusText,","          'jsonld.LoadDocumentError', {","            code: 'loading document failed',","            url: url,","            httpStatusCode: req.status","          }), {contextUrl: null, documentUrl: url, document: null});","      }","","      var doc = {contextUrl: null, documentUrl: url, document: req.response};","","      // handle Link Header (avoid unsafe header warning by existence testing)","      var contentType = req.getResponseHeader('Content-Type');","      var linkHeader;","      if(rlink.test(req.getAllResponseHeaders())) {","        linkHeader = req.getResponseHeader('Link');","      }","      if(linkHeader && contentType !== 'application/ld+json') {","        // only 1 related link header permitted","        linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];","        if(_isArray(linkHeader)) {","          return callback(new JsonLdError(","            'URL could not be dereferenced, it has more than one ' +","            'associated HTTP Link Header.',","            'jsonld.InvalidUrl',","            {code: 'multiple context link headers', url: url}), doc);","        }","        if(linkHeader) {","          doc.contextUrl = linkHeader.target;","        }","      }","","      callback(null, doc);","    };","    req.onerror = function() {","      callback(new JsonLdError(","        'URL could not be dereferenced, an error occurred.',","        'jsonld.LoadDocumentError',","        {code: 'loading document failed', url: url}),","        {contextUrl: null, documentUrl: url, document: null});","    };","    req.open('GET', url, true);","    req.setRequestHeader('Accept', 'application/ld+json, application/json');","    req.send();","  }","};","","/**"," * Assigns the default document loader for external document URLs to a built-in"," * default. Supported types currently include: 'jquery' and 'node'."," *"," * To use the jquery document loader, the first parameter must be a reference"," * to the main jquery object."," *"," * @param type the type to set."," * @param [params] the parameters required to use the document loader."," */","jsonld.useDocumentLoader = function(type) {","  if(!(type in jsonld.documentLoaders)) {","    throw new JsonLdError(","      'Unknown document loader type: \"' + type + '\"',","      'jsonld.UnknownDocumentLoader',","      {type: type});","  }","","  // set document loader","  jsonld.documentLoader = jsonld.documentLoaders[type].apply(","    jsonld, Array.prototype.slice.call(arguments, 1));","};","","/**"," * Processes a local context, resolving any URLs as necessary, and returns a"," * new active context in its callback."," *"," * @param activeCtx the current active context."," * @param localCtx the local context to process."," * @param [options] the options to use:"," *          [documentLoader(url, callback(err, remoteDoc))] the document loader."," * @param callback(err, ctx) called once the operation completes."," */","jsonld.processContext = function(activeCtx, localCtx) {","  // get arguments","  var options = {};","  var callbackArg = 2;","  if(arguments.length > 3) {","    options = arguments[2] || {};","    callbackArg += 1;","  }","  var callback = arguments[callbackArg];","","  // set default options","  if(!('base' in options)) {","    options.base = '';","  }","  if(!('documentLoader' in options)) {","    options.documentLoader = jsonld.loadDocument;","  }","","  // return initial context early for null context","  if(localCtx === null) {","    return callback(null, _getInitialContext(options));","  }","","  // retrieve URLs in localCtx","  localCtx = _clone(localCtx);","  if(!(_isObject(localCtx) && '@context' in localCtx)) {","    localCtx = {'@context': localCtx};","  }","  _retrieveContextUrls(localCtx, options, function(err, ctx) {","    if(err) {","      return callback(err);","    }","    try {","      // process context","      ctx = new Processor().processContext(activeCtx, ctx, options);","    } catch(ex) {","      return callback(ex);","    }","    callback(null, ctx);","  });","};","","/**"," * Returns true if the given subject has the given property."," *"," * @param subject the subject to check."," * @param property the property to look for."," *"," * @return true if the subject has the given property, false if not."," */","jsonld.hasProperty = function(subject, property) {","  var rval = false;","  if(property in subject) {","    var value = subject[property];","    rval = (!_isArray(value) || value.length > 0);","  }","  return rval;","};","","/**"," * Determines if the given value is a property of the given subject."," *"," * @param subject the subject to check."," * @param property the property to check."," * @param value the value to check."," *"," * @return true if the value exists, false if not."," */","jsonld.hasValue = function(subject, property, value) {","  var rval = false;","  if(jsonld.hasProperty(subject, property)) {","    var val = subject[property];","    var isList = _isList(val);","    if(_isArray(val) || isList) {","      if(isList) {","        val = val['@list'];","      }","      for(var i = 0; i < val.length; ++i) {","        if(jsonld.compareValues(value, val[i])) {","          rval = true;","          break;","        }","      }","    } else if(!_isArray(value)) {","      // avoid matching the set of values with an array value parameter","      rval = jsonld.compareValues(value, val);","    }","  }","  return rval;","};","","/**"," * Adds a value to a subject. If the value is an array, all values in the"," * array will be added."," *"," * @param subject the subject to add the value to."," * @param property the property that relates the value to the subject."," * @param value the value to add."," * @param [options] the options to use:"," *        [propertyIsArray] true if the property is always an array, false"," *          if not (default: false)."," *        [allowDuplicate] true to allow duplicates, false not to (uses a"," *          simple shallow comparison of subject ID or value) (default: true)."," */","jsonld.addValue = function(subject, property, value, options) {","  options = options || {};","  if(!('propertyIsArray' in options)) {","    options.propertyIsArray = false;","  }","  if(!('allowDuplicate' in options)) {","    options.allowDuplicate = true;","  }","","  if(_isArray(value)) {","    if(value.length === 0 && options.propertyIsArray &&","      !(property in subject)) {","      subject[property] = [];","    }","    for(var i = 0; i < value.length; ++i) {","      jsonld.addValue(subject, property, value[i], options);","    }","  } else if(property in subject) {","    // check if subject already has value if duplicates not allowed","    var hasValue = (!options.allowDuplicate &&","      jsonld.hasValue(subject, property, value));","","    // make property an array if value not present or always an array","    if(!_isArray(subject[property]) &&","      (!hasValue || options.propertyIsArray)) {","      subject[property] = [subject[property]];","    }","","    // add new value","    if(!hasValue) {","      subject[property].push(value);","    }","  } else {","    // add new value as set or single value","    subject[property] = options.propertyIsArray ? [value] : value;","  }","};","","/**"," * Gets all of the values for a subject's property as an array."," *"," * @param subject the subject."," * @param property the property."," *"," * @return all of the values for a subject's property as an array."," */","jsonld.getValues = function(subject, property) {","  var rval = subject[property] || [];","  if(!_isArray(rval)) {","    rval = [rval];","  }","  return rval;","};","","/**"," * Removes a property from a subject."," *"," * @param subject the subject."," * @param property the property."," */","jsonld.removeProperty = function(subject, property) {","  delete subject[property];","};","","/**"," * Removes a value from a subject."," *"," * @param subject the subject."," * @param property the property that relates the value to the subject."," * @param value the value to remove."," * @param [options] the options to use:"," *          [propertyIsArray] true if the property is always an array, false"," *            if not (default: false)."," */","jsonld.removeValue = function(subject, property, value, options) {","  options = options || {};","  if(!('propertyIsArray' in options)) {","    options.propertyIsArray = false;","  }","","  // filter out value","  var values = jsonld.getValues(subject, property).filter(function(e) {","    return !jsonld.compareValues(e, value);","  });","","  if(values.length === 0) {","    jsonld.removeProperty(subject, property);","  } else if(values.length === 1 && !options.propertyIsArray) {","    subject[property] = values[0];","  } else {","    subject[property] = values;","  }","};","","/**"," * Compares two JSON-LD values for equality. Two JSON-LD values will be"," * considered equal if:"," *"," * 1. They are both primitives of the same type and value."," * 2. They are both @values with the same @value, @type, @language,"," *   and @index, OR"," * 3. They both have @ids they are the same."," *"," * @param v1 the first value."," * @param v2 the second value."," *"," * @return true if v1 and v2 are considered equal, false if not."," */","jsonld.compareValues = function(v1, v2) {","  // 1. equal primitives","  if(v1 === v2) {","    return true;","  }","","  // 2. equal @values","  if(_isValue(v1) && _isValue(v2) &&","    v1['@value'] === v2['@value'] &&","    v1['@type'] === v2['@type'] &&","    v1['@language'] === v2['@language'] &&","    v1['@index'] === v2['@index']) {","    return true;","  }","","  // 3. equal @ids","  if(_isObject(v1) && ('@id' in v1) && _isObject(v2) && ('@id' in v2)) {","    return v1['@id'] === v2['@id'];","  }","","  return false;","};","","/**"," * Gets the value for the given active context key and type, null if none is"," * set."," *"," * @param ctx the active context."," * @param key the context key."," * @param [type] the type of value to get (eg: '@id', '@type'), if not"," *          specified gets the entire entry for a key, null if not found."," *"," * @return the value."," */","jsonld.getContextValue = function(ctx, key, type) {","  var rval = null;","","  // return null for invalid key","  if(key === null) {","    return rval;","  }","","  // get default language","  if(type === '@language' && (type in ctx)) {","    rval = ctx[type];","  }","","  // get specific entry information","  if(ctx.mappings[key]) {","    var entry = ctx.mappings[key];","","    if(_isUndefined(type)) {","      // return whole entry","      rval = entry;","    } else if(type in entry) {","      // return entry value for type","      rval = entry[type];","    }","  }","","  return rval;","};","","/** Registered RDF dataset parsers hashed by content-type. */","var _rdfParsers = {};","","/**"," * Registers an RDF dataset parser by content-type, for use with"," * jsonld.fromRDF. An RDF dataset parser will always be given two parameters,"," * a string of input and a callback. An RDF dataset parser can be synchronous"," * or asynchronous."," *"," * If the parser function returns undefined or null then it will be assumed to"," * be asynchronous w/a continuation-passing style and the callback parameter"," * given to the parser MUST be invoked."," *"," * If it returns a Promise, then it will be assumed to be asynchronous, but the"," * callback parameter MUST NOT be invoked. It should instead be ignored."," *"," * If it returns an RDF dataset, it will be assumed to be synchronous and the"," * callback parameter MUST NOT be invoked. It should instead be ignored."," *"," * @param contentType the content-type for the parser."," * @param parser(input, callback(err, dataset)) the parser function (takes a"," *          string as a parameter and either returns null/undefined and uses"," *          the given callback, returns a Promise, or returns an RDF dataset)."," */","jsonld.registerRDFParser = function(contentType, parser) {","  _rdfParsers[contentType] = parser;","};","","/**"," * Unregisters an RDF dataset parser by content-type."," *"," * @param contentType the content-type for the parser."," */","jsonld.unregisterRDFParser = function(contentType) {","  delete _rdfParsers[contentType];","};","","if(_nodejs) {","  // needed for serialization of XML literals","  if(typeof XMLSerializer === 'undefined') {","    var XMLSerializer = null;","  }","  if(typeof Node === 'undefined') {","    var Node = {","      ELEMENT_NODE: 1,","      ATTRIBUTE_NODE: 2,","      TEXT_NODE: 3,","      CDATA_SECTION_NODE: 4,","      ENTITY_REFERENCE_NODE: 5,","      ENTITY_NODE: 6,","      PROCESSING_INSTRUCTION_NODE: 7,","      COMMENT_NODE: 8,","      DOCUMENT_NODE: 9,","      DOCUMENT_TYPE_NODE: 10,","      DOCUMENT_FRAGMENT_NODE: 11,","      NOTATION_NODE:12","    };","  }","}","","// constants","var XSD_BOOLEAN = 'http://www.w3.org/2001/XMLSchema#boolean';","var XSD_DOUBLE = 'http://www.w3.org/2001/XMLSchema#double';","var XSD_INTEGER = 'http://www.w3.org/2001/XMLSchema#integer';","var XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';","","var RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';","var RDF_LIST = RDF + 'List';","var RDF_FIRST = RDF + 'first';","var RDF_REST = RDF + 'rest';","var RDF_NIL = RDF + 'nil';","var RDF_TYPE = RDF + 'type';","var RDF_PLAIN_LITERAL = RDF + 'PlainLiteral';","var RDF_XML_LITERAL = RDF + 'XMLLiteral';","var RDF_OBJECT = RDF + 'object';","var RDF_LANGSTRING = RDF + 'langString';","","var LINK_HEADER_REL = 'http://www.w3.org/ns/json-ld#context';","var MAX_CONTEXT_URLS = 10;","","/**"," * A JSON-LD Error."," *"," * @param msg the error message."," * @param type the error type."," * @param details the error details."," */","var JsonLdError = function(msg, type, details) {","  if(_nodejs) {","    Error.call(this);","    Error.captureStackTrace(this, this.constructor);","  } else if(typeof Error !== 'undefined') {","    this.stack = (new Error()).stack;","  }","  this.name = type || 'jsonld.Error';","  this.message = msg || 'An unspecified JSON-LD error occurred.';","  this.details = details || {};","};","if(_nodejs) {","  require('util').inherits(JsonLdError, Error);","} else if(typeof Error !== 'undefined') {","  JsonLdError.prototype = new Error();","}","","/**"," * Constructs a new JSON-LD Processor."," */","var Processor = function() {};","","/**"," * Recursively compacts an element using the given active context. All values"," * must be in expanded form before this method is called."," *"," * @param activeCtx the active context to use."," * @param activeProperty the compacted property associated with the element"," *          to compact, null for none."," * @param element the element to compact."," * @param options the compaction options."," *"," * @return the compacted value."," */","Processor.prototype.compact = function(","  activeCtx, activeProperty, element, options) {","  // recursively compact array","  if(_isArray(element)) {","    var rval = [];","    for(var i = 0; i < element.length; ++i) {","      // compact, dropping any null values","      var compacted = this.compact(","        activeCtx, activeProperty, element[i], options);","      if(compacted !== null) {","        rval.push(compacted);","      }","    }","    if(options.compactArrays && rval.length === 1) {","      // use single element if no container is specified","      var container = jsonld.getContextValue(","        activeCtx, activeProperty, '@container');","      if(container === null) {","        rval = rval[0];","      }","    }","    return rval;","  }","","  // recursively compact object","  if(_isObject(element)) {","    if(options.link && '@id' in element && element['@id'] in options.link) {","      // check for a linked element to reuse","      var linked = options.link[element['@id']];","      for(var i = 0; i < linked.length; ++i) {","        if(linked[i].expanded === element) {","          return linked[i].compacted;","        }","      }","    }","","    // do value compaction on @values and subject references","    if(_isValue(element) || _isSubjectReference(element)) {","      var rval = _compactValue(activeCtx, activeProperty, element);","      if(options.link && _isSubjectReference(element)) {","        // store linked element","        if(!(element['@id'] in options.link)) {","          options.link[element['@id']] = [];","        }","        options.link[element['@id']].push({expanded: element, compacted: rval});","      }","      return rval;","    }","","    // FIXME: avoid misuse of active property as an expanded property?","    var insideReverse = (activeProperty === '@reverse');","","    var rval = {};","","    if(options.link && '@id' in element) {","      // store linked element","      if(!(element['@id'] in options.link)) {","        options.link[element['@id']] = [];","      }","      options.link[element['@id']].push({expanded: element, compacted: rval});","    }","","    // process element keys in order","    var keys = Object.keys(element).sort();","    for(var ki = 0; ki < keys.length; ++ki) {","      var expandedProperty = keys[ki];","      var expandedValue = element[expandedProperty];","","      // compact @id and @type(s)","      if(expandedProperty === '@id' || expandedProperty === '@type') {","        var compactedValue;","","        // compact single @id","        if(_isString(expandedValue)) {","          compactedValue = _compactIri(","            activeCtx, expandedValue, null,","            {vocab: (expandedProperty === '@type')});","        } else {","          // expanded value must be a @type array","          compactedValue = [];","          for(var vi = 0; vi < expandedValue.length; ++vi) {","            compactedValue.push(_compactIri(","              activeCtx, expandedValue[vi], null, {vocab: true}));","          }","        }","","        // use keyword alias and add value","        var alias = _compactIri(activeCtx, expandedProperty);","        var isArray = (_isArray(compactedValue) && expandedValue.length === 0);","        jsonld.addValue(","          rval, alias, compactedValue, {propertyIsArray: isArray});","        continue;","      }","","      // handle @reverse","      if(expandedProperty === '@reverse') {","        // recursively compact expanded value","        var compactedValue = this.compact(","          activeCtx, '@reverse', expandedValue, options);","","        // handle double-reversed properties","        for(var compactedProperty in compactedValue) {","          if(activeCtx.mappings[compactedProperty] &&","            activeCtx.mappings[compactedProperty].reverse) {","            var value = compactedValue[compactedProperty];","            var container = jsonld.getContextValue(","              activeCtx, compactedProperty, '@container');","            var useArray = (container === '@set' || !options.compactArrays);","            jsonld.addValue(","              rval, compactedProperty, value, {propertyIsArray: useArray});","            delete compactedValue[compactedProperty];","          }","        }","","        if(Object.keys(compactedValue).length > 0) {","          // use keyword alias and add value","          var alias = _compactIri(activeCtx, expandedProperty);","          jsonld.addValue(rval, alias, compactedValue);","        }","","        continue;","      }","","      // handle @index property","      if(expandedProperty === '@index') {","        // drop @index if inside an @index container","        var container = jsonld.getContextValue(","          activeCtx, activeProperty, '@container');","        if(container === '@index') {","          continue;","        }","","        // use keyword alias and add value","        var alias = _compactIri(activeCtx, expandedProperty);","        jsonld.addValue(rval, alias, expandedValue);","        continue;","      }","","      // skip array processing for keywords that aren't @graph or @list","      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&","        _isKeyword(expandedProperty)) {","        // use keyword alias and add value as is","        var alias = _compactIri(activeCtx, expandedProperty);","        jsonld.addValue(rval, alias, expandedValue);","        continue;","      }","","      // Note: expanded value must be an array due to expansion algorithm.","","      // preserve empty arrays","      if(expandedValue.length === 0) {","        var itemActiveProperty = _compactIri(","          activeCtx, expandedProperty, expandedValue, {vocab: true},","          insideReverse);","        jsonld.addValue(","          rval, itemActiveProperty, expandedValue, {propertyIsArray: true});","      }","","      // recusively process array values","      for(var vi = 0; vi < expandedValue.length; ++vi) {","        var expandedItem = expandedValue[vi];","","        // compact property and get container type","        var itemActiveProperty = _compactIri(","          activeCtx, expandedProperty, expandedItem, {vocab: true},","          insideReverse);","        var container = jsonld.getContextValue(","          activeCtx, itemActiveProperty, '@container');","","        // get @list value if appropriate","        var isList = _isList(expandedItem);","        var list = null;","        if(isList) {","          list = expandedItem['@list'];","        }","","        // recursively compact expanded item","        var compactedItem = this.compact(","          activeCtx, itemActiveProperty, isList ? list : expandedItem, options);","","        // handle @list","        if(isList) {","          // ensure @list value is an array","          if(!_isArray(compactedItem)) {","            compactedItem = [compactedItem];","          }","","          if(container !== '@list') {","            // wrap using @list alias","            var wrapper = {};","            wrapper[_compactIri(activeCtx, '@list')] = compactedItem;","            compactedItem = wrapper;","","            // include @index from expanded @list, if any","            if('@index' in expandedItem) {","              compactedItem[_compactIri(activeCtx, '@index')] =","                expandedItem['@index'];","            }","          } else if(itemActiveProperty in rval) {","            // can't use @list container for more than 1 list","            throw new JsonLdError(","              'JSON-LD compact error; property has a \"@list\" @container ' +","              'rule but there is more than a single @list that matches ' +","              'the compacted term in the document. Compaction might mix ' +","              'unwanted items into the list.',","              'jsonld.SyntaxError', {code: 'compaction to list of lists'});","          }","        }","","        // handle language and index maps","        if(container === '@language' || container === '@index') {","          // get or create the map object","          var mapObject;","          if(itemActiveProperty in rval) {","            mapObject = rval[itemActiveProperty];","          } else {","            rval[itemActiveProperty] = mapObject = {};","          }","","          // if container is a language map, simplify compacted value to","          // a simple string","          if(container === '@language' && _isValue(compactedItem)) {","            compactedItem = compactedItem['@value'];","          }","","          // add compact value to map object using key from expanded value","          // based on the container type","          jsonld.addValue(mapObject, expandedItem[container], compactedItem);","        } else {","          // use an array if: compactArrays flag is false,","          // @container is @set or @list , value is an empty","          // array, or key is @graph","          var isArray = (!options.compactArrays || container === '@set' ||","            container === '@list' ||","            (_isArray(compactedItem) && compactedItem.length === 0) ||","            expandedProperty === '@list' || expandedProperty === '@graph');","","          // add compact value","          jsonld.addValue(","            rval, itemActiveProperty, compactedItem,","            {propertyIsArray: isArray});","        }","      }","    }","","    return rval;","  }","","  // only primitives remain which are already compact","  return element;","};","","/**"," * Recursively expands an element using the given context. Any context in"," * the element will be removed. All context URLs must have been retrieved"," * before calling this method."," *"," * @param activeCtx the context to use."," * @param activeProperty the property for the element, null for none."," * @param element the element to expand."," * @param options the expansion options."," * @param insideList true if the element is a list, false if not."," *"," * @return the expanded value."," */","Processor.prototype.expand = function(","  activeCtx, activeProperty, element, options, insideList) {","  var self = this;","","  // nothing to expand","  if(element === null || element === undefined) {","    return null;","  }","","  if(!_isArray(element) && !_isObject(element)) {","    // drop free-floating scalars that are not in lists","    if(!insideList && (activeProperty === null ||","      _expandIri(activeCtx, activeProperty, {vocab: true}) === '@graph')) {","      return null;","    }","","    // expand element according to value expansion rules","    return _expandValue(activeCtx, activeProperty, element);","  }","","  // recursively expand array","  if(_isArray(element)) {","    var rval = [];","    var container = jsonld.getContextValue(","      activeCtx, activeProperty, '@container');","    insideList = insideList || container === '@list';","    for(var i = 0; i < element.length; ++i) {","      // expand element","      var e = self.expand(activeCtx, activeProperty, element[i], options);","      if(insideList && (_isArray(e) || _isList(e))) {","        // lists of lists are illegal","        throw new JsonLdError(","          'Invalid JSON-LD syntax; lists of lists are not permitted.',","          'jsonld.SyntaxError', {code: 'list of lists'});","      }","      // drop null values","      if(e !== null) {","        if(_isArray(e)) {","          rval = rval.concat(e);","        } else {","          rval.push(e);","        }","      }","    }","    return rval;","  }","","  // recursively expand object:","","  // if element has a context, process it","  if('@context' in element) {","    activeCtx = self.processContext(activeCtx, element['@context'], options);","  }","","  // expand the active property","  var expandedActiveProperty = _expandIri(","    activeCtx, activeProperty, {vocab: true});","","  var rval = {};","  var keys = Object.keys(element).sort();","  for(var ki = 0; ki < keys.length; ++ki) {","    var key = keys[ki];","    var value = element[key];","    var expandedValue;","","    // skip @context","    if(key === '@context') {","      continue;","    }","","    // expand property","    var expandedProperty = _expandIri(activeCtx, key, {vocab: true});","","    // drop non-absolute IRI keys that aren't keywords","    if(expandedProperty === null ||","      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {","      continue;","    }","","    if(_isKeyword(expandedProperty)) {","      if(expandedActiveProperty === '@reverse') {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +","          'property.', 'jsonld.SyntaxError',","          {code: 'invalid reverse property map', value: value});","      }","      if(expandedProperty in rval) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; colliding keywords detected.',","          'jsonld.SyntaxError',","          {code: 'colliding keywords', keyword: expandedProperty});","      }","    }","","    // syntax error if @id is not a string","    if(expandedProperty === '@id' && !_isString(value)) {","      if(!options.isFrame) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; \"@id\" value must a string.',","          'jsonld.SyntaxError', {code: 'invalid @id value', value: value});","      }","      if(!_isObject(value)) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; \"@id\" value must be a string or an ' +","          'object.', 'jsonld.SyntaxError',","          {code: 'invalid @id value', value: value});","      }","    }","","    if(expandedProperty === '@type') {","      _validateTypeValue(value);","    }","","    // @graph must be an array or an object","    if(expandedProperty === '@graph' &&","      !(_isObject(value) || _isArray(value))) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; \"@graph\" value must not be an ' +","        'object or an array.',","        'jsonld.SyntaxError', {code: 'invalid @graph value', value: value});","    }","","    // @value must not be an object or an array","    if(expandedProperty === '@value' &&","      (_isObject(value) || _isArray(value))) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; \"@value\" value must not be an ' +","        'object or an array.',","        'jsonld.SyntaxError',","        {code: 'invalid value object value', value: value});","    }","","    // @language must be a string","    if(expandedProperty === '@language') {","      if(value === null) {","        // drop null @language values, they expand as if they didn't exist","        continue;","      }","      if(!_isString(value)) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; \"@language\" value must be a string.',","          'jsonld.SyntaxError',","          {code: 'invalid language-tagged string', value: value});","      }","      // ensure language value is lowercase","      value = value.toLowerCase();","    }","","    // @index must be a string","    if(expandedProperty === '@index') {","      if(!_isString(value)) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; \"@index\" value must be a string.',","          'jsonld.SyntaxError',","          {code: 'invalid @index value', value: value});","      }","    }","","    // @reverse must be an object","    if(expandedProperty === '@reverse') {","      if(!_isObject(value)) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; \"@reverse\" value must be an object.',","          'jsonld.SyntaxError', {code: 'invalid @reverse value', value: value});","      }","","      expandedValue = self.expand(activeCtx, '@reverse', value, options);","","      // properties double-reversed","      if('@reverse' in expandedValue) {","        for(var property in expandedValue['@reverse']) {","          jsonld.addValue(","            rval, property, expandedValue['@reverse'][property],","            {propertyIsArray: true});","        }","      }","","      // FIXME: can this be merged with code below to simplify?","      // merge in all reversed properties","      var reverseMap = rval['@reverse'] || null;","      for(var property in expandedValue) {","        if(property === '@reverse') {","          continue;","        }","        if(reverseMap === null) {","          reverseMap = rval['@reverse'] = {};","        }","        jsonld.addValue(reverseMap, property, [], {propertyIsArray: true});","        var items = expandedValue[property];","        for(var ii = 0; ii < items.length; ++ii) {","          var item = items[ii];","          if(_isValue(item) || _isList(item)) {","            throw new JsonLdError(","              'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +","              '@value or an @list.', 'jsonld.SyntaxError',","              {code: 'invalid reverse property value', value: expandedValue});","          }","          jsonld.addValue(","            reverseMap, property, item, {propertyIsArray: true});","        }","      }","","      continue;","    }","","    var container = jsonld.getContextValue(activeCtx, key, '@container');","","    if(container === '@language' && _isObject(value)) {","      // handle language map container (skip if value is not an object)","      expandedValue = _expandLanguageMap(value);","    } else if(container === '@index' && _isObject(value)) {","      // handle index container (skip if value is not an object)","      expandedValue = (function _expandIndexMap(activeProperty) {","        var rval = [];","        var keys = Object.keys(value).sort();","        for(var ki = 0; ki < keys.length; ++ki) {","          var key = keys[ki];","          var val = value[key];","          if(!_isArray(val)) {","            val = [val];","          }","          val = self.expand(activeCtx, activeProperty, val, options, false);","          for(var vi = 0; vi < val.length; ++vi) {","            var item = val[vi];","            if(!('@index' in item)) {","              item['@index'] = key;","            }","            rval.push(item);","          }","        }","        return rval;","      })(key);","    } else {","      // recurse into @list or @set","      var isList = (expandedProperty === '@list');","      if(isList || expandedProperty === '@set') {","        var nextActiveProperty = activeProperty;","        if(isList && expandedActiveProperty === '@graph') {","          nextActiveProperty = null;","        }","        expandedValue = self.expand(","          activeCtx, nextActiveProperty, value, options, isList);","        if(isList && _isList(expandedValue)) {","          throw new JsonLdError(","            'Invalid JSON-LD syntax; lists of lists are not permitted.',","            'jsonld.SyntaxError', {code: 'list of lists'});","        }","      } else {","        // recursively expand value with key as new active property","        expandedValue = self.expand(activeCtx, key, value, options, false);","      }","    }","","    // drop null values if property is not @value","    if(expandedValue === null && expandedProperty !== '@value') {","      continue;","    }","","    // convert expanded value to @list if container specifies it","    if(expandedProperty !== '@list' && !_isList(expandedValue) &&","      container === '@list') {","      // ensure expanded value is an array","      expandedValue = (_isArray(expandedValue) ?","        expandedValue : [expandedValue]);","      expandedValue = {'@list': expandedValue};","    }","","    // FIXME: can this be merged with code above to simplify?","    // merge in reverse properties","    if(activeCtx.mappings[key] && activeCtx.mappings[key].reverse) {","      var reverseMap = rval['@reverse'] = rval['@reverse'] || {};","      if(!_isArray(expandedValue)) {","        expandedValue = [expandedValue];","      }","      for(var ii = 0; ii < expandedValue.length; ++ii) {","        var item = expandedValue[ii];","        if(_isValue(item) || _isList(item)) {","          throw new JsonLdError(","            'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +","            '@value or an @list.', 'jsonld.SyntaxError',","            {code: 'invalid reverse property value', value: expandedValue});","        }","        jsonld.addValue(","          reverseMap, expandedProperty, item, {propertyIsArray: true});","      }","      continue;","    }","","    // add value for property","    // use an array except for certain keywords","    var useArray =","      ['@index', '@id', '@type', '@value', '@language'].indexOf(","        expandedProperty) === -1;","    jsonld.addValue(","      rval, expandedProperty, expandedValue, {propertyIsArray: useArray});","  }","","  // get property count on expanded output","  keys = Object.keys(rval);","  var count = keys.length;","","  if('@value' in rval) {","    // @value must only have @language or @type","    if('@type' in rval && '@language' in rval) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; an element containing \"@value\" may not ' +","        'contain both \"@type\" and \"@language\".',","        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});","    }","    var validCount = count - 1;","    if('@type' in rval) {","      validCount -= 1;","    }","    if('@index' in rval) {","      validCount -= 1;","    }","    if('@language' in rval) {","      validCount -= 1;","    }","    if(validCount !== 0) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; an element containing \"@value\" may only ' +","        'have an \"@index\" property and at most one other property ' +","        'which can be \"@type\" or \"@language\".',","        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});","    }","    // drop null @values","    if(rval['@value'] === null) {","      rval = null;","    } else if('@language' in rval && !_isString(rval['@value'])) {","      // if @language is present, @value must be a string","      throw new JsonLdError(","        'Invalid JSON-LD syntax; only strings may be language-tagged.',","        'jsonld.SyntaxError',","        {code: 'invalid language-tagged value', element: rval});","    } else if('@type' in rval && (!_isAbsoluteIri(rval['@type']) ||","      rval['@type'].indexOf('_:') === 0)) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; an element containing \"@value\" and \"@type\" ' +","        'must have an absolute IRI for the value of \"@type\".',","        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});","    }","  } else if('@type' in rval && !_isArray(rval['@type'])) {","    // convert @type to an array","    rval['@type'] = [rval['@type']];","  } else if('@set' in rval || '@list' in rval) {","    // handle @set and @list","    if(count > 1 && !(count === 2 && '@index' in rval)) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; if an element has the property \"@set\" ' +","        'or \"@list\", then it can have at most one other property that is ' +","        '\"@index\".', 'jsonld.SyntaxError',","        {code: 'invalid set or list object', element: rval});","    }","    // optimize away @set","    if('@set' in rval) {","      rval = rval['@set'];","      keys = Object.keys(rval);","      count = keys.length;","    }","  } else if(count === 1 && '@language' in rval) {","    // drop objects with only @language","    rval = null;","  }","","  // drop certain top-level objects that do not occur in lists","  if(_isObject(rval) &&","    !options.keepFreeFloatingNodes && !insideList &&","    (activeProperty === null || expandedActiveProperty === '@graph')) {","    // drop empty object, top-level @value/@list, or object with only @id","    if(count === 0 || '@value' in rval || '@list' in rval ||","      (count === 1 && '@id' in rval)) {","      rval = null;","    }","  }","","  return rval;","};","","/**"," * Creates a JSON-LD node map (node ID => node)."," *"," * @param input the expanded JSON-LD to create a node map of."," * @param [options] the options to use:"," *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes."," *          [namer] (deprecated)."," *"," * @return the node map."," */","Processor.prototype.createNodeMap = function(input, options) {","  options = options || {};","","  // produce a map of all subjects and name each bnode","  var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');","  var graphs = {'@default': {}};","  _createNodeMap(input, graphs, '@default', issuer);","","  // add all non-default graphs to default graph","  return _mergeNodeMaps(graphs);","};","","/**"," * Performs JSON-LD flattening."," *"," * @param input the expanded JSON-LD to flatten."," *"," * @return the flattened output."," */","Processor.prototype.flatten = function(input) {","  var defaultGraph = this.createNodeMap(input);","","  // produce flattened output","  var flattened = [];","  var keys = Object.keys(defaultGraph).sort();","  for(var ki = 0; ki < keys.length; ++ki) {","    var node = defaultGraph[keys[ki]];","    // only add full subjects to top-level","    if(!_isSubjectReference(node)) {","      flattened.push(node);","    }","  }","  return flattened;","};","","/**"," * Performs JSON-LD framing."," *"," * @param input the expanded JSON-LD to frame."," * @param frame the expanded JSON-LD frame to use."," * @param options the framing options."," *"," * @return the framed output."," */","Processor.prototype.frame = function(input, frame, options) {","  // create framing state","  var state = {","    options: options,","    graphs: {'@default': {}, '@merged': {}},","    subjectStack: [],","    link: {}","  };","","  // produce a map of all graphs and name each bnode","  // FIXME: currently uses subjects from @merged graph only","  var issuer = new IdentifierIssuer('_:b');","  _createNodeMap(input, state.graphs, '@merged', issuer);","  state.subjects = state.graphs['@merged'];","","  // frame the subjects","  var framed = [];","  _frame(state, Object.keys(state.subjects).sort(), frame, framed, null);","  return framed;","};","","/**"," * Performs normalization on the given RDF dataset."," *"," * @param dataset the RDF dataset to normalize."," * @param options the normalization options."," * @param callback(err, normalized) called once the operation completes."," */","Processor.prototype.normalize = function(dataset, options, callback) {","  if(options.algorithm === 'URDNA2015') {","    return new URDNA2015(options).main(dataset, callback);","  }","  if(options.algorithm === 'URGNA2012') {","    return new URGNA2012(options).main(dataset, callback);","  }","  callback(new Error(","    'Invalid RDF Dataset Normalization algorithm: ' + options.algorithm));","};","","/**"," * Converts an RDF dataset to JSON-LD."," *"," * @param dataset the RDF dataset."," * @param options the RDF serialization options."," * @param callback(err, output) called once the operation completes."," */","Processor.prototype.fromRDF = function(dataset, options, callback) {","  var defaultGraph = {};","  var graphMap = {'@default': defaultGraph};","  var referencedOnce = {};","","  for(var name in dataset) {","    var graph = dataset[name];","    if(!(name in graphMap)) {","      graphMap[name] = {};","    }","    if(name !== '@default' && !(name in defaultGraph)) {","      defaultGraph[name] = {'@id': name};","    }","    var nodeMap = graphMap[name];","    for(var ti = 0; ti < graph.length; ++ti) {","      var triple = graph[ti];","","      // get subject, predicate, object","      var s = triple.subject.value;","      var p = triple.predicate.value;","      var o = triple.object;","","      if(!(s in nodeMap)) {","        nodeMap[s] = {'@id': s};","      }","      var node = nodeMap[s];","","      var objectIsId = (o.type === 'IRI' || o.type === 'blank node');","      if(objectIsId && !(o.value in nodeMap)) {","        nodeMap[o.value] = {'@id': o.value};","      }","","      if(p === RDF_TYPE && !options.useRdfType && objectIsId) {","        jsonld.addValue(node, '@type', o.value, {propertyIsArray: true});","        continue;","      }","","      var value = _RDFToObject(o, options.useNativeTypes);","      jsonld.addValue(node, p, value, {propertyIsArray: true});","","      // object may be an RDF list/partial list node but we can't know easily","      // until all triples are read","      if(objectIsId) {","        if(o.value === RDF_NIL) {","          // track rdf:nil uniquely per graph","          var object = nodeMap[o.value];","          if(!('usages' in object)) {","            object.usages = [];","          }","          object.usages.push({","            node: node,","            property: p,","            value: value","          });","        } else if(o.value in referencedOnce) {","          // object referenced more than once","          referencedOnce[o.value] = false;","        } else {","          // keep track of single reference","          referencedOnce[o.value] = {","            node: node,","            property: p,","            value: value","          };","        }","      }","    }","  }","","  // convert linked lists to @list arrays","  for(var name in graphMap) {","    var graphObject = graphMap[name];","","    // no @lists to be converted, continue","    if(!(RDF_NIL in graphObject)) {","      continue;","    }","","    // iterate backwards through each RDF list","    var nil = graphObject[RDF_NIL];","    for(var i = 0; i < nil.usages.length; ++i) {","      var usage = nil.usages[i];","      var node = usage.node;","      var property = usage.property;","      var head = usage.value;","      var list = [];","      var listNodes = [];","","      // ensure node is a well-formed list node; it must:","      // 1. Be referenced only once.","      // 2. Have an array for rdf:first that has 1 item.","      // 3. Have an array for rdf:rest that has 1 item.","      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,","      //   optionally, @type where the value is rdf:List.","      var nodeKeyCount = Object.keys(node).length;","      while(property === RDF_REST &&","        _isObject(referencedOnce[node['@id']]) &&","        _isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&","        _isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&","        (nodeKeyCount === 3 || (nodeKeyCount === 4 && _isArray(node['@type']) &&","          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {","        list.push(node[RDF_FIRST][0]);","        listNodes.push(node['@id']);","","        // get next node, moving backwards through list","        usage = referencedOnce[node['@id']];","        node = usage.node;","        property = usage.property;","        head = usage.value;","        nodeKeyCount = Object.keys(node).length;","","        // if node is not a blank node, then list head found","        if(node['@id'].indexOf('_:') !== 0) {","          break;","        }","      }","","      // the list is nested in another list","      if(property === RDF_FIRST) {","        // empty list","        if(node['@id'] === RDF_NIL) {","          // can't convert rdf:nil to a @list object because it would","          // result in a list of lists which isn't supported","          continue;","        }","","        // preserve list head","        head = graphObject[head['@id']][RDF_REST][0];","        list.pop();","        listNodes.pop();","      }","","      // transform list into @list object","      delete head['@id'];","      head['@list'] = list.reverse();","      for(var j = 0; j < listNodes.length; ++j) {","        delete graphObject[listNodes[j]];","      }","    }","","    delete nil.usages;","  }","","  var result = [];","  var subjects = Object.keys(defaultGraph).sort();","  for(var i = 0; i < subjects.length; ++i) {","    var subject = subjects[i];","    var node = defaultGraph[subject];","    if(subject in graphMap) {","      var graph = node['@graph'] = [];","      var graphObject = graphMap[subject];","      var subjects_ = Object.keys(graphObject).sort();","      for(var si = 0; si < subjects_.length; ++si) {","        var node_ = graphObject[subjects_[si]];","        // only add full subjects to top-level","        if(!_isSubjectReference(node_)) {","          graph.push(node_);","        }","      }","    }","    // only add full subjects to top-level","    if(!_isSubjectReference(node)) {","      result.push(node);","    }","  }","","  callback(null, result);","};","","/**"," * Outputs an RDF dataset for the expanded JSON-LD input."," *"," * @param input the expanded JSON-LD input."," * @param options the RDF serialization options."," *"," * @return the RDF dataset."," */","Processor.prototype.toRDF = function(input, options) {","  // create node map for default graph (and any named graphs)","  var issuer = new IdentifierIssuer('_:b');","  var nodeMap = {'@default': {}};","  _createNodeMap(input, nodeMap, '@default', issuer);","","  var dataset = {};","  var graphNames = Object.keys(nodeMap).sort();","  for(var i = 0; i < graphNames.length; ++i) {","    var graphName = graphNames[i];","    // skip relative IRIs","    if(graphName === '@default' || _isAbsoluteIri(graphName)) {","      dataset[graphName] = _graphToRDF(nodeMap[graphName], issuer, options);","    }","  }","  return dataset;","};","","/**"," * Processes a local context and returns a new active context."," *"," * @param activeCtx the current active context."," * @param localCtx the local context to process."," * @param options the context processing options."," *"," * @return the new active context."," */","Processor.prototype.processContext = function(activeCtx, localCtx, options) {","  // normalize local context to an array of @context objects","  if(_isObject(localCtx) && '@context' in localCtx &&","    _isArray(localCtx['@context'])) {","    localCtx = localCtx['@context'];","  }","  var ctxs = _isArray(localCtx) ? localCtx : [localCtx];","","  // no contexts in array, clone existing context","  if(ctxs.length === 0) {","    return activeCtx.clone();","  }","","  // process each context in order, update active context","  // on each iteration to ensure proper caching","  var rval = activeCtx;","  for(var i = 0; i < ctxs.length; ++i) {","    var ctx = ctxs[i];","","    // reset to initial context","    if(ctx === null) {","      rval = activeCtx = _getInitialContext(options);","      continue;","    }","","    // dereference @context key if present","    if(_isObject(ctx) && '@context' in ctx) {","      ctx = ctx['@context'];","    }","","    // context must be an object by now, all URLs retrieved before this call","    if(!_isObject(ctx)) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; @context must be an object.',","        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});","    }","","    // get context from cache if available","    if(jsonld.cache.activeCtx) {","      var cached = jsonld.cache.activeCtx.get(activeCtx, ctx);","      if(cached) {","        rval = activeCtx = cached;","        continue;","      }","    }","","    // update active context and clone new one before updating","    activeCtx = rval;","    rval = rval.clone();","","    // define context mappings for keys in local context","    var defined = {};","","    // handle @base","    if('@base' in ctx) {","      var base = ctx['@base'];","","      // clear base","      if(base === null) {","        base = null;","      } else if(!_isString(base)) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +","          '@context must be a string or null.',","          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});","      } else if(base !== '' && !_isAbsoluteIri(base)) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +","          '@context must be an absolute IRI or the empty string.',","          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});","      }","","      if(base !== null) {","        base = jsonld.url.parse(base || '');","      }","      rval['@base'] = base;","      defined['@base'] = true;","    }","","    // handle @vocab","    if('@vocab' in ctx) {","      var value = ctx['@vocab'];","      if(value === null) {","        delete rval['@vocab'];","      } else if(!_isString(value)) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +","          '@context must be a string or null.',","          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});","      } else if(!_isAbsoluteIri(value)) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +","          '@context must be an absolute IRI.',","          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});","      } else {","        rval['@vocab'] = value;","      }","      defined['@vocab'] = true;","    }","","    // handle @language","    if('@language' in ctx) {","      var value = ctx['@language'];","      if(value === null) {","        delete rval['@language'];","      } else if(!_isString(value)) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; the value of \"@language\" in a ' +","          '@context must be a string or null.',","          'jsonld.SyntaxError',","          {code: 'invalid default language', context: ctx});","      } else {","        rval['@language'] = value.toLowerCase();","      }","      defined['@language'] = true;","    }","","    // process all other keys","    for(var key in ctx) {","      _createTermDefinition(rval, ctx, key, defined);","    }","","    // cache result","    if(jsonld.cache.activeCtx) {","      jsonld.cache.activeCtx.set(activeCtx, ctx, rval);","    }","  }","","  return rval;","};","","/**"," * Expands a language map."," *"," * @param languageMap the language map to expand."," *"," * @return the expanded language map."," */","function _expandLanguageMap(languageMap) {","  var rval = [];","  var keys = Object.keys(languageMap).sort();","  for(var ki = 0; ki < keys.length; ++ki) {","    var key = keys[ki];","    var val = languageMap[key];","    if(!_isArray(val)) {","      val = [val];","    }","    for(var vi = 0; vi < val.length; ++vi) {","      var item = val[vi];","      if(item === null) {","          // null values are allowed (8.5) but ignored (3.1)","          continue;","      }","      if(!_isString(item)) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; language map values must be strings.',","          'jsonld.SyntaxError',","          {code: 'invalid language map value', languageMap: languageMap});","      }","      rval.push({","        '@value': item,","        '@language': key.toLowerCase()","      });","    }","  }","  return rval;","}","","/**"," * Labels the blank nodes in the given value using the given IdentifierIssuer."," *"," * @param issuer the IdentifierIssuer to use."," * @param element the element with blank nodes to rename."," *"," * @return the element."," */","function _labelBlankNodes(issuer, element) {","  if(_isArray(element)) {","    for(var i = 0; i < element.length; ++i) {","      element[i] = _labelBlankNodes(issuer, element[i]);","    }","  } else if(_isList(element)) {","    element['@list'] = _labelBlankNodes(issuer, element['@list']);","  } else if(_isObject(element)) {","    // relabel blank node","    if(_isBlankNode(element)) {","      element['@id'] = issuer.getId(element['@id']);","    }","","    // recursively apply to all keys","    var keys = Object.keys(element).sort();","    for(var ki = 0; ki < keys.length; ++ki) {","      var key = keys[ki];","      if(key !== '@id') {","        element[key] = _labelBlankNodes(issuer, element[key]);","      }","    }","  }","","  return element;","}","","/**"," * Expands the given value by using the coercion and keyword rules in the"," * given context."," *"," * @param activeCtx the active context to use."," * @param activeProperty the active property the value is associated with."," * @param value the value to expand."," *"," * @return the expanded value."," */","function _expandValue(activeCtx, activeProperty, value) {","  // nothing to expand","  if(value === null || value === undefined) {","    return null;","  }","","  // special-case expand @id and @type (skips '@id' expansion)","  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});","  if(expandedProperty === '@id') {","    return _expandIri(activeCtx, value, {base: true});","  } else if(expandedProperty === '@type') {","    return _expandIri(activeCtx, value, {vocab: true, base: true});","  }","","  // get type definition from context","  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');","","  // do @id expansion (automatic for @graph)","  if(type === '@id' || (expandedProperty === '@graph' && _isString(value))) {","    return {'@id': _expandIri(activeCtx, value, {base: true})};","  }","  // do @id expansion w/vocab","  if(type === '@vocab') {","    return {'@id': _expandIri(activeCtx, value, {vocab: true, base: true})};","  }","","  // do not expand keyword values","  if(_isKeyword(expandedProperty)) {","    return value;","  }","","  var rval = {};","","  if(type !== null) {","    // other type","    rval['@type'] = type;","  } else if(_isString(value)) {","    // check for language tagging for strings","    var language = jsonld.getContextValue(","      activeCtx, activeProperty, '@language');","    if(language !== null) {","      rval['@language'] = language;","    }","  }","  // do conversion of values that aren't basic JSON types to strings","  if(['boolean', 'number', 'string'].indexOf(typeof value) === -1) {","    value = value.toString();","  }","  rval['@value'] = value;","","  return rval;","}","","/**"," * Creates an array of RDF triples for the given graph."," *"," * @param graph the graph to create RDF triples for."," * @param issuer a IdentifierIssuer for assigning blank node names."," * @param options the RDF serialization options."," *"," * @return the array of RDF triples for the given graph."," */","function _graphToRDF(graph, issuer, options) {","  var rval = [];","","  var ids = Object.keys(graph).sort();","  for(var i = 0; i < ids.length; ++i) {","    var id = ids[i];","    var node = graph[id];","    var properties = Object.keys(node).sort();","    for(var pi = 0; pi < properties.length; ++pi) {","      var property = properties[pi];","      var items = node[property];","      if(property === '@type') {","        property = RDF_TYPE;","      } else if(_isKeyword(property)) {","        continue;","      }","","      for(var ii = 0; ii < items.length; ++ii) {","        var item = items[ii];","","        // RDF subject","        var subject = {};","        subject.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';","        subject.value = id;","","        // skip relative IRI subjects","        if(!_isAbsoluteIri(id)) {","          continue;","        }","","        // RDF predicate","        var predicate = {};","        predicate.type = (property.indexOf('_:') === 0) ? 'blank node' : 'IRI';","        predicate.value = property;","","        // skip relative IRI predicates","        if(!_isAbsoluteIri(property)) {","          continue;","        }","","        // skip blank node predicates unless producing generalized RDF","        if(predicate.type === 'blank node' && !options.produceGeneralizedRdf) {","          continue;","        }","","        // convert @list to triples","        if(_isList(item)) {","          _listToRDF(item['@list'], issuer, subject, predicate, rval);","        } else {","          // convert value or node object to triple","          var object = _objectToRDF(item);","          // skip null objects (they are relative IRIs)","          if(object) {","            rval.push({subject: subject, predicate: predicate, object: object});","          }","        }","      }","    }","  }","","  return rval;","}","","/**"," * Converts a @list value into linked list of blank node RDF triples"," * (an RDF collection)."," *"," * @param list the @list value."," * @param issuer a IdentifierIssuer for assigning blank node names."," * @param subject the subject for the head of the list."," * @param predicate the predicate for the head of the list."," * @param triples the array of triples to append to."," */","function _listToRDF(list, issuer, subject, predicate, triples) {","  var first = {type: 'IRI', value: RDF_FIRST};","  var rest = {type: 'IRI', value: RDF_REST};","  var nil = {type: 'IRI', value: RDF_NIL};","","  for(var i = 0; i < list.length; ++i) {","    var item = list[i];","","    var blankNode = {type: 'blank node', value: issuer.getId()};","    triples.push({subject: subject, predicate: predicate, object: blankNode});","","    subject = blankNode;","    predicate = first;","    var object = _objectToRDF(item);","","    // skip null objects (they are relative IRIs)","    if(object) {","      triples.push({subject: subject, predicate: predicate, object: object});","    }","","    predicate = rest;","  }","","  triples.push({subject: subject, predicate: predicate, object: nil});","}","","/**"," * Converts a JSON-LD value object to an RDF literal or a JSON-LD string or"," * node object to an RDF resource."," *"," * @param item the JSON-LD value or node object."," *"," * @return the RDF literal or RDF resource."," */","function _objectToRDF(item) {","  var object = {};","","  // convert value object to RDF","  if(_isValue(item)) {","    object.type = 'literal';","    var value = item['@value'];","    var datatype = item['@type'] || null;","","    // convert to XSD datatypes as appropriate","    if(_isBoolean(value)) {","      object.value = value.toString();","      object.datatype = datatype || XSD_BOOLEAN;","    } else if(_isDouble(value) || datatype === XSD_DOUBLE) {","      if(!_isDouble(value)) {","        value = parseFloat(value);","      }","      // canonical double representation","      object.value = value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');","      object.datatype = datatype || XSD_DOUBLE;","    } else if(_isNumber(value)) {","      object.value = value.toFixed(0);","      object.datatype = datatype || XSD_INTEGER;","    } else if('@language' in item) {","      object.value = value;","      object.datatype = datatype || RDF_LANGSTRING;","      object.language = item['@language'];","    } else {","      object.value = value;","      object.datatype = datatype || XSD_STRING;","    }","  } else {","    // convert string/node object to RDF","    var id = _isObject(item) ? item['@id'] : item;","    object.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';","    object.value = id;","  }","","  // skip relative IRIs","  if(object.type === 'IRI' && !_isAbsoluteIri(object.value)) {","    return null;","  }","","  return object;","}","","/**"," * Converts an RDF triple object to a JSON-LD object."," *"," * @param o the RDF triple object to convert."," * @param useNativeTypes true to output native types, false not to."," *"," * @return the JSON-LD object."," */","function _RDFToObject(o, useNativeTypes) {","  // convert IRI/blank node object to JSON-LD","  if(o.type === 'IRI' || o.type === 'blank node') {","    return {'@id': o.value};","  }","","  // convert literal to JSON-LD","  var rval = {'@value': o.value};","","  // add language","  if(o.language) {","    rval['@language'] = o.language;","  } else {","    var type = o.datatype;","    if(!type) {","      type = XSD_STRING;","    }","    // use native types for certain xsd types","    if(useNativeTypes) {","      if(type === XSD_BOOLEAN) {","        if(rval['@value'] === 'true') {","          rval['@value'] = true;","        } else if(rval['@value'] === 'false') {","          rval['@value'] = false;","        }","      } else if(_isNumeric(rval['@value'])) {","        if(type === XSD_INTEGER) {","          var i = parseInt(rval['@value'], 10);","          if(i.toFixed(0) === rval['@value']) {","            rval['@value'] = i;","          }","        } else if(type === XSD_DOUBLE) {","          rval['@value'] = parseFloat(rval['@value']);","        }","      }","      // do not add native type","      if([XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING]","        .indexOf(type) === -1) {","        rval['@type'] = type;","      }","    } else if(type !== XSD_STRING) {","      rval['@type'] = type;","    }","  }","","  return rval;","}","","/**"," * Compares two RDF triples for equality."," *"," * @param t1 the first triple."," * @param t2 the second triple."," *"," * @return true if the triples are the same, false if not."," */","function _compareRDFTriples(t1, t2) {","  var attrs = ['subject', 'predicate', 'object'];","  for(var i = 0; i < attrs.length; ++i) {","    var attr = attrs[i];","    if(t1[attr].type !== t2[attr].type || t1[attr].value !== t2[attr].value) {","      return false;","    }","  }","  if(t1.object.language !== t2.object.language) {","    return false;","  }","  if(t1.object.datatype !== t2.object.datatype) {","    return false;","  }","  return true;","}","","/////////////////////////////// DEFINE URDNA2015 //////////////////////////////","","var URDNA2015 = (function() {","","var POSITIONS = {'subject': 's', 'object': 'o', 'name': 'g'};","","var Normalize = function(options) {","  options = options || {};","  this.name = 'URDNA2015';","  this.options = options;","  this.blankNodeInfo = {};","  this.hashToBlankNodes = {};","  this.canonicalIssuer = new IdentifierIssuer('_:c14n');","  this.quads = [];","  this.schedule = {};","  if('maxCallStackDepth' in options) {","    this.schedule.MAX_DEPTH = options.maxCallStackDepth;","  } else {","    this.schedule.MAX_DEPTH = 500;","  }","  if('maxTotalCallStackDepth' in options) {","    this.schedule.MAX_TOTAL_DEPTH = options.maxCallStackDepth;","  } else {","    this.schedule.MAX_TOTAL_DEPTH = 0xFFFFFFFF;","  }","  this.schedule.depth = 0;","  this.schedule.totalDepth = 0;","  if('timeSlice' in options) {","    this.schedule.timeSlice = options.timeSlice;","  } else {","    // milliseconds","    this.schedule.timeSlice = 10;","  }","};","","// do some work in a time slice, but in serial","Normalize.prototype.doWork = function(fn, callback) {","  var schedule = this.schedule;","","  if(schedule.totalDepth >= schedule.MAX_TOTAL_DEPTH) {","    return callback(new Error(","      'Maximum total call stack depth exceeded; normalization aborting.'));","  }","","  (function work() {","    if(schedule.depth === schedule.MAX_DEPTH) {","      // stack too deep, run on next tick","      schedule.depth = 0;","      schedule.running = false;","      return jsonld.nextTick(work);","    }","","    // if not yet running, force run","    var now = new Date().getTime();","    if(!schedule.running) {","      schedule.start = new Date().getTime();","      schedule.deadline = schedule.start + schedule.timeSlice;","    }","","    // TODO: should also include an estimate of expectedWorkTime","    if(now < schedule.deadline) {","      schedule.running = true;","      schedule.depth++;","      schedule.totalDepth++;","      return fn(function(err, result) {","        schedule.depth--;","        schedule.totalDepth--;","        callback(err, result);","      });","    }","","    // not enough time left in this slice, run after letting browser","    // do some other things","    schedule.depth = 0;","    schedule.running = false;","    jsonld.setImmediate(work);","  })();","};","","// asynchronously loop","Normalize.prototype.forEach = function(iterable, fn, callback) {","  var self = this;","  var iterator;","  var idx = 0;","  var length;","  if(_isArray(iterable)) {","    length = iterable.length;","    iterator = function() {","      if(idx === length) {","        return false;","      }","      iterator.value = iterable[idx++];","      iterator.key = idx;","      return true;","    };","  } else {","    var keys = Object.keys(iterable);","    length = keys.length;","    iterator = function() {","      if(idx === length) {","        return false;","      }","      iterator.key = keys[idx++];","      iterator.value = iterable[iterator.key];","      return true;","    };","  }","","  (function iterate(err, result) {","    if(err) {","      return callback(err);","    }","    if(iterator()) {","      return self.doWork(function() {","        fn(iterator.value, iterator.key, iterate);","      });","    }","    callback();","  })();","};","","// asynchronous waterfall","Normalize.prototype.waterfall = function(fns, callback) {","  var self = this;","  self.forEach(fns, function(fn, idx, callback) {","    self.doWork(fn, callback);","  }, callback);","};","","// asynchronous while","Normalize.prototype.whilst = function(condition, fn, callback) {","  var self = this;","  (function loop(err) {","    if(err) {","      return callback(err);","    }","    if(!condition()) {","      return callback();","    }","    self.doWork(fn, loop);","  })();","};","","// 4.4) Normalization Algorithm","Normalize.prototype.main = function(dataset, callback) {","  var self = this;","  self.schedule.start = new Date().getTime();","  var result;","","  // handle invalid output format","  if(self.options.format) {","    if(self.options.format !== 'application/nquads') {","      return callback(new JsonLdError(","        'Unknown output format.',","        'jsonld.UnknownFormat', {format: self.options.format}));","    }","  }","","  // 1) Create the normalization state.","","  // Note: Optimize by generating non-normalized blank node map concurrently.","  var nonNormalized = {};","","  self.waterfall([","    function(callback) {","      // 2) For every quad in input dataset:","      self.forEach(dataset, function(triples, graphName, callback) {","        if(graphName === '@default') {","          graphName = null;","        }","        self.forEach(triples, function(quad, idx, callback) {","          if(graphName !== null) {","            if(graphName.indexOf('_:') === 0) {","              quad.name = {type: 'blank node', value: graphName};","            } else {","              quad.name = {type: 'IRI', value: graphName};","            }","          }","          self.quads.push(quad);","","          // 2.1) For each blank node that occurs in the quad, add a reference","          // to the quad using the blank node identifier in the blank node to","          // quads map, creating a new entry if necessary.","          self.forEachComponent(quad, function(component) {","            if(component.type !== 'blank node') {","              return;","            }","            var id = component.value;","            if(id in self.blankNodeInfo) {","              self.blankNodeInfo[id].quads.push(quad);","            } else {","              nonNormalized[id] = true;","              self.blankNodeInfo[id] = {quads: [quad]};","            }","          });","          callback();","        }, callback);","      }, callback);","    },","    function(callback) {","      // 3) Create a list of non-normalized blank node identifiers","      // non-normalized identifiers and populate it using the keys from the","      // blank node to quads map.","      // Note: We use a map here and it was generated during step 2.","","      // 4) Initialize simple, a boolean flag, to true.","      var simple = true;","","      // 5) While simple is true, issue canonical identifiers for blank nodes:","      self.whilst(function() { return simple; }, function(callback) {","        // 5.1) Set simple to false.","        simple = false;","","        // 5.2) Clear hash to blank nodes map.","        self.hashToBlankNodes = {};","","        self.waterfall([","          function(callback) {","            // 5.3) For each blank node identifier identifier in non-normalized","            // identifiers:","            self.forEach(nonNormalized, function(value, id, callback) {","              // 5.3.1) Create a hash, hash, according to the Hash First Degree","              // Quads algorithm.","              self.hashFirstDegreeQuads(id, function(err, hash) {","                if(err) {","                  return callback(err);","                }","                // 5.3.2) Add hash and identifier to hash to blank nodes map,","                // creating a new entry if necessary.","                if(hash in self.hashToBlankNodes) {","                  self.hashToBlankNodes[hash].push(id);","                } else {","                  self.hashToBlankNodes[hash] = [id];","                }","                callback();","              });","            }, callback);","          },","          function(callback) {","            // 5.4) For each hash to identifier list mapping in hash to blank","            // nodes map, lexicographically-sorted by hash:","            var hashes = Object.keys(self.hashToBlankNodes).sort();","            self.forEach(hashes, function(hash, i, callback) {","              // 5.4.1) If the length of identifier list is greater than 1,","              // continue to the next mapping.","              var idList = self.hashToBlankNodes[hash];","              if(idList.length > 1) {","                return callback();","              }","","              // 5.4.2) Use the Issue Identifier algorithm, passing canonical","              // issuer and the single blank node identifier in identifier","              // list, identifier, to issue a canonical replacement identifier","              // for identifier.","              // TODO: consider changing `getId` to `issue`","              var id = idList[0];","              self.canonicalIssuer.getId(id);","","              // 5.4.3) Remove identifier from non-normalized identifiers.","              delete nonNormalized[id];","","              // 5.4.4) Remove hash from the hash to blank nodes map.","              delete self.hashToBlankNodes[hash];","","              // 5.4.5) Set simple to true.","              simple = true;","              callback();","            }, callback);","          }","        ], callback);","      }, callback);","    },","    function(callback) {","      // 6) For each hash to identifier list mapping in hash to blank nodes map,","      // lexicographically-sorted by hash:","      var hashes = Object.keys(self.hashToBlankNodes).sort();","      self.forEach(hashes, function(hash, idx, callback) {","        // 6.1) Create hash path list where each item will be a result of","        // running the Hash N-Degree Quads algorithm.","        var hashPathList = [];","","        // 6.2) For each blank node identifier identifier in identifier list:","        var idList = self.hashToBlankNodes[hash];","        self.waterfall([","          function(callback) {","            self.forEach(idList, function(id, idx, callback) {","              // 6.2.1) If a canonical identifier has already been issued for","              // identifier, continue to the next identifier.","              if(self.canonicalIssuer.hasId(id)) {","                return callback();","              }","","              // 6.2.2) Create temporary issuer, an identifier issuer","              // initialized with the prefix _:b.","              var issuer = new IdentifierIssuer('_:b');","","              // 6.2.3) Use the Issue Identifier algorithm, passing temporary","              // issuer and identifier, to issue a new temporary blank node","              // identifier for identifier.","              issuer.getId(id);","","              // 6.2.4) Run the Hash N-Degree Quads algorithm, passing","              // temporary issuer, and append the result to the hash path list.","              self.hashNDegreeQuads(id, issuer, function(err, result) {","                if(err) {","                  return callback(err);","                }","                hashPathList.push(result);","                callback();","              });","            }, callback);","          },","          function(callback) {","            // 6.3) For each result in the hash path list,","            // lexicographically-sorted by the hash in result:","            hashPathList.sort(function(a, b) {","              return (a.hash < b.hash) ? -1 : ((a.hash > b.hash) ? 1 : 0);","            });","            self.forEach(hashPathList, function(result, idx, callback) {","              // 6.3.1) For each blank node identifier, existing identifier,","              // that was issued a temporary identifier by identifier issuer","              // in result, issue a canonical identifier, in the same order,","              // using the Issue Identifier algorithm, passing canonical","              // issuer and existing identifier.","              for(var existing in result.issuer.existing) {","                self.canonicalIssuer.getId(existing);","              }","              callback();","            }, callback);","          }","        ], callback);","      }, callback);","    }, function(callback) {","      /* Note: At this point all blank nodes in the set of RDF quads have been","      assigned canonical identifiers, which have been stored in the canonical","      issuer. Here each quad is updated by assigning each of its blank nodes","      its new identifier. */","","      // 7) For each quad, quad, in input dataset:","      var normalized = [];","      self.waterfall([","        function(callback) {","          self.forEach(self.quads, function(quad, idx, callback) {","            // 7.1) Create a copy, quad copy, of quad and replace any existing","            // blank node identifiers using the canonical identifiers","            // previously issued by canonical issuer.","            // Note: We optimize away the copy here.","            self.forEachComponent(quad, function(component) {","              if(component.type === 'blank node' &&","                component.value.indexOf(self.canonicalIssuer.prefix) !== 0) {","                component.value = self.canonicalIssuer.getId(component.value);","              }","            });","            // 7.2) Add quad copy to the normalized dataset.","            normalized.push(_toNQuad(quad));","            callback();","          }, callback);","        },","        function(callback) {","          // sort normalized output","          normalized.sort();","","          // 8) Return the normalized dataset.","          if(self.options.format === 'application/nquads') {","            result = normalized.join('');","            return callback();","          }","","          result = _parseNQuads(normalized.join(''));","          callback();","        }","      ], callback);","    }","  ], function(err) {","    callback(err, result);","  });","};","","// 4.6) Hash First Degree Quads","Normalize.prototype.hashFirstDegreeQuads = function(id, callback) {","  var self = this;","","  // return cached hash","  var info = self.blankNodeInfo[id];","  if('hash' in info) {","    return callback(null, info.hash);","  }","","  // 1) Initialize nquads to an empty list. It will be used to store quads in","  // N-Quads format.","  var nquads = [];","","  // 2) Get the list of quads quads associated with the reference blank node","  // identifier in the blank node to quads map.","  var quads = info.quads;","","  // 3) For each quad quad in quads:","  self.forEach(quads, function(quad, idx, callback) {","    // 3.1) Serialize the quad in N-Quads format with the following special","    // rule:","","    // 3.1.1) If any component in quad is an blank node, then serialize it","    // using a special identifier as follows:","    var copy = {predicate: quad.predicate};","    self.forEachComponent(quad, function(component, key) {","      // 3.1.2) If the blank node's existing blank node identifier matches the","      // reference blank node identifier then use the blank node identifier _:a,","      // otherwise, use the blank node identifier _:z.","      copy[key] = self.modifyFirstDegreeComponent(id, component, key);","    });","    nquads.push(_toNQuad(copy));","    callback();","  }, function(err) {","    if(err) {","      return callback(err);","    }","    // 4) Sort nquads in lexicographical order.","    nquads.sort();","","    // 5) Return the hash that results from passing the sorted, joined nquads","    // through the hash algorithm.","    info.hash = NormalizeHash.hashNQuads(self.name, nquads);","    callback(null, info.hash);","  });","};","","// helper for modifying component during Hash First Degree Quads","Normalize.prototype.modifyFirstDegreeComponent = function(id, component) {","  if(component.type !== 'blank node') {","    return component;","  }","  component = _clone(component);","  component.value = (component.value === id ? '_:a' : '_:z');","  return component;","};","","// 4.7) Hash Related Blank Node","Normalize.prototype.hashRelatedBlankNode = function(","  related, quad, issuer, position, callback) {","  var self = this;","","  // 1) Set the identifier to use for related, preferring first the canonical","  // identifier for related if issued, second the identifier issued by issuer","  // if issued, and last, if necessary, the result of the Hash First Degree","  // Quads algorithm, passing related.","  var id;","  self.waterfall([","    function(callback) {","      if(self.canonicalIssuer.hasId(related)) {","        id = self.canonicalIssuer.getId(related);","        return callback();","      }","      if(issuer.hasId(related)) {","        id = issuer.getId(related);","        return callback();","      }","      self.hashFirstDegreeQuads(related, function(err, hash) {","        if(err) {","          return callback(err);","        }","        id = hash;","        callback();","      });","    }","  ], function(err) {","    if(err) {","      return callback(err);","    }","","    // 2) Initialize a string input to the value of position.","    // Note: We use a hash object instead.","    var md = new NormalizeHash(self.name);","    md.update(position);","","    // 3) If position is not g, append <, the value of the predicate in quad,","    // and > to input.","    if(position !== 'g') {","      md.update(self.getRelatedPredicate(quad));","    }","","    // 4) Append identifier to input.","    md.update(id);","","    // 5) Return the hash that results from passing input through the hash","    // algorithm.","    return callback(null, md.digest());","  });","};","","// helper for getting a related predicate","Normalize.prototype.getRelatedPredicate = function(quad) {","  return '<' + quad.predicate.value + '>';","};","","// 4.8) Hash N-Degree Quads","Normalize.prototype.hashNDegreeQuads = function(id, issuer, callback) {","  var self = this;","","  // 1) Create a hash to related blank nodes map for storing hashes that","  // identify related blank nodes.","  // Note: 2) and 3) handled within `createHashToRelated`","  var hashToRelated;","  var md = new NormalizeHash(self.name);","  self.waterfall([","    function(callback) {","      self.createHashToRelated(id, issuer, function(err, result) {","        if(err) {","          return callback(err);","        }","        hashToRelated = result;","        callback();","      });","    },","    function(callback) {","      // 4) Create an empty string, data to hash.","      // Note: We created a hash object `md` above instead.","","      // 5) For each related hash to blank node list mapping in hash to related","      // blank nodes map, sorted lexicographically by related hash:","      var hashes = Object.keys(hashToRelated).sort();","      self.forEach(hashes, function(hash, idx, callback) {","        // 5.1) Append the related hash to the data to hash.","        md.update(hash);","","        // 5.2) Create a string chosen path.","        var chosenPath = '';","","        // 5.3) Create an unset chosen issuer variable.","        var chosenIssuer;","","        // 5.4) For each permutation of blank node list:","        var permutator = new Permutator(hashToRelated[hash]);","        self.whilst(","          function() { return permutator.hasNext(); },","          function(nextPermutation) {","          var permutation = permutator.next();","","          // 5.4.1) Create a copy of issuer, issuer copy.","          var issuerCopy = issuer.clone();","","          // 5.4.2) Create a string path.","          var path = '';","","          // 5.4.3) Create a recursion list, to store blank node identifiers","          // that must be recursively processed by this algorithm.","          var recursionList = [];","","          self.waterfall([","            function(callback) {","              // 5.4.4) For each related in permutation:","              self.forEach(permutation, function(related, idx, callback) {","                // 5.4.4.1) If a canonical identifier has been issued for","                // related, append it to path.","                if(self.canonicalIssuer.hasId(related)) {","                  path += self.canonicalIssuer.getId(related);","                } else {","                  // 5.4.4.2) Otherwise:","                  // 5.4.4.2.1) If issuer copy has not issued an identifier for","                  // related, append related to recursion list.","                  if(!issuerCopy.hasId(related)) {","                    recursionList.push(related);","                  }","                  // 5.4.4.2.2) Use the Issue Identifier algorithm, passing","                  // issuer copy and related and append the result to path.","                  path += issuerCopy.getId(related);","                }","","                // 5.4.4.3) If chosen path is not empty and the length of path","                // is greater than or equal to the length of chosen path and","                // path is lexicographically greater than chosen path, then","                // skip to the next permutation.","                if(chosenPath.length !== 0 &&","                  path.length >= chosenPath.length && path > chosenPath) {","                  // FIXME: may cause inaccurate total depth calculation","                  return nextPermutation();","                }","                callback();","              }, callback);","            },","            function(callback) {","              // 5.4.5) For each related in recursion list:","              self.forEach(recursionList, function(related, idx, callback) {","                // 5.4.5.1) Set result to the result of recursively executing","                // the Hash N-Degree Quads algorithm, passing related for","                // identifier and issuer copy for path identifier issuer.","                self.hashNDegreeQuads(","                  related, issuerCopy, function(err, result) {","                  if(err) {","                    return callback(err);","                  }","","                  // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer","                  // copy and related and append the result to path.","                  path += issuerCopy.getId(related);","","                  // 5.4.5.3) Append <, the hash in result, and > to path.","                  path += '<' + result.hash + '>';","","                  // 5.4.5.4) Set issuer copy to the identifier issuer in","                  // result.","                  issuerCopy = result.issuer;","","                  // 5.4.5.5) If chosen path is not empty and the length of path","                  // is greater than or equal to the length of chosen path and","                  // path is lexicographically greater than chosen path, then","                  // skip to the next permutation.","                  if(chosenPath.length !== 0 &&","                    path.length >= chosenPath.length && path > chosenPath) {","                    // FIXME: may cause inaccurate total depth calculation","                    return nextPermutation();","                  }","                  callback();","                });","              }, callback);","            },","            function(callback) {","              // 5.4.6) If chosen path is empty or path is lexicographically","              // less than chosen path, set chosen path to path and chosen","              // issuer to issuer copy.","              if(chosenPath.length === 0 || path < chosenPath) {","                chosenPath = path;","                chosenIssuer = issuerCopy;","              }","              callback();","            }","          ], nextPermutation);","        }, function(err) {","          if(err) {","            return callback(err);","          }","","          // 5.5) Append chosen path to data to hash.","          md.update(chosenPath);","","          // 5.6) Replace issuer, by reference, with chosen issuer.","          issuer = chosenIssuer;","          callback();","        });","      }, callback);","    }","  ], function(err) {","    // 6) Return issuer and the hash that results from passing data to hash","    // through the hash algorithm.","    callback(err, {hash: md.digest(), issuer: issuer});","  });","};","","// helper for creating hash to related blank nodes map","Normalize.prototype.createHashToRelated = function(id, issuer, callback) {","  var self = this;","","  // 1) Create a hash to related blank nodes map for storing hashes that","  // identify related blank nodes.","  var hashToRelated = {};","","  // 2) Get a reference, quads, to the list of quads in the blank node to","  // quads map for the key identifier.","  var quads = self.blankNodeInfo[id].quads;","","  // 3) For each quad in quads:","  self.forEach(quads, function(quad, idx, callback) {","    // 3.1) For each component in quad, if component is the subject, object,","    // and graph name and it is a blank node that is not identified by","    // identifier:","    self.forEach(quad, function(component, key, callback) {","      if(key === 'predicate' ||","        !(component.type === 'blank node' && component.value !== id)) {","        return callback();","      }","      // 3.1.1) Set hash to the result of the Hash Related Blank Node","      // algorithm, passing the blank node identifier for component as","      // related, quad, path identifier issuer as issuer, and position as","      // either s, o, or g based on whether component is a subject, object,","      // graph name, respectively.","      var related = component.value;","      var position = POSITIONS[key];","      self.hashRelatedBlankNode(","        related, quad, issuer, position, function(err, hash) {","        if(err) {","          return callback(err);","        }","        // 3.1.2) Add a mapping of hash to the blank node identifier for","        // component to hash to related blank nodes map, adding an entry as","        // necessary.","        if(hash in hashToRelated) {","          hashToRelated[hash].push(related);","        } else {","          hashToRelated[hash] = [related];","        }","        callback();","      });","    }, callback);","  }, function(err) {","    callback(err, hashToRelated);","  });","};","","// helper that iterates over quad components (skips predicate)","Normalize.prototype.forEachComponent = function(quad, op) {","  for(var key in quad) {","    // skip `predicate`","    if(key === 'predicate') {","      continue;","    }","    op(quad[key], key, quad);","  }","};","","return Normalize;","","})(); // end of define URDNA2015","","/////////////////////////////// DEFINE URGNA2012 //////////////////////////////","","var URGNA2012 = (function() {","","var Normalize = function(options) {","  URDNA2015.call(this, options);","  this.name = 'URGNA2012';","};","Normalize.prototype = new URDNA2015();","","// helper for modifying component during Hash First Degree Quads","Normalize.prototype.modifyFirstDegreeComponent = function(id, component, key) {","  if(component.type !== 'blank node') {","    return component;","  }","  component = _clone(component);","  if(key === 'name') {","    component.value = '_:g';","  } else {","    component.value = (component.value === id ? '_:a' : '_:z');","  }","  return component;","};","","// helper for getting a related predicate","Normalize.prototype.getRelatedPredicate = function(quad) {","  return quad.predicate.value;","};","","// helper for creating hash to related blank nodes map","Normalize.prototype.createHashToRelated = function(id, issuer, callback) {","  var self = this;","","  // 1) Create a hash to related blank nodes map for storing hashes that","  // identify related blank nodes.","  var hashToRelated = {};","","  // 2) Get a reference, quads, to the list of quads in the blank node to","  // quads map for the key identifier.","  var quads = self.blankNodeInfo[id].quads;","","  // 3) For each quad in quads:","  self.forEach(quads, function(quad, idx, callback) {","    // 3.1) If the quad's subject is a blank node that does not match","    // identifier, set hash to the result of the Hash Related Blank Node","    // algorithm, passing the blank node identifier for subject as related,","    // quad, path identifier issuer as issuer, and p as position.","    var position;","    var related;","    if(quad.subject.type === 'blank node' && quad.subject.value !== id) {","      related = quad.subject.value;","      position = 'p';","    } else if(quad.object.type === 'blank node' && quad.object.value !== id) {","      // 3.2) Otherwise, if quad's object is a blank node that does not match","      // identifier, to the result of the Hash Related Blank Node algorithm,","      // passing the blank node identifier for object as related, quad, path","      // identifier issuer as issuer, and r as position.","      related = quad.object.value;","      position = 'r';","    } else {","      // 3.3) Otherwise, continue to the next quad.","      return callback();","    }","    // 3.4) Add a mapping of hash to the blank node identifier for the","    // component that matched (subject or object) to hash to related blank","    // nodes map, adding an entry as necessary.","    self.hashRelatedBlankNode(","      related, quad, issuer, position, function(err, hash) {","      if(hash in hashToRelated) {","        hashToRelated[hash].push(related);","      } else {","        hashToRelated[hash] = [related];","      }","      callback();","    });","  }, function(err) {","    callback(err, hashToRelated);","  });","};","","return Normalize;","","})(); // end of define URGNA2012","","/**"," * Recursively flattens the subjects in the given JSON-LD expanded input"," * into a node map."," *"," * @param input the JSON-LD expanded input."," * @param graphs a map of graph name to subject map."," * @param graph the name of the current graph."," * @param issuer the blank node identifier issuer."," * @param name the name assigned to the current input if it is a bnode."," * @param list the list to append to, null for none."," */","function _createNodeMap(input, graphs, graph, issuer, name, list) {","  // recurse through array","  if(_isArray(input)) {","    for(var i = 0; i < input.length; ++i) {","      _createNodeMap(input[i], graphs, graph, issuer, undefined, list);","    }","    return;","  }","","  // add non-object to list","  if(!_isObject(input)) {","    if(list) {","      list.push(input);","    }","    return;","  }","","  // add values to list","  if(_isValue(input)) {","    if('@type' in input) {","      var type = input['@type'];","      // rename @type blank node","      if(type.indexOf('_:') === 0) {","        input['@type'] = type = issuer.getId(type);","      }","    }","    if(list) {","      list.push(input);","    }","    return;","  }","","  // Note: At this point, input must be a subject.","","  // spec requires @type to be named first, so assign names early","  if('@type' in input) {","    var types = input['@type'];","    for(var i = 0; i < types.length; ++i) {","      var type = types[i];","      if(type.indexOf('_:') === 0) {","        issuer.getId(type);","      }","    }","  }","","  // get name for subject","  if(_isUndefined(name)) {","    name = _isBlankNode(input) ? issuer.getId(input['@id']) : input['@id'];","  }","","  // add subject reference to list","  if(list) {","    list.push({'@id': name});","  }","","  // create new subject or merge into existing one","  var subjects = graphs[graph];","  var subject = subjects[name] = subjects[name] || {};","  subject['@id'] = name;","  var properties = Object.keys(input).sort();","  for(var pi = 0; pi < properties.length; ++pi) {","    var property = properties[pi];","","    // skip @id","    if(property === '@id') {","      continue;","    }","","    // handle reverse properties","    if(property === '@reverse') {","      var referencedNode = {'@id': name};","      var reverseMap = input['@reverse'];","      for(var reverseProperty in reverseMap) {","        var items = reverseMap[reverseProperty];","        for(var ii = 0; ii < items.length; ++ii) {","          var item = items[ii];","          var itemName = item['@id'];","          if(_isBlankNode(item)) {","            itemName = issuer.getId(itemName);","          }","          _createNodeMap(item, graphs, graph, issuer, itemName);","          jsonld.addValue(","            subjects[itemName], reverseProperty, referencedNode,","            {propertyIsArray: true, allowDuplicate: false});","        }","      }","      continue;","    }","","    // recurse into graph","    if(property === '@graph') {","      // add graph subjects map entry","      if(!(name in graphs)) {","        graphs[name] = {};","      }","      var g = (graph === '@merged') ? graph : name;","      _createNodeMap(input[property], graphs, g, issuer);","      continue;","    }","","    // copy non-@type keywords","    if(property !== '@type' && _isKeyword(property)) {","      if(property === '@index' && property in subject &&","        (input[property] !== subject[property] ||","        input[property]['@id'] !== subject[property]['@id'])) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; conflicting @index property detected.',","          'jsonld.SyntaxError',","          {code: 'conflicting indexes', subject: subject});","      }","      subject[property] = input[property];","      continue;","    }","","    // iterate over objects","    var objects = input[property];","","    // if property is a bnode, assign it a new id","    if(property.indexOf('_:') === 0) {","      property = issuer.getId(property);","    }","","    // ensure property is added for empty arrays","    if(objects.length === 0) {","      jsonld.addValue(subject, property, [], {propertyIsArray: true});","      continue;","    }","    for(var oi = 0; oi < objects.length; ++oi) {","      var o = objects[oi];","","      if(property === '@type') {","        // rename @type blank nodes","        o = (o.indexOf('_:') === 0) ? issuer.getId(o) : o;","      }","","      // handle embedded subject or subject reference","      if(_isSubject(o) || _isSubjectReference(o)) {","        // relabel blank node @id","        var id = _isBlankNode(o) ? issuer.getId(o['@id']) : o['@id'];","","        // add reference and recurse","        jsonld.addValue(","          subject, property, {'@id': id},","          {propertyIsArray: true, allowDuplicate: false});","        _createNodeMap(o, graphs, graph, issuer, id);","      } else if(_isList(o)) {","        // handle @list","        var _list = [];","        _createNodeMap(o['@list'], graphs, graph, issuer, name, _list);","        o = {'@list': _list};","        jsonld.addValue(","          subject, property, o,","          {propertyIsArray: true, allowDuplicate: false});","      } else {","        // handle @value","        _createNodeMap(o, graphs, graph, issuer, name);","        jsonld.addValue(","          subject, property, o, {propertyIsArray: true, allowDuplicate: false});","      }","    }","  }","}","","function _mergeNodeMaps(graphs) {","  // add all non-default graphs to default graph","  var defaultGraph = graphs['@default'];","  var graphNames = Object.keys(graphs).sort();","  for(var i = 0; i < graphNames.length; ++i) {","    var graphName = graphNames[i];","    if(graphName === '@default') {","      continue;","    }","    var nodeMap = graphs[graphName];","    var subject = defaultGraph[graphName];","    if(!subject) {","      defaultGraph[graphName] = subject = {","        '@id': graphName,","        '@graph': []","      };","    } else if(!('@graph' in subject)) {","      subject['@graph'] = [];","    }","    var graph = subject['@graph'];","    var ids = Object.keys(nodeMap).sort();","    for(var ii = 0; ii < ids.length; ++ii) {","      var node = nodeMap[ids[ii]];","      // only add full subjects","      if(!_isSubjectReference(node)) {","        graph.push(node);","      }","    }","  }","  return defaultGraph;","}","","/**"," * Frames subjects according to the given frame."," *"," * @param state the current framing state."," * @param subjects the subjects to filter."," * @param frame the frame."," * @param parent the parent subject or top-level array."," * @param property the parent property, initialized to null."," */","function _frame(state, subjects, frame, parent, property) {","  // validate the frame","  _validateFrame(frame);","  frame = frame[0];","","  // get flags for current frame","  var options = state.options;","  var flags = {","    embed: _getFrameFlag(frame, options, 'embed'),","    explicit: _getFrameFlag(frame, options, 'explicit'),","    requireAll: _getFrameFlag(frame, options, 'requireAll')","  };","","  // filter out subjects that match the frame","  var matches = _filterSubjects(state, subjects, frame, flags);","","  // add matches to output","  var ids = Object.keys(matches).sort();","  for(var idx = 0; idx < ids.length; ++idx) {","    var id = ids[idx];","    var subject = matches[id];","","    if(flags.embed === '@link' && id in state.link) {","      // TODO: may want to also match an existing linked subject against","      // the current frame ... so different frames could produce different","      // subjects that are only shared in-memory when the frames are the same","","      // add existing linked subject","      _addFrameOutput(parent, property, state.link[id]);","      continue;","    }","","    /* Note: In order to treat each top-level match as a compartmentalized","    result, clear the unique embedded subjects map when the property is null,","    which only occurs at the top-level. */","    if(property === null) {","      state.uniqueEmbeds = {};","    }","","    // start output for subject","    var output = {};","    output['@id'] = id;","    state.link[id] = output;","","    // if embed is @never or if a circular reference would be created by an","    // embed, the subject cannot be embedded, just add the reference;","    // note that a circular reference won't occur when the embed flag is","    // `@link` as the above check will short-circuit before reaching this point","    if(flags.embed === '@never' ||","      _createsCircularReference(subject, state.subjectStack)) {","      _addFrameOutput(parent, property, output);","      continue;","    }","","    // if only the last match should be embedded","    if(flags.embed === '@last') {","      // remove any existing embed","      if(id in state.uniqueEmbeds) {","        _removeEmbed(state, id);","      }","      state.uniqueEmbeds[id] = {parent: parent, property: property};","    }","","    // push matching subject onto stack to enable circular embed checks","    state.subjectStack.push(subject);","","    // iterate over subject properties","    var props = Object.keys(subject).sort();","    for(var i = 0; i < props.length; i++) {","      var prop = props[i];","","      // copy keywords to output","      if(_isKeyword(prop)) {","        output[prop] = _clone(subject[prop]);","        continue;","      }","","      // explicit is on and property isn't in the frame, skip processing","      if(flags.explicit && !(prop in frame)) {","        continue;","      }","","      // add objects","      var objects = subject[prop];","      for(var oi = 0; oi < objects.length; ++oi) {","        var o = objects[oi];","","        // recurse into list","        if(_isList(o)) {","          // add empty list","          var list = {'@list': []};","          _addFrameOutput(output, prop, list);","","          // add list objects","          var src = o['@list'];","          for(var n in src) {","            o = src[n];","            if(_isSubjectReference(o)) {","              var subframe = (prop in frame ?","                frame[prop][0]['@list'] : _createImplicitFrame(flags));","              // recurse into subject reference","              _frame(state, [o['@id']], subframe, list, '@list');","            } else {","              // include other values automatically","              _addFrameOutput(list, '@list', _clone(o));","            }","          }","          continue;","        }","","        if(_isSubjectReference(o)) {","          // recurse into subject reference","          var subframe = (prop in frame ?","            frame[prop] : _createImplicitFrame(flags));","          _frame(state, [o['@id']], subframe, output, prop);","        } else {","          // include other values automatically","          _addFrameOutput(output, prop, _clone(o));","        }","      }","    }","","    // handle defaults","    var props = Object.keys(frame).sort();","    for(var i = 0; i < props.length; ++i) {","      var prop = props[i];","","      // skip keywords","      if(_isKeyword(prop)) {","        continue;","      }","","      // if omit default is off, then include default values for properties","      // that appear in the next frame but are not in the matching subject","      var next = frame[prop][0];","      var omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');","      if(!omitDefaultOn && !(prop in output)) {","        var preserve = '@null';","        if('@default' in next) {","          preserve = _clone(next['@default']);","        }","        if(!_isArray(preserve)) {","          preserve = [preserve];","        }","        output[prop] = [{'@preserve': preserve}];","      }","    }","","    // add output to parent","    _addFrameOutput(parent, property, output);","","    // pop matching subject from circular ref-checking stack","    state.subjectStack.pop();","  }","}","","/**"," * Creates an implicit frame when recursing through subject matches. If"," * a frame doesn't have an explicit frame for a particular property, then"," * a wildcard child frame will be created that uses the same flags that the"," * parent frame used."," *"," * @param flags the current framing flags."," *"," * @return the implicit frame."," */","function _createImplicitFrame(flags) {","  var frame = {};","  for(var key in flags) {","    if(flags[key] !== undefined) {","      frame['@' + key] = [flags[key]];","    }","  }","  return [frame];","}","","/**"," * Checks the current subject stack to see if embedding the given subject"," * would cause a circular reference."," *"," * @param subjectToEmbed the subject to embed."," * @param subjectStack the current stack of subjects."," *"," * @return true if a circular reference would be created, false if not."," */","function _createsCircularReference(subjectToEmbed, subjectStack) {","  for(var i = subjectStack.length - 1; i >= 0; --i) {","    if(subjectStack[i]['@id'] === subjectToEmbed['@id']) {","      return true;","    }","  }","  return false;","}","","/**"," * Gets the frame flag value for the given flag name."," *"," * @param frame the frame."," * @param options the framing options."," * @param name the flag name."," *"," * @return the flag value."," */","function _getFrameFlag(frame, options, name) {","  var flag = '@' + name;","  var rval = (flag in frame ? frame[flag][0] : options[name]);","  if(name === 'embed') {","    // default is \"@last\"","    // backwards-compatibility support for \"embed\" maps:","    // true => \"@last\"","    // false => \"@never\"","    if(rval === true) {","      rval = '@last';","    } else if(rval === false) {","      rval = '@never';","    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link') {","      rval = '@last';","    }","  }","  return rval;","}","","/**"," * Validates a JSON-LD frame, throwing an exception if the frame is invalid."," *"," * @param frame the frame to validate."," */","function _validateFrame(frame) {","  if(!_isArray(frame) || frame.length !== 1 || !_isObject(frame[0])) {","    throw new JsonLdError(","      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',","      'jsonld.SyntaxError', {frame: frame});","  }","}","","/**"," * Returns a map of all of the subjects that match a parsed frame."," *"," * @param state the current framing state."," * @param subjects the set of subjects to filter."," * @param frame the parsed frame."," * @param flags the frame flags."," *"," * @return all of the matched subjects."," */","function _filterSubjects(state, subjects, frame, flags) {","  // filter subjects in @id order","  var rval = {};","  for(var i = 0; i < subjects.length; ++i) {","    var id = subjects[i];","    var subject = state.subjects[id];","    if(_filterSubject(subject, frame, flags)) {","      rval[id] = subject;","    }","  }","  return rval;","}","","/**"," * Returns true if the given subject matches the given frame."," *"," * @param subject the subject to check."," * @param frame the frame to check."," * @param flags the frame flags."," *"," * @return true if the subject matches, false if not."," */","function _filterSubject(subject, frame, flags) {","  // check @type (object value means 'any' type, fall through to ducktyping)","  if('@type' in frame &&","    !(frame['@type'].length === 1 && _isObject(frame['@type'][0]))) {","    var types = frame['@type'];","    for(var i = 0; i < types.length; ++i) {","      // any matching @type is a match","      if(jsonld.hasValue(subject, '@type', types[i])) {","        return true;","      }","    }","    return false;","  }","","  // check ducktype","  var wildcard = true;","  var matchesSome = false;","  for(var key in frame) {","    if(_isKeyword(key)) {","      // skip non-@id and non-@type","      if(key !== '@id' && key !== '@type') {","        continue;","      }","      wildcard = false;","","      // check @id for a specific @id value","      if(key === '@id' && _isString(frame[key])) {","        if(subject[key] !== frame[key]) {","          return false;","        }","        matchesSome = true;","        continue;","      }","    }","","    wildcard = false;","","    if(key in subject) {","      // frame[key] === [] means do not match if property is present","      if(_isArray(frame[key]) && frame[key].length === 0 &&","        subject[key] !== undefined) {","        return false;","      }","      matchesSome = true;","      continue;","    }","","    // all properties must match to be a duck unless a @default is specified","    var hasDefault = (_isArray(frame[key]) && _isObject(frame[key][0]) &&","      '@default' in frame[key][0]);","    if(flags.requireAll && !hasDefault) {","      return false;","    }","  }","","  // return true if wildcard or subject matches some properties","  return wildcard || matchesSome;","}","","/**"," * Removes an existing embed."," *"," * @param state the current framing state."," * @param id the @id of the embed to remove."," */","function _removeEmbed(state, id) {","  // get existing embed","  var embeds = state.uniqueEmbeds;","  var embed = embeds[id];","  var parent = embed.parent;","  var property = embed.property;","","  // create reference to replace embed","  var subject = {'@id': id};","","  // remove existing embed","  if(_isArray(parent)) {","    // replace subject with reference","    for(var i = 0; i < parent.length; ++i) {","      if(jsonld.compareValues(parent[i], subject)) {","        parent[i] = subject;","        break;","      }","    }","  } else {","    // replace subject with reference","    var useArray = _isArray(parent[property]);","    jsonld.removeValue(parent, property, subject, {propertyIsArray: useArray});","    jsonld.addValue(parent, property, subject, {propertyIsArray: useArray});","  }","","  // recursively remove dependent dangling embeds","  var removeDependents = function(id) {","    // get embed keys as a separate array to enable deleting keys in map","    var ids = Object.keys(embeds);","    for(var i = 0; i < ids.length; ++i) {","      var next = ids[i];","      if(next in embeds && _isObject(embeds[next].parent) &&","        embeds[next].parent['@id'] === id) {","        delete embeds[next];","        removeDependents(next);","      }","    }","  };","  removeDependents(id);","}","","/**"," * Adds framing output to the given parent."," *"," * @param parent the parent to add to."," * @param property the parent property."," * @param output the output to add."," */","function _addFrameOutput(parent, property, output) {","  if(_isObject(parent)) {","    jsonld.addValue(parent, property, output, {propertyIsArray: true});","  } else {","    parent.push(output);","  }","}","","/**"," * Removes the @preserve keywords as the last step of the framing algorithm."," *"," * @param ctx the active context used to compact the input."," * @param input the framed, compacted output."," * @param options the compaction options used."," *"," * @return the resulting output."," */","function _removePreserve(ctx, input, options) {","  // recurse through arrays","  if(_isArray(input)) {","    var output = [];","    for(var i = 0; i < input.length; ++i) {","      var result = _removePreserve(ctx, input[i], options);","      // drop nulls from arrays","      if(result !== null) {","        output.push(result);","      }","    }","    input = output;","  } else if(_isObject(input)) {","    // remove @preserve","    if('@preserve' in input) {","      if(input['@preserve'] === '@null') {","        return null;","      }","      return input['@preserve'];","    }","","    // skip @values","    if(_isValue(input)) {","      return input;","    }","","    // recurse through @lists","    if(_isList(input)) {","      input['@list'] = _removePreserve(ctx, input['@list'], options);","      return input;","    }","","    // handle in-memory linked nodes","    var idAlias = _compactIri(ctx, '@id');","    if(idAlias in input) {","      var id = input[idAlias];","      if(id in options.link) {","        var idx = options.link[id].indexOf(input);","        if(idx === -1) {","          // prevent circular visitation","          options.link[id].push(input);","        } else {","          // already visited","          return options.link[id][idx];","        }","      } else {","        // prevent circular visitation","        options.link[id] = [input];","      }","    }","","    // recurse through properties","    for(var prop in input) {","      var result = _removePreserve(ctx, input[prop], options);","      var container = jsonld.getContextValue(ctx, prop, '@container');","      if(options.compactArrays && _isArray(result) && result.length === 1 &&","        container === null) {","        result = result[0];","      }","      input[prop] = result;","    }","  }","  return input;","}","","/**"," * Compares two strings first based on length and then lexicographically."," *"," * @param a the first string."," * @param b the second string."," *"," * @return -1 if a < b, 1 if a > b, 0 if a == b."," */","function _compareShortestLeast(a, b) {","  if(a.length < b.length) {","    return -1;","  }","  if(b.length < a.length) {","    return 1;","  }","  if(a === b) {","    return 0;","  }","  return (a < b) ? -1 : 1;","}","","/**"," * Picks the preferred compaction term from the given inverse context entry."," *"," * @param activeCtx the active context."," * @param iri the IRI to pick the term for."," * @param value the value to pick the term for."," * @param containers the preferred containers."," * @param typeOrLanguage either '@type' or '@language'."," * @param typeOrLanguageValue the preferred value for '@type' or '@language'."," *"," * @return the preferred term."," */","function _selectTerm(","  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {","  if(typeOrLanguageValue === null) {","    typeOrLanguageValue = '@null';","  }","","  // preferences for the value of @type or @language","  var prefs = [];","","  // determine prefs for @id based on whether or not value compacts to a term","  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&","    _isSubjectReference(value)) {","    // prefer @reverse first","    if(typeOrLanguageValue === '@reverse') {","      prefs.push('@reverse');","    }","    // try to compact value to a term","    var term = _compactIri(activeCtx, value['@id'], null, {vocab: true});","    if(term in activeCtx.mappings &&","      activeCtx.mappings[term] &&","      activeCtx.mappings[term]['@id'] === value['@id']) {","      // prefer @vocab","      prefs.push.apply(prefs, ['@vocab', '@id']);","    } else {","      // prefer @id","      prefs.push.apply(prefs, ['@id', '@vocab']);","    }","  } else {","    prefs.push(typeOrLanguageValue);","  }","  prefs.push('@none');","","  var containerMap = activeCtx.inverse[iri];","  for(var ci = 0; ci < containers.length; ++ci) {","    // if container not available in the map, continue","    var container = containers[ci];","    if(!(container in containerMap)) {","      continue;","    }","","    var typeOrLanguageValueMap = containerMap[container][typeOrLanguage];","    for(var pi = 0; pi < prefs.length; ++pi) {","      // if type/language option not available in the map, continue","      var pref = prefs[pi];","      if(!(pref in typeOrLanguageValueMap)) {","        continue;","      }","","      // select term","      return typeOrLanguageValueMap[pref];","    }","  }","","  return null;","}","","/**"," * Compacts an IRI or keyword into a term or prefix if it can be. If the"," * IRI has an associated value it may be passed."," *"," * @param activeCtx the active context to use."," * @param iri the IRI to compact."," * @param value the value to check or null."," * @param relativeTo options for how to compact IRIs:"," *          vocab: true to split after @vocab, false not to."," * @param reverse true if a reverse property is being compacted, false if not."," *"," * @return the compacted term, prefix, keyword alias, or the original IRI."," */","function _compactIri(activeCtx, iri, value, relativeTo, reverse) {","  // can't compact null","  if(iri === null) {","    return iri;","  }","","  // default value and parent to null","  if(_isUndefined(value)) {","    value = null;","  }","  // default reverse to false","  if(_isUndefined(reverse)) {","    reverse = false;","  }","  relativeTo = relativeTo || {};","","  var inverseCtx = activeCtx.getInverse();","","  // if term is a keyword, it can only be compacted to a simple alias","  if(_isKeyword(iri)) {","    if(iri in inverseCtx) {","      return inverseCtx[iri]['@none']['@type']['@none'];","    }","    return iri;","  }","","  // use inverse context to pick a term if iri is relative to vocab","  if(relativeTo.vocab && iri in inverseCtx) {","    var defaultLanguage = activeCtx['@language'] || '@none';","","    // prefer @index if available in value","    var containers = [];","    if(_isObject(value) && '@index' in value) {","      containers.push('@index');","    }","","    // defaults for term selection based on type/language","    var typeOrLanguage = '@language';","    var typeOrLanguageValue = '@null';","","    if(reverse) {","      typeOrLanguage = '@type';","      typeOrLanguageValue = '@reverse';","      containers.push('@set');","    } else if(_isList(value)) {","      // choose the most specific term that works for all elements in @list","      // only select @list containers if @index is NOT in value","      if(!('@index' in value)) {","        containers.push('@list');","      }","      var list = value['@list'];","      var commonLanguage = (list.length === 0) ? defaultLanguage : null;","      var commonType = null;","      for(var i = 0; i < list.length; ++i) {","        var item = list[i];","        var itemLanguage = '@none';","        var itemType = '@none';","        if(_isValue(item)) {","          if('@language' in item) {","            itemLanguage = item['@language'];","          } else if('@type' in item) {","            itemType = item['@type'];","          } else {","            // plain literal","            itemLanguage = '@null';","          }","        } else {","          itemType = '@id';","        }","        if(commonLanguage === null) {","          commonLanguage = itemLanguage;","        } else if(itemLanguage !== commonLanguage && _isValue(item)) {","          commonLanguage = '@none';","        }","        if(commonType === null) {","          commonType = itemType;","        } else if(itemType !== commonType) {","          commonType = '@none';","        }","        // there are different languages and types in the list, so choose","        // the most generic term, no need to keep iterating the list","        if(commonLanguage === '@none' && commonType === '@none') {","          break;","        }","      }","      commonLanguage = commonLanguage || '@none';","      commonType = commonType || '@none';","      if(commonType !== '@none') {","        typeOrLanguage = '@type';","        typeOrLanguageValue = commonType;","      } else {","        typeOrLanguageValue = commonLanguage;","      }","    } else {","      if(_isValue(value)) {","        if('@language' in value && !('@index' in value)) {","          containers.push('@language');","          typeOrLanguageValue = value['@language'];","        } else if('@type' in value) {","          typeOrLanguage = '@type';","          typeOrLanguageValue = value['@type'];","        }","      } else {","        typeOrLanguage = '@type';","        typeOrLanguageValue = '@id';","      }","      containers.push('@set');","    }","","    // do term selection","    containers.push('@none');","    var term = _selectTerm(","      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);","    if(term !== null) {","      return term;","    }","  }","","  // no term match, use @vocab if available","  if(relativeTo.vocab) {","    if('@vocab' in activeCtx) {","      // determine if vocab is a prefix of the iri","      var vocab = activeCtx['@vocab'];","      if(iri.indexOf(vocab) === 0 && iri !== vocab) {","        // use suffix as relative iri if it is not a term in the active context","        var suffix = iri.substr(vocab.length);","        if(!(suffix in activeCtx.mappings)) {","          return suffix;","        }","      }","    }","  }","","  // no term or @vocab match, check for possible CURIEs","  var choice = null;","  var idx = 0;","  var partialMatches = [];","  var iriMap = activeCtx.fastCurieMap;","  // check for partial matches of against `iri`, which means look until","  // iri.length - 1, not full length","  var maxPartialLength = iri.length - 1;","  for(; idx < maxPartialLength && iri[idx] in iriMap; ++idx) {","    iriMap = iriMap[iri[idx]];","    if('' in iriMap) {","      partialMatches.push(iriMap[''][0]);","    }","  }","  // check partial matches in reverse order to prefer longest ones first","  for(var i = partialMatches.length - 1; i >= 0; --i) {","    var entry = partialMatches[i];","    var terms = entry.terms;","    for(var ti = 0; ti < terms.length; ++ti) {","      // a CURIE is usable if:","      // 1. it has no mapping, OR","      // 2. value is null, which means we're not compacting an @value, AND","      //   the mapping matches the IRI","      var curie = terms[ti] + ':' + iri.substr(entry.iri.length);","      var isUsableCurie = (!(curie in activeCtx.mappings) ||","        (value === null && activeCtx.mappings[curie]['@id'] === iri));","","      // select curie if it is shorter or the same length but lexicographically","      // less than the current choice","      if(isUsableCurie && (choice === null ||","        _compareShortestLeast(curie, choice) < 0)) {","        choice = curie;","      }","    }","  }","","  // return chosen curie","  if(choice !== null) {","    return choice;","  }","","  // compact IRI relative to base","  if(!relativeTo.vocab) {","    return _removeBase(activeCtx['@base'], iri);","  }","","  // return IRI as is","  return iri;","}","","/**"," * Performs value compaction on an object with '@value' or '@id' as the only"," * property."," *"," * @param activeCtx the active context."," * @param activeProperty the active property that points to the value."," * @param value the value to compact."," *"," * @return the compaction result."," */","function _compactValue(activeCtx, activeProperty, value) {","  // value is a @value","  if(_isValue(value)) {","    // get context rules","    var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');","    var language = jsonld.getContextValue(","      activeCtx, activeProperty, '@language');","    var container = jsonld.getContextValue(","      activeCtx, activeProperty, '@container');","","    // whether or not the value has an @index that must be preserved","    var preserveIndex = (('@index' in value) &&","      container !== '@index');","","    // if there's no @index to preserve ...","    if(!preserveIndex) {","      // matching @type or @language specified in context, compact value","      if(value['@type'] === type || value['@language'] === language) {","        return value['@value'];","      }","    }","","    // return just the value of @value if all are true:","    // 1. @value is the only key or @index isn't being preserved","    // 2. there is no default language or @value is not a string or","    //   the key has a mapping with a null @language","    var keyCount = Object.keys(value).length;","    var isValueOnlyKey = (keyCount === 1 ||","      (keyCount === 2 && ('@index' in value) && !preserveIndex));","    var hasDefaultLanguage = ('@language' in activeCtx);","    var isValueString = _isString(value['@value']);","    var hasNullMapping = (activeCtx.mappings[activeProperty] &&","      activeCtx.mappings[activeProperty]['@language'] === null);","    if(isValueOnlyKey &&","      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {","      return value['@value'];","    }","","    var rval = {};","","    // preserve @index","    if(preserveIndex) {","      rval[_compactIri(activeCtx, '@index')] = value['@index'];","    }","","    if('@type' in value) {","      // compact @type IRI","      rval[_compactIri(activeCtx, '@type')] = _compactIri(","        activeCtx, value['@type'], null, {vocab: true});","    } else if('@language' in value) {","      // alias @language","      rval[_compactIri(activeCtx, '@language')] = value['@language'];","    }","","    // alias @value","    rval[_compactIri(activeCtx, '@value')] = value['@value'];","","    return rval;","  }","","  // value is a subject reference","  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});","  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');","  var compacted = _compactIri(","    activeCtx, value['@id'], null, {vocab: type === '@vocab'});","","  // compact to scalar","  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {","    return compacted;","  }","","  var rval = {};","  rval[_compactIri(activeCtx, '@id')] = compacted;","  return rval;","}","","/**"," * Creates a term definition during context processing."," *"," * @param activeCtx the current active context."," * @param localCtx the local context being processed."," * @param term the term in the local context to define the mapping for."," * @param defined a map of defining/defined keys to detect cycles and prevent"," *          double definitions."," */","function _createTermDefinition(activeCtx, localCtx, term, defined) {","  if(term in defined) {","    // term already defined","    if(defined[term]) {","      return;","    }","    // cycle detected","    throw new JsonLdError(","      'Cyclical context definition detected.',","      'jsonld.CyclicalContext',","      {code: 'cyclic IRI mapping', context: localCtx, term: term});","  }","","  // now defining term","  defined[term] = false;","","  if(_isKeyword(term)) {","    throw new JsonLdError(","      'Invalid JSON-LD syntax; keywords cannot be overridden.',","      'jsonld.SyntaxError',","      {code: 'keyword redefinition', context: localCtx, term: term});","  }","","  if(term === '') {","    throw new JsonLdError(","      'Invalid JSON-LD syntax; a term cannot be an empty string.',","      'jsonld.SyntaxError',","      {code: 'invalid term definition', context: localCtx});","  }","","  // remove old mapping","  if(activeCtx.mappings[term]) {","    delete activeCtx.mappings[term];","  }","","  // get context term value","  var value = localCtx[term];","","  // clear context entry","  if(value === null || (_isObject(value) && value['@id'] === null)) {","    activeCtx.mappings[term] = null;","    defined[term] = true;","    return;","  }","","  // convert short-hand value to object w/@id","  if(_isString(value)) {","    value = {'@id': value};","  }","","  if(!_isObject(value)) {","    throw new JsonLdError(","      'Invalid JSON-LD syntax; @context property values must be ' +","      'strings or objects.',","      'jsonld.SyntaxError',","      {code: 'invalid term definition', context: localCtx});","  }","","  // create new mapping","  var mapping = activeCtx.mappings[term] = {};","  mapping.reverse = false;","","  if('@reverse' in value) {","    if('@id' in value) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; a @reverse term definition must not ' +","        'contain @id.', 'jsonld.SyntaxError',","        {code: 'invalid reverse property', context: localCtx});","    }","    var reverse = value['@reverse'];","    if(!_isString(reverse)) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',","        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});","    }","","    // expand and add @id mapping","    var id = _expandIri(","      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined);","    if(!_isAbsoluteIri(id)) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +","        'absolute IRI or a blank node identifier.',","        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});","    }","    mapping['@id'] = id;","    mapping.reverse = true;","  } else if('@id' in value) {","    var id = value['@id'];","    if(!_isString(id)) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; a @context @id value must be an array ' +","        'of strings or a string.',","        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});","    }","    if(id !== term) {","      // expand and add @id mapping","      id = _expandIri(","        activeCtx, id, {vocab: true, base: false}, localCtx, defined);","      if(!_isAbsoluteIri(id) && !_isKeyword(id)) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; a @context @id value must be an ' +","          'absolute IRI, a blank node identifier, or a keyword.',","          'jsonld.SyntaxError',","          {code: 'invalid IRI mapping', context: localCtx});","      }","      mapping['@id'] = id;","    }","  }","","  // always compute whether term has a colon as an optimization for","  // _compactIri","  var colon = term.indexOf(':');","  mapping._termHasColon = (colon !== -1);","","  if(!('@id' in mapping)) {","    // see if the term has a prefix","    if(mapping._termHasColon) {","      var prefix = term.substr(0, colon);","      if(prefix in localCtx) {","        // define parent prefix","        _createTermDefinition(activeCtx, localCtx, prefix, defined);","      }","","      if(activeCtx.mappings[prefix]) {","        // set @id based on prefix parent","        var suffix = term.substr(colon + 1);","        mapping['@id'] = activeCtx.mappings[prefix]['@id'] + suffix;","      } else {","        // term is an absolute IRI","        mapping['@id'] = term;","      }","    } else {","      // non-IRIs *must* define @ids if @vocab is not available","      if(!('@vocab' in activeCtx)) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; @context terms must define an @id.',","          'jsonld.SyntaxError',","          {code: 'invalid IRI mapping', context: localCtx, term: term});","      }","      // prepend vocab to term","      mapping['@id'] = activeCtx['@vocab'] + term;","    }","  }","","  // IRI mapping now defined","  defined[term] = true;","","  if('@type' in value) {","    var type = value['@type'];","    if(!_isString(type)) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; an @context @type values must be a string.',","        'jsonld.SyntaxError',","        {code: 'invalid type mapping', context: localCtx});","    }","","    if(type !== '@id' && type !== '@vocab') {","      // expand @type to full IRI","      type = _expandIri(","        activeCtx, type, {vocab: true, base: false}, localCtx, defined);","      if(!_isAbsoluteIri(type)) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; an @context @type value must be an ' +","          'absolute IRI.',","          'jsonld.SyntaxError',","          {code: 'invalid type mapping', context: localCtx});","      }","      if(type.indexOf('_:') === 0) {","        throw new JsonLdError(","          'Invalid JSON-LD syntax; an @context @type values must be an IRI, ' +","          'not a blank node identifier.',","          'jsonld.SyntaxError',","          {code: 'invalid type mapping', context: localCtx});","      }","    }","","    // add @type to mapping","    mapping['@type'] = type;","  }","","  if('@container' in value) {","    var container = value['@container'];","    if(container !== '@list' && container !== '@set' &&","      container !== '@index' && container !== '@language') {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; @context @container value must be ' +","        'one of the following: @list, @set, @index, or @language.',","        'jsonld.SyntaxError',","        {code: 'invalid container mapping', context: localCtx});","    }","    if(mapping.reverse && container !== '@index' && container !== '@set' &&","      container !== null) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +","        'type definition must be @index or @set.', 'jsonld.SyntaxError',","        {code: 'invalid reverse property', context: localCtx});","    }","","    // add @container to mapping","    mapping['@container'] = container;","  }","","  if('@language' in value && !('@type' in value)) {","    var language = value['@language'];","    if(language !== null && !_isString(language)) {","      throw new JsonLdError(","        'Invalid JSON-LD syntax; @context @language value must be ' +","        'a string or null.', 'jsonld.SyntaxError',","        {code: 'invalid language mapping', context: localCtx});","    }","","    // add @language to mapping","    if(language !== null) {","      language = language.toLowerCase();","    }","    mapping['@language'] = language;","  }","","  // disallow aliasing @context and @preserve","  var id = mapping['@id'];","  if(id === '@context' || id === '@preserve') {","    throw new JsonLdError(","      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',","      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});","  }","}","","/**"," * Expands a string to a full IRI. The string may be a term, a prefix, a"," * relative IRI, or an absolute IRI. The associated absolute IRI will be"," * returned."," *"," * @param activeCtx the current active context."," * @param value the string to expand."," * @param relativeTo options for how to resolve relative IRIs:"," *          base: true to resolve against the base IRI, false not to."," *          vocab: true to concatenate after @vocab, false not to."," * @param localCtx the local context being processed (only given if called"," *          during context processing)."," * @param defined a map for tracking cycles in context definitions (only given"," *          if called during context processing)."," *"," * @return the expanded value."," */","function _expandIri(activeCtx, value, relativeTo, localCtx, defined) {","  // already expanded","  if(value === null || _isKeyword(value)) {","    return value;","  }","","  // ensure value is interpreted as a string","  value = String(value);","","  // define term dependency if not defined","  if(localCtx && value in localCtx && defined[value] !== true) {","    _createTermDefinition(activeCtx, localCtx, value, defined);","  }","","  relativeTo = relativeTo || {};","  if(relativeTo.vocab) {","    var mapping = activeCtx.mappings[value];","","    // value is explicitly ignored with a null mapping","    if(mapping === null) {","      return null;","    }","","    if(mapping) {","      // value is a term","      return mapping['@id'];","    }","  }","","  // split value into prefix:suffix","  var colon = value.indexOf(':');","  if(colon !== -1) {","    var prefix = value.substr(0, colon);","    var suffix = value.substr(colon + 1);","","    // do not expand blank nodes (prefix of '_') or already-absolute","    // IRIs (suffix of '//')","    if(prefix === '_' || suffix.indexOf('//') === 0) {","      return value;","    }","","    // prefix dependency not defined, define it","    if(localCtx && prefix in localCtx) {","      _createTermDefinition(activeCtx, localCtx, prefix, defined);","    }","","    // use mapping if prefix is defined","    var mapping = activeCtx.mappings[prefix];","    if(mapping) {","      return mapping['@id'] + suffix;","    }","","    // already absolute IRI","    return value;","  }","","  // prepend vocab","  if(relativeTo.vocab && '@vocab' in activeCtx) {","    return activeCtx['@vocab'] + value;","  }","","  // prepend base","  var rval = value;","  if(relativeTo.base) {","    rval = jsonld.prependBase(activeCtx['@base'], rval);","  }","","  return rval;","}","","function _prependBase(base, iri) {","  // skip IRI processing","  if(base === null) {","    return iri;","  }","  // already an absolute IRI","  if(iri.indexOf(':') !== -1) {","    return iri;","  }","","  // parse base if it is a string","  if(_isString(base)) {","    base = jsonld.url.parse(base || '');","  }","","  // parse given IRI","  var rel = jsonld.url.parse(iri);","","  // per RFC3986 5.2.2","  var transform = {","    protocol: base.protocol || ''","  };","","  if(rel.authority !== null) {","    transform.authority = rel.authority;","    transform.path = rel.path;","    transform.query = rel.query;","  } else {","    transform.authority = base.authority;","","    if(rel.path === '') {","      transform.path = base.path;","      if(rel.query !== null) {","        transform.query = rel.query;","      } else {","        transform.query = base.query;","      }","    } else {","      if(rel.path.indexOf('/') === 0) {","        // IRI represents an absolute path","        transform.path = rel.path;","      } else {","        // merge paths","        var path = base.path;","","        // append relative path to the end of the last directory from base","        if(rel.path !== '') {","          path = path.substr(0, path.lastIndexOf('/') + 1);","          if(path.length > 0 && path.substr(-1) !== '/') {","            path += '/';","          }","          path += rel.path;","        }","","        transform.path = path;","      }","      transform.query = rel.query;","    }","  }","","  // remove slashes and dots in path","  transform.path = _removeDotSegments(transform.path, !!transform.authority);","","  // construct URL","  var rval = transform.protocol;","  if(transform.authority !== null) {","    rval += '//' + transform.authority;","  }","  rval += transform.path;","  if(transform.query !== null) {","    rval += '?' + transform.query;","  }","  if(rel.fragment !== null) {","    rval += '#' + rel.fragment;","  }","","  // handle empty base","  if(rval === '') {","    rval = './';","  }","","  return rval;","}","","/**"," * Removes a base IRI from the given absolute IRI."," *"," * @param base the base IRI."," * @param iri the absolute IRI."," *"," * @return the relative IRI if relative to base, otherwise the absolute IRI."," */","function _removeBase(base, iri) {","  // skip IRI processing","  if(base === null) {","    return iri;","  }","","  if(_isString(base)) {","    base = jsonld.url.parse(base || '');","  }","","  // establish base root","  var root = '';","  if(base.href !== '') {","    root += (base.protocol || '') + '//' + (base.authority || '');","  } else if(iri.indexOf('//')) {","    // support network-path reference with empty base","    root += '//';","  }","","  // IRI not relative to base","  if(iri.indexOf(root) !== 0) {","    return iri;","  }","","  // remove root from IRI and parse remainder","  var rel = jsonld.url.parse(iri.substr(root.length));","","  // remove path segments that match (do not remove last segment unless there","  // is a hash or query)","  var baseSegments = base.normalizedPath.split('/');","  var iriSegments = rel.normalizedPath.split('/');","  var last = (rel.fragment || rel.query) ? 0 : 1;","  while(baseSegments.length > 0 && iriSegments.length > last) {","    if(baseSegments[0] !== iriSegments[0]) {","      break;","    }","    baseSegments.shift();","    iriSegments.shift();","  }","","  // use '../' for each non-matching base segment","  var rval = '';","  if(baseSegments.length > 0) {","    // don't count the last segment (if it ends with '/' last path doesn't","    // count and if it doesn't end with '/' it isn't a path)","    baseSegments.pop();","    for(var i = 0; i < baseSegments.length; ++i) {","      rval += '../';","    }","  }","","  // prepend remaining segments","  rval += iriSegments.join('/');","","  // add query and hash","  if(rel.query !== null) {","    rval += '?' + rel.query;","  }","  if(rel.fragment !== null) {","    rval += '#' + rel.fragment;","  }","","  // handle empty base","  if(rval === '') {","    rval = './';","  }","","  return rval;","}","","/**"," * Gets the initial context."," *"," * @param options the options to use:"," *          [base] the document base IRI."," *"," * @return the initial context."," */","function _getInitialContext(options) {","  var base = jsonld.url.parse(options.base || '');","  return {","    '@base': base,","    mappings: {},","    inverse: null,","    getInverse: _createInverseContext,","    clone: _cloneActiveContext","  };","","  /**","   * Generates an inverse context for use in the compaction algorithm, if","   * not already generated for the given active context.","   *","   * @return the inverse context.","   */","  function _createInverseContext() {","    var activeCtx = this;","","    // lazily create inverse","    if(activeCtx.inverse) {","      return activeCtx.inverse;","    }","    var inverse = activeCtx.inverse = {};","","    // variables for building fast CURIE map","    var fastCurieMap = activeCtx.fastCurieMap = {};","    var irisToTerms = {};","","    // handle default language","    var defaultLanguage = activeCtx['@language'] || '@none';","","    // create term selections for each mapping in the context, ordered by","    // shortest and then lexicographically least","    var mappings = activeCtx.mappings;","    var terms = Object.keys(mappings).sort(_compareShortestLeast);","    for(var i = 0; i < terms.length; ++i) {","      var term = terms[i];","      var mapping = mappings[term];","      if(mapping === null) {","        continue;","      }","","      var container = mapping['@container'] || '@none';","","      // iterate over every IRI in the mapping","      var ids = mapping['@id'];","      if(!_isArray(ids)) {","        ids = [ids];","      }","      for(var ii = 0; ii < ids.length; ++ii) {","        var iri = ids[ii];","        var entry = inverse[iri];","        var isKeyword = _isKeyword(iri);","","        if(!entry) {","          // initialize entry","          inverse[iri] = entry = {};","","          if(!isKeyword && !mapping._termHasColon) {","            // init IRI to term map and fast CURIE prefixes","            irisToTerms[iri] = [term];","            var fastCurieEntry = {iri: iri, terms: irisToTerms[iri]};","            if(iri[0] in fastCurieMap) {","              fastCurieMap[iri[0]].push(fastCurieEntry);","            } else {","              fastCurieMap[iri[0]] = [fastCurieEntry];","            }","          }","        } else if(!isKeyword && !mapping._termHasColon) {","          // add IRI to term match","          irisToTerms[iri].push(term);","        }","","        // add new entry","        if(!entry[container]) {","          entry[container] = {","            '@language': {},","            '@type': {}","          };","        }","        entry = entry[container];","","        if(mapping.reverse) {","          // term is preferred for values using @reverse","          _addPreferredTerm(mapping, term, entry['@type'], '@reverse');","        } else if('@type' in mapping) {","          // term is preferred for values using specific type","          _addPreferredTerm(mapping, term, entry['@type'], mapping['@type']);","        } else if('@language' in mapping) {","          // term is preferred for values using specific language","          var language = mapping['@language'] || '@null';","          _addPreferredTerm(mapping, term, entry['@language'], language);","        } else {","          // term is preferred for values w/default language or no type and","          // no language","          // add an entry for the default language","          _addPreferredTerm(mapping, term, entry['@language'], defaultLanguage);","","          // add entries for no type and no language","          _addPreferredTerm(mapping, term, entry['@type'], '@none');","          _addPreferredTerm(mapping, term, entry['@language'], '@none');","        }","      }","    }","","    // build fast CURIE map","    for(var key in fastCurieMap) {","      _buildIriMap(fastCurieMap, key, 1);","    }","","    return inverse;","  }","","  /**","   * Runs a recursive algorithm to build a lookup map for quickly finding","   * potential CURIEs.","   *","   * @param iriMap the map to build.","   * @param key the current key in the map to work on.","   * @param idx the index into the IRI to compare.","   */","  function _buildIriMap(iriMap, key, idx) {","    var entries = iriMap[key];","    var next = iriMap[key] = {};","","    var iri;","    var letter;","    for(var i = 0; i < entries.length; ++i) {","      iri = entries[i].iri;","      if(idx >= iri.length) {","        letter = '';","      } else {","        letter = iri[idx];","      }","      if(letter in next) {","        next[letter].push(entries[i]);","      } else {","        next[letter] = [entries[i]];","      }","    }","","    for(var key in next) {","      if(key === '') {","        continue;","      }","      _buildIriMap(next, key, idx + 1);","    }","  }","","  /**","   * Adds the term for the given entry if not already added.","   *","   * @param mapping the term mapping.","   * @param term the term to add.","   * @param entry the inverse context typeOrLanguage entry to add to.","   * @param typeOrLanguageValue the key in the entry to add to.","   */","  function _addPreferredTerm(mapping, term, entry, typeOrLanguageValue) {","    if(!(typeOrLanguageValue in entry)) {","      entry[typeOrLanguageValue] = term;","    }","  }","","  /**","   * Clones an active context, creating a child active context.","   *","   * @return a clone (child) of the active context.","   */","  function _cloneActiveContext() {","    var child = {};","    child['@base'] = this['@base'];","    child.mappings = _clone(this.mappings);","    child.clone = this.clone;","    child.inverse = null;","    child.getInverse = this.getInverse;","    if('@language' in this) {","      child['@language'] = this['@language'];","    }","    if('@vocab' in this) {","      child['@vocab'] = this['@vocab'];","    }","    return child;","  }","}","","/**"," * Returns whether or not the given value is a keyword."," *"," * @param v the value to check."," *"," * @return true if the value is a keyword, false if not."," */","function _isKeyword(v) {","  if(!_isString(v)) {","    return false;","  }","  switch(v) {","  case '@base':","  case '@context':","  case '@container':","  case '@default':","  case '@embed':","  case '@explicit':","  case '@graph':","  case '@id':","  case '@index':","  case '@language':","  case '@list':","  case '@omitDefault':","  case '@preserve':","  case '@requireAll':","  case '@reverse':","  case '@set':","  case '@type':","  case '@value':","  case '@vocab':","    return true;","  }","  return false;","}","","/**"," * Returns true if the given value is an Object."," *"," * @param v the value to check."," *"," * @return true if the value is an Object, false if not."," */","function _isObject(v) {","  return (Object.prototype.toString.call(v) === '[object Object]');","}","","/**"," * Returns true if the given value is an empty Object."," *"," * @param v the value to check."," *"," * @return true if the value is an empty Object, false if not."," */","function _isEmptyObject(v) {","  return _isObject(v) && Object.keys(v).length === 0;","}","","/**"," * Returns true if the given value is an Array."," *"," * @param v the value to check."," *"," * @return true if the value is an Array, false if not."," */","function _isArray(v) {","  return Array.isArray(v);","}","","/**"," * Throws an exception if the given value is not a valid @type value."," *"," * @param v the value to check."," */","function _validateTypeValue(v) {","  // can be a string or an empty object","  if(_isString(v) || _isEmptyObject(v)) {","    return;","  }","","  // must be an array","  var isValid = false;","  if(_isArray(v)) {","    // must contain only strings","    isValid = true;","    for(var i = 0; i < v.length; ++i) {","      if(!(_isString(v[i]))) {","        isValid = false;","        break;","      }","    }","  }","","  if(!isValid) {","    throw new JsonLdError(","      'Invalid JSON-LD syntax; \"@type\" value must a string, an array of ' +","      'strings, or an empty object.', 'jsonld.SyntaxError',","      {code: 'invalid type value', value: v});","  }","}","","/**"," * Returns true if the given value is a String."," *"," * @param v the value to check."," *"," * @return true if the value is a String, false if not."," */","function _isString(v) {","  return (typeof v === 'string' ||","    Object.prototype.toString.call(v) === '[object String]');","}","","/**"," * Returns true if the given value is a Number."," *"," * @param v the value to check."," *"," * @return true if the value is a Number, false if not."," */","function _isNumber(v) {","  return (typeof v === 'number' ||","    Object.prototype.toString.call(v) === '[object Number]');","}","","/**"," * Returns true if the given value is a double."," *"," * @param v the value to check."," *"," * @return true if the value is a double, false if not."," */","function _isDouble(v) {","  return _isNumber(v) && String(v).indexOf('.') !== -1;","}","","/**"," * Returns true if the given value is numeric."," *"," * @param v the value to check."," *"," * @return true if the value is numeric, false if not."," */","function _isNumeric(v) {","  return !isNaN(parseFloat(v)) && isFinite(v);","}","","/**"," * Returns true if the given value is a Boolean."," *"," * @param v the value to check."," *"," * @return true if the value is a Boolean, false if not."," */","function _isBoolean(v) {","  return (typeof v === 'boolean' ||","    Object.prototype.toString.call(v) === '[object Boolean]');","}","","/**"," * Returns true if the given value is undefined."," *"," * @param v the value to check."," *"," * @return true if the value is undefined, false if not."," */","function _isUndefined(v) {","  return (typeof v === 'undefined');","}","","/**"," * Returns true if the given value is a subject with properties."," *"," * @param v the value to check."," *"," * @return true if the value is a subject with properties, false if not."," */","function _isSubject(v) {","  // Note: A value is a subject if all of these hold true:","  // 1. It is an Object.","  // 2. It is not a @value, @set, or @list.","  // 3. It has more than 1 key OR any existing key is not @id.","  var rval = false;","  if(_isObject(v) &&","    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {","    var keyCount = Object.keys(v).length;","    rval = (keyCount > 1 || !('@id' in v));","  }","  return rval;","}","","/**"," * Returns true if the given value is a subject reference."," *"," * @param v the value to check."," *"," * @return true if the value is a subject reference, false if not."," */","function _isSubjectReference(v) {","  // Note: A value is a subject reference if all of these hold true:","  // 1. It is an Object.","  // 2. It has a single key: @id.","  return (_isObject(v) && Object.keys(v).length === 1 && ('@id' in v));","}","","/**"," * Returns true if the given value is a @value."," *"," * @param v the value to check."," *"," * @return true if the value is a @value, false if not."," */","function _isValue(v) {","  // Note: A value is a @value if all of these hold true:","  // 1. It is an Object.","  // 2. It has the @value property.","  return _isObject(v) && ('@value' in v);","}","","/**"," * Returns true if the given value is a @list."," *"," * @param v the value to check."," *"," * @return true if the value is a @list, false if not."," */","function _isList(v) {","  // Note: A value is a @list if all of these hold true:","  // 1. It is an Object.","  // 2. It has the @list property.","  return _isObject(v) && ('@list' in v);","}","","/**"," * Returns true if the given value is a blank node."," *"," * @param v the value to check."," *"," * @return true if the value is a blank node, false if not."," */","function _isBlankNode(v) {","  // Note: A value is a blank node if all of these hold true:","  // 1. It is an Object.","  // 2. If it has an @id key its value begins with '_:'.","  // 3. It has no keys OR is not a @value, @set, or @list.","  var rval = false;","  if(_isObject(v)) {","    if('@id' in v) {","      rval = (v['@id'].indexOf('_:') === 0);","    } else {","      rval = (Object.keys(v).length === 0 ||","        !(('@value' in v) || ('@set' in v) || ('@list' in v)));","    }","  }","  return rval;","}","","/**"," * Returns true if the given value is an absolute IRI, false if not."," *"," * @param v the value to check."," *"," * @return true if the value is an absolute IRI, false if not."," */","function _isAbsoluteIri(v) {","  return _isString(v) && v.indexOf(':') !== -1;","}","","/**"," * Clones an object, array, or string/number. If a typed JavaScript object"," * is given, such as a Date, it will be converted to a string."," *"," * @param value the value to clone."," *"," * @return the cloned value."," */","function _clone(value) {","  if(value && typeof value === 'object') {","    var rval;","    if(_isArray(value)) {","      rval = [];","      for(var i = 0; i < value.length; ++i) {","        rval[i] = _clone(value[i]);","      }","    } else if(_isObject(value)) {","      rval = {};","      for(var key in value) {","        rval[key] = _clone(value[key]);","      }","    } else {","      rval = value.toString();","    }","    return rval;","  }","  return value;","}","","/**"," * Finds all @context URLs in the given JSON-LD input."," *"," * @param input the JSON-LD input."," * @param urls a map of URLs (url => false/@contexts)."," * @param replace true to replace the URLs in the given input with the"," *           @contexts from the urls map, false not to."," * @param base the base IRI to use to resolve relative IRIs."," *"," * @return true if new URLs to retrieve were found, false if not."," */","function _findContextUrls(input, urls, replace, base) {","  var count = Object.keys(urls).length;","  if(_isArray(input)) {","    for(var i = 0; i < input.length; ++i) {","      _findContextUrls(input[i], urls, replace, base);","    }","    return (count < Object.keys(urls).length);","  } else if(_isObject(input)) {","    for(var key in input) {","      if(key !== '@context') {","        _findContextUrls(input[key], urls, replace, base);","        continue;","      }","","      // get @context","      var ctx = input[key];","","      // array @context","      if(_isArray(ctx)) {","        var length = ctx.length;","        for(var i = 0; i < length; ++i) {","          var _ctx = ctx[i];","          if(_isString(_ctx)) {","            _ctx = jsonld.prependBase(base, _ctx);","            // replace w/@context if requested","            if(replace) {","              _ctx = urls[_ctx];","              if(_isArray(_ctx)) {","                // add flattened context","                Array.prototype.splice.apply(ctx, [i, 1].concat(_ctx));","                i += _ctx.length - 1;","                length = ctx.length;","              } else {","                ctx[i] = _ctx;","              }","            } else if(!(_ctx in urls)) {","              // @context URL found","              urls[_ctx] = false;","            }","          }","        }","      } else if(_isString(ctx)) {","        // string @context","        ctx = jsonld.prependBase(base, ctx);","        // replace w/@context if requested","        if(replace) {","          input[key] = urls[ctx];","        } else if(!(ctx in urls)) {","          // @context URL found","          urls[ctx] = false;","        }","      }","    }","    return (count < Object.keys(urls).length);","  }","  return false;","}","","/**"," * Retrieves external @context URLs using the given document loader. Every"," * instance of @context in the input that refers to a URL will be replaced"," * with the JSON @context found at that URL."," *"," * @param input the JSON-LD input with possible contexts."," * @param options the options to use:"," *          documentLoader(url, callback(err, remoteDoc)) the document loader."," * @param callback(err, input) called once the operation completes."," */","function _retrieveContextUrls(input, options, callback) {","  // if any error occurs during URL resolution, quit","  var error = null;","","  // recursive document loader","  var documentLoader = options.documentLoader;","  var retrieve = function(input, cycles, documentLoader, base, callback) {","    if(Object.keys(cycles).length > MAX_CONTEXT_URLS) {","      error = new JsonLdError(","        'Maximum number of @context URLs exceeded.',","        'jsonld.ContextUrlError',","        {code: 'loading remote context failed', max: MAX_CONTEXT_URLS});","      return callback(error);","    }","","    // for tracking the URLs to retrieve","    var urls = {};","","    // finished will be called once the URL queue is empty","    var finished = function() {","      // replace all URLs in the input","      _findContextUrls(input, urls, true, base);","      callback(null, input);","    };","","    // find all URLs in the given input","    if(!_findContextUrls(input, urls, false, base)) {","      // no new URLs in input","      finished();","    }","","    // queue all unretrieved URLs","    var queue = [];","    for(var url in urls) {","      if(urls[url] === false) {","        queue.push(url);","      }","    }","","    // retrieve URLs in queue","    var count = queue.length;","    for(var i = 0; i < queue.length; ++i) {","      (function(url) {","        // check for context URL cycle","        if(url in cycles) {","          error = new JsonLdError(","            'Cyclical @context URLs detected.',","            'jsonld.ContextUrlError',","            {code: 'recursive context inclusion', url: url});","          return callback(error);","        }","        var _cycles = _clone(cycles);","        _cycles[url] = true;","        var done = function(err, remoteDoc) {","          // short-circuit if there was an error with another URL","          if(error) {","            return;","          }","","          var ctx = remoteDoc ? remoteDoc.document : null;","","          // parse string context as JSON","          if(!err && _isString(ctx)) {","            try {","              ctx = JSON.parse(ctx);","            } catch(ex) {","              err = ex;","            }","          }","","          // ensure ctx is an object","          if(err) {","            err = new JsonLdError(","              'Dereferencing a URL did not result in a valid JSON-LD object. ' +","              'Possible causes are an inaccessible URL perhaps due to ' +","              'a same-origin policy (ensure the server uses CORS if you are ' +","              'using client-side JavaScript), too many redirects, a ' +","              'non-JSON response, or more than one HTTP Link Header was ' +","              'provided for a remote context.',","              'jsonld.InvalidUrl',","              {code: 'loading remote context failed', url: url, cause: err});","          } else if(!_isObject(ctx)) {","            err = new JsonLdError(","              'Dereferencing a URL did not result in a JSON object. The ' +","              'response was valid JSON, but it was not a JSON object.',","              'jsonld.InvalidUrl',","              {code: 'invalid remote context', url: url, cause: err});","          }","          if(err) {","            error = err;","            return callback(error);","          }","","          // use empty context if no @context key is present","          if(!('@context' in ctx)) {","            ctx = {'@context': {}};","          } else {","            ctx = {'@context': ctx['@context']};","          }","","          // append context URL to context if given","          if(remoteDoc.contextUrl) {","            if(!_isArray(ctx['@context'])) {","              ctx['@context'] = [ctx['@context']];","            }","            ctx['@context'].push(remoteDoc.contextUrl);","          }","","          // recurse","          retrieve(ctx, _cycles, documentLoader, url, function(err, ctx) {","            if(err) {","              return callback(err);","            }","            urls[url] = ctx['@context'];","            count -= 1;","            if(count === 0) {","              finished();","            }","          });","        };","        var promise = documentLoader(url, done);","        if(promise && 'then' in promise) {","          promise.then(done.bind(null, null), done);","        }","      }(queue[i]));","    }","  };","  retrieve(input, {}, documentLoader, options.base, callback);","}","","// define js 1.8.5 Object.keys method if not present","if(!Object.keys) {","  Object.keys = function(o) {","    if(o !== Object(o)) {","      throw new TypeError('Object.keys called on non-object');","    }","    var rval = [];","    for(var p in o) {","      if(Object.prototype.hasOwnProperty.call(o, p)) {","        rval.push(p);","      }","    }","    return rval;","  };","}","","/**"," * Parses RDF in the form of N-Quads."," *"," * @param input the N-Quads input to parse."," *"," * @return an RDF dataset."," */","function _parseNQuads(input) {","  // define partial regexes","  var iri = '(?:<([^:]+:[^>]*)>)';","  var bnode = '(_:(?:[A-Za-z0-9]+))';","  var plain = '\"([^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"';","  var datatype = '(?:\\\\^\\\\^' + iri + ')';","  var language = '(?:@([a-z]+(?:-[a-z0-9]+)*))';","  var literal = '(?:' + plain + '(?:' + datatype + '|' + language + ')?)';","  var comment = '(?:#.*)?';","  var ws = '[ \\\\t]+';","  var wso = '[ \\\\t]*';","  var eoln = /(?:\\r\\n)|(?:\\n)|(?:\\r)/g;","  var empty = new RegExp('^' + wso + comment + '$');","","  // define quad part regexes","  var subject = '(?:' + iri + '|' + bnode + ')' + ws;","  var property = iri + ws;","  var object = '(?:' + iri + '|' + bnode + '|' + literal + ')' + wso;","  var graphName = '(?:\\\\.|(?:(?:' + iri + '|' + bnode + ')' + wso + '\\\\.))';","","  // full quad regex","  var quad = new RegExp(","    '^' + wso + subject + property + object + graphName + wso + comment + '$');","","  // build RDF dataset","  var dataset = {};","","  // split N-Quad input into lines","  var lines = input.split(eoln);","  var lineNumber = 0;","  for(var li = 0; li < lines.length; ++li) {","    var line = lines[li];","    lineNumber++;","","    // skip empty lines","    if(empty.test(line)) {","      continue;","    }","","    // parse quad","    var match = line.match(quad);","    if(match === null) {","      throw new JsonLdError(","        'Error while parsing N-Quads; invalid quad.',","        'jsonld.ParseError', {line: lineNumber});","    }","","    // create RDF triple","    var triple = {};","","    // get subject","    if(!_isUndefined(match[1])) {","      triple.subject = {type: 'IRI', value: match[1]};","    } else {","      triple.subject = {type: 'blank node', value: match[2]};","    }","","    // get predicate","    triple.predicate = {type: 'IRI', value: match[3]};","","    // get object","    if(!_isUndefined(match[4])) {","      triple.object = {type: 'IRI', value: match[4]};","    } else if(!_isUndefined(match[5])) {","      triple.object = {type: 'blank node', value: match[5]};","    } else {","      triple.object = {type: 'literal'};","      if(!_isUndefined(match[7])) {","        triple.object.datatype = match[7];","      } else if(!_isUndefined(match[8])) {","        triple.object.datatype = RDF_LANGSTRING;","        triple.object.language = match[8];","      } else {","        triple.object.datatype = XSD_STRING;","      }","      var unescaped = match[6]","        .replace(/\\\\\"/g, '\"')","        .replace(/\\\\t/g, '\\t')","        .replace(/\\\\n/g, '\\n')","        .replace(/\\\\r/g, '\\r')","        .replace(/\\\\\\\\/g, '\\\\');","      triple.object.value = unescaped;","    }","","    // get graph name ('@default' is used for the default graph)","    var name = '@default';","    if(!_isUndefined(match[9])) {","      name = match[9];","    } else if(!_isUndefined(match[10])) {","      name = match[10];","    }","","    // initialize graph in dataset","    if(!(name in dataset)) {","      dataset[name] = [triple];","    } else {","      // add triple if unique to its graph","      var unique = true;","      var triples = dataset[name];","      for(var ti = 0; unique && ti < triples.length; ++ti) {","        if(_compareRDFTriples(triples[ti], triple)) {","          unique = false;","        }","      }","      if(unique) {","        triples.push(triple);","      }","    }","  }","","  return dataset;","}","","// register the N-Quads RDF parser","jsonld.registerRDFParser('application/nquads', _parseNQuads);","","/**"," * Converts an RDF dataset to N-Quads."," *"," * @param dataset the RDF dataset to convert."," *"," * @return the N-Quads string."," */","function _toNQuads(dataset) {","  var quads = [];","  for(var graphName in dataset) {","    var triples = dataset[graphName];","    for(var ti = 0; ti < triples.length; ++ti) {","      var triple = triples[ti];","      if(graphName === '@default') {","        graphName = null;","      }","      quads.push(_toNQuad(triple, graphName));","    }","  }","  return quads.sort().join('');","}","","/**"," * Converts an RDF triple and graph name to an N-Quad string (a single quad)."," *"," * @param triple the RDF triple or quad to convert (a triple or quad may be"," *          passed, if a triple is passed then `graphName` should be given"," *          to specify the name of the graph the triple is in, `null` for"," *          the default graph)."," * @param graphName the name of the graph containing the triple, null for"," *          the default graph."," *"," * @return the N-Quad string."," */","function _toNQuad(triple, graphName) {","  var s = triple.subject;","  var p = triple.predicate;","  var o = triple.object;","  var g = graphName || null;","  if('name' in triple && triple.name) {","    g = triple.name.value;","  }","","  var quad = '';","","  // subject is an IRI","  if(s.type === 'IRI') {","    quad += '<' + s.value + '>';","  } else {","    quad += s.value;","  }","  quad += ' ';","","  // predicate is an IRI","  if(p.type === 'IRI') {","    quad += '<' + p.value + '>';","  } else {","    quad += p.value;","  }","  quad += ' ';","","  // object is IRI, bnode, or literal","  if(o.type === 'IRI') {","    quad += '<' + o.value + '>';","  } else if(o.type === 'blank node') {","    quad += o.value;","  } else {","    var escaped = o.value","      .replace(/\\\\/g, '\\\\\\\\')","      .replace(/\\t/g, '\\\\t')","      .replace(/\\n/g, '\\\\n')","      .replace(/\\r/g, '\\\\r')","      .replace(/\\\"/g, '\\\\\"');","    quad += '\"' + escaped + '\"';","    if(o.datatype === RDF_LANGSTRING) {","      if(o.language) {","        quad += '@' + o.language;","      }","    } else if(o.datatype !== XSD_STRING) {","      quad += '^^<' + o.datatype + '>';","    }","  }","","  // graph","  if(g !== null && g !== undefined) {","    if(g.indexOf('_:') !== 0) {","      quad += ' <' + g + '>';","    } else {","      quad += ' ' + g;","    }","  }","","  quad += ' .\\n';","  return quad;","}","","/**"," * Parses the RDF dataset found via the data object from the RDFa API."," *"," * @param data the RDFa API data object."," *"," * @return the RDF dataset."," */","function _parseRdfaApiData(data) {","  var dataset = {};","  dataset['@default'] = [];","","  var subjects = data.getSubjects();","  for(var si = 0; si < subjects.length; ++si) {","    var subject = subjects[si];","    if(subject === null) {","      continue;","    }","","    // get all related triples","    var triples = data.getSubjectTriples(subject);","    if(triples === null) {","      continue;","    }","    var predicates = triples.predicates;","    for(var predicate in predicates) {","      // iterate over objects","      var objects = predicates[predicate].objects;","      for(var oi = 0; oi < objects.length; ++oi) {","        var object = objects[oi];","","        // create RDF triple","        var triple = {};","","        // add subject","        if(subject.indexOf('_:') === 0) {","          triple.subject = {type: 'blank node', value: subject};","        } else {","          triple.subject = {type: 'IRI', value: subject};","        }","","        // add predicate","        if(predicate.indexOf('_:') === 0) {","          triple.predicate = {type: 'blank node', value: predicate};","        } else {","          triple.predicate = {type: 'IRI', value: predicate};","        }","","        // serialize XML literal","        var value = object.value;","        if(object.type === RDF_XML_LITERAL) {","          // initialize XMLSerializer","          if(!XMLSerializer) {","            _defineXMLSerializer();","          }","          var serializer = new XMLSerializer();","          value = '';","          for(var x = 0; x < object.value.length; x++) {","            if(object.value[x].nodeType === Node.ELEMENT_NODE) {","              value += serializer.serializeToString(object.value[x]);","            } else if(object.value[x].nodeType === Node.TEXT_NODE) {","              value += object.value[x].nodeValue;","            }","          }","        }","","        // add object","        triple.object = {};","","        // object is an IRI","        if(object.type === RDF_OBJECT) {","          if(object.value.indexOf('_:') === 0) {","            triple.object.type = 'blank node';","          } else {","            triple.object.type = 'IRI';","          }","        } else {","          // object is a literal","          triple.object.type = 'literal';","          if(object.type === RDF_PLAIN_LITERAL) {","            if(object.language) {","              triple.object.datatype = RDF_LANGSTRING;","              triple.object.language = object.language;","            } else {","              triple.object.datatype = XSD_STRING;","            }","          } else {","            triple.object.datatype = object.type;","          }","        }","        triple.object.value = value;","","        // add triple to dataset in default graph","        dataset['@default'].push(triple);","      }","    }","  }","","  return dataset;","}","","// register the RDFa API RDF parser","jsonld.registerRDFParser('rdfa-api', _parseRdfaApiData);","","/**"," * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique"," * identifiers, keeping track of any previously issued identifiers."," *"," * @param prefix the prefix to use ('<prefix><counter>')."," */","function IdentifierIssuer(prefix) {","  this.prefix = prefix;","  this.counter = 0;","  this.existing = {};","}","jsonld.IdentifierIssuer = IdentifierIssuer;","// backwards-compability","jsonld.UniqueNamer = IdentifierIssuer;","","/**"," * Copies this IdentifierIssuer."," *"," * @return a copy of this IdentifierIssuer."," */","IdentifierIssuer.prototype.clone = function() {","  var copy = new IdentifierIssuer(this.prefix);","  copy.counter = this.counter;","  copy.existing = _clone(this.existing);","  return copy;","};","","/**"," * Gets the new identifier for the given old identifier, where if no old"," * identifier is given a new identifier will be generated."," *"," * @param [old] the old identifier to get the new identifier for."," *"," * @return the new identifier."," */","IdentifierIssuer.prototype.getId = function(old) {","  // return existing old identifier","  if(old && old in this.existing) {","    return this.existing[old];","  }","","  // get next identifier","  var identifier = this.prefix + this.counter;","  this.counter += 1;","","  // save mapping","  if(old) {","    this.existing[old] = identifier;","  }","","  return identifier;","};","// alias","IdentifierIssuer.prototype.getName = IdentifierIssuer.prototype.getName;","","/**"," * Returns true if the given old identifer has already been assigned a new"," * identifier."," *"," * @param old the old identifier to check."," *"," * @return true if the old identifier has been assigned a new identifier, false"," *   if not."," */","IdentifierIssuer.prototype.hasId = function(old) {","  return (old in this.existing);","};","// alias","IdentifierIssuer.prototype.isNamed = IdentifierIssuer.prototype.hasId;","","/**"," * A Permutator iterates over all possible permutations of the given array"," * of elements."," *"," * @param list the array of elements to iterate over."," */","var Permutator = function(list) {","  // original array","  this.list = list.sort();","  // indicates whether there are more permutations","  this.done = false;","  // directional info for permutation algorithm","  this.left = {};","  for(var i = 0; i < list.length; ++i) {","    this.left[list[i]] = true;","  }","};","","/**"," * Returns true if there is another permutation."," *"," * @return true if there is another permutation, false if not."," */","Permutator.prototype.hasNext = function() {","  return !this.done;","};","","/**"," * Gets the next permutation. Call hasNext() to ensure there is another one"," * first."," *"," * @return the next permutation."," */","Permutator.prototype.next = function() {","  // copy current permutation","  var rval = this.list.slice();","","  /* Calculate the next permutation using the Steinhaus-Johnson-Trotter","   permutation algorithm. */","","  // get largest mobile element k","  // (mobile: element is greater than the one it is looking at)","  var k = null;","  var pos = 0;","  var length = this.list.length;","  for(var i = 0; i < length; ++i) {","    var element = this.list[i];","    var left = this.left[element];","    if((k === null || element > k) &&","      ((left && i > 0 && element > this.list[i - 1]) ||","      (!left && i < (length - 1) && element > this.list[i + 1]))) {","      k = element;","      pos = i;","    }","  }","","  // no more permutations","  if(k === null) {","    this.done = true;","  } else {","    // swap k and the element it is looking at","    var swap = this.left[k] ? pos - 1 : pos + 1;","    this.list[pos] = this.list[swap];","    this.list[swap] = k;","","    // reverse the direction of all elements larger than k","    for(var i = 0; i < length; ++i) {","      if(this.list[i] > k) {","        this.left[this.list[i]] = !this.left[this.list[i]];","      }","    }","  }","","  return rval;","};","","//////////////////////// DEFINE NORMALIZATION HASH API ////////////////////////","","/**"," * Creates a new NormalizeHash for use by the given normalization algorithm."," *"," * @param algorithm the RDF Dataset Normalization algorithm to use:"," *          'URDNA2015' or 'URGNA2012'."," */","var NormalizeHash = function(algorithm) {","  if(!(this instanceof NormalizeHash)) {","    return new NormalizeHash(algorithm);","  }","  if(['URDNA2015', 'URGNA2012'].indexOf(algorithm) === -1) {","    throw new Error(","      'Invalid RDF Dataset Normalization algorithm: ' + algorithm);","  }","  NormalizeHash._init.call(this, algorithm);","};","NormalizeHash.hashNQuads = function(algorithm, nquads) {","  var md = new NormalizeHash(algorithm);","  for(var i = 0; i < nquads.length; ++i) {","    md.update(nquads[i]);","  }","  return md.digest();","};","","// switch definition of NormalizeHash based on environment","(function(_nodejs) {","","if(_nodejs) {","  // define NormalizeHash using native crypto lib","  var crypto = require('crypto');","  NormalizeHash._init = function(algorithm) {","    if(algorithm === 'URDNA2015') {","      algorithm = 'sha256';","    } else {","      // assume URGNA2012","      algorithm = 'sha1';","    }","    this.md = crypto.createHash(algorithm);","  };","  NormalizeHash.prototype.update = function(msg) {","    return this.md.update(msg, 'utf8');","  };","  NormalizeHash.prototype.digest = function() {","    return this.md.digest('hex');","  };","  return;","}","","// define NormalizeHash using JavaScript","NormalizeHash._init = function(algorithm) {","  if(algorithm === 'URDNA2015') {","    algorithm = new sha256.Algorithm();","  } else {","    // assume URGNA2012","    algorithm = new sha1.Algorithm();","  }","  this.md = new MessageDigest(algorithm);","};","NormalizeHash.prototype.update = function(msg) {","  return this.md.update(msg);","};","NormalizeHash.prototype.digest = function() {","  return this.md.digest().toHex();","};","","/////////////////////////// DEFINE MESSAGE DIGEST API /////////////////////////","","/**"," * Creates a new MessageDigest."," *"," * @param algorithm the algorithm to use."," */","var MessageDigest = function(algorithm) {","  if(!(this instanceof MessageDigest)) {","    return new MessageDigest(algorithm);","  }","","  this._algorithm = algorithm;","","  // create shared padding as needed","  if(!MessageDigest._padding ||","    MessageDigest._padding.length < this._algorithm.blockSize) {","    MessageDigest._padding = String.fromCharCode(128);","    var c = String.fromCharCode(0x00);","    var n = 64;","    while(n > 0) {","      if(n & 1) {","        MessageDigest._padding += c;","      }","      n >>>= 1;","      if(n > 0) {","        c += c;","      }","    }","  }","","  // start digest automatically for first time","  this.start();","};","","/**"," * Starts the digest."," *"," * @return this digest object."," */","MessageDigest.prototype.start = function() {","  // up to 56-bit message length for convenience","  this.messageLength = 0;","","  // full message length","  this.fullMessageLength = [];","  var int32s = this._algorithm.messageLengthSize / 4;","  for(var i = 0; i < int32s; ++i) {","    this.fullMessageLength.push(0);","  }","","  // input buffer","  this._input = new MessageDigest.ByteBuffer();","","  // get starting state","  this.state = this._algorithm.start();","","  return this;","};","","/**"," * Updates the digest with the given message input. The input must be"," * a string of characters."," *"," * @param msg the message input to update with (ByteBuffer or string)."," *"," * @return this digest object."," */","MessageDigest.prototype.update = function(msg) {","  // encode message as a UTF-8 encoded binary string","  msg = new MessageDigest.ByteBuffer(unescape(encodeURIComponent(msg)));","","  // update message length","  this.messageLength += msg.length();","  var len = msg.length();","  len = [(len / 0x100000000) >>> 0, len >>> 0];","  for(var i = this.fullMessageLength.length - 1; i >= 0; --i) {","    this.fullMessageLength[i] += len[1];","    len[1] = len[0] + ((this.fullMessageLength[i] / 0x100000000) >>> 0);","    this.fullMessageLength[i] = this.fullMessageLength[i] >>> 0;","    len[0] = ((len[1] / 0x100000000) >>> 0);","  }","","  // add bytes to input buffer","  this._input.putBytes(msg.bytes());","","  // digest blocks","  while(this._input.length() >= this._algorithm.blockSize) {","    this.state = this._algorithm.digest(this.state, this._input);","  }","","  // compact input buffer every 2K or if empty","  if(this._input.read > 2048 || this._input.length() === 0) {","    this._input.compact();","  }","","  return this;","};","","/**"," * Produces the digest."," *"," * @return a byte buffer containing the digest value."," */","MessageDigest.prototype.digest = function() {","  /* Note: Here we copy the remaining bytes in the input buffer and add the","  appropriate padding. Then we do the final update on a copy of the state so","  that if the user wants to get intermediate digests they can do so. */","","  /* Determine the number of bytes that must be added to the message to","  ensure its length is appropriately congruent. In other words, the data to","  be digested must be a multiple of `blockSize`. This data includes the","  message, some padding, and the length of the message. Since the length of","  the message will be encoded as `messageLengthSize` bytes, that means that","  the last segment of the data must have `blockSize` - `messageLengthSize`","  bytes of message and padding. Therefore, the length of the message plus the","  padding must be congruent to X mod `blockSize` because","  `blockSize` - `messageLengthSize` = X.","","  For example, SHA-1 is congruent to 448 mod 512 and SHA-512 is congruent to","  896 mod 1024. SHA-1 uses a `blockSize` of 64 bytes (512 bits) and a","  `messageLengthSize` of 8 bytes (64 bits). SHA-512 uses a `blockSize` of","  128 bytes (1024 bits) and a `messageLengthSize` of 16 bytes (128 bits).","","  In order to fill up the message length it must be filled with padding that","  begins with 1 bit followed by all 0 bits. Padding must *always* be present,","  so if the message length is already congruent, then `blockSize` padding bits","  must be added. */","","  // create final block","  var finalBlock = new MessageDigest.ByteBuffer();","  finalBlock.putBytes(this._input.bytes());","","  // compute remaining size to be digested (include message length size)","  var remaining = (","    this.fullMessageLength[this.fullMessageLength.length - 1] +","    this._algorithm.messageLengthSize);","","  // add padding for overflow blockSize - overflow","  // _padding starts with 1 byte with first bit is set (byte value 128), then","  // there may be up to (blockSize - 1) other pad bytes","  var overflow = remaining & (this._algorithm.blockSize - 1);","  finalBlock.putBytes(MessageDigest._padding.substr(","    0, this._algorithm.blockSize - overflow));","","  // serialize message length in bits in big-endian order; since length","  // is stored in bytes we multiply by 8 (left shift by 3 and merge in","  // remainder from )","  var messageLength = new MessageDigest.ByteBuffer();","  for(var i = 0; i < this.fullMessageLength.length; ++i) {","    messageLength.putInt32((this.fullMessageLength[i] << 3) |","      (this.fullMessageLength[i + 1] >>> 28));","  }","","  // write the length of the message (algorithm-specific)","  this._algorithm.writeMessageLength(finalBlock, messageLength);","","  // digest final block","  var state = this._algorithm.digest(this.state.copy(), finalBlock);","","  // write state to buffer","  var rval = new MessageDigest.ByteBuffer();","  state.write(rval);","  return rval;","};","","/**"," * Creates a simple byte buffer for message digest operations."," *"," * @param data the data to put in the buffer."," */","MessageDigest.ByteBuffer = function(data) {","  if(typeof data === 'string') {","    this.data = data;","  } else {","    this.data = '';","  }","  this.read = 0;","};","","/**"," * Puts a 32-bit integer into this buffer in big-endian order."," *"," * @param i the 32-bit integer."," */","MessageDigest.ByteBuffer.prototype.putInt32 = function(i) {","  this.data += (","    String.fromCharCode(i >> 24 & 0xFF) +","    String.fromCharCode(i >> 16 & 0xFF) +","    String.fromCharCode(i >> 8 & 0xFF) +","    String.fromCharCode(i & 0xFF));","};","","/**"," * Gets a 32-bit integer from this buffer in big-endian order and"," * advances the read pointer by 4."," *"," * @return the word."," */","MessageDigest.ByteBuffer.prototype.getInt32 = function() {","  var rval = (","    this.data.charCodeAt(this.read) << 24 ^","    this.data.charCodeAt(this.read + 1) << 16 ^","    this.data.charCodeAt(this.read + 2) << 8 ^","    this.data.charCodeAt(this.read + 3));","  this.read += 4;","  return rval;","};","","/**"," * Puts the given bytes into this buffer."," *"," * @param bytes the bytes as a binary-encoded string."," */","MessageDigest.ByteBuffer.prototype.putBytes = function(bytes) {","  this.data += bytes;","};","","/**"," * Gets the bytes in this buffer."," *"," * @return a string full of UTF-8 encoded characters."," */","MessageDigest.ByteBuffer.prototype.bytes = function() {","  return this.data.slice(this.read);","};","","/**"," * Gets the number of bytes in this buffer."," *"," * @return the number of bytes in this buffer."," */","MessageDigest.ByteBuffer.prototype.length = function() {","  return this.data.length - this.read;","};","","/**"," * Compacts this buffer."," */","MessageDigest.ByteBuffer.prototype.compact = function() {","  this.data = this.data.slice(this.read);","  this.read = 0;","};","","/**"," * Converts this buffer to a hexadecimal string."," *"," * @return a hexadecimal string."," */","MessageDigest.ByteBuffer.prototype.toHex = function() {","  var rval = '';","  for(var i = this.read; i < this.data.length; ++i) {","    var b = this.data.charCodeAt(i);","    if(b < 16) {","      rval += '0';","    }","    rval += b.toString(16);","  }","  return rval;","};","","///////////////////////////// DEFINE SHA-1 ALGORITHM //////////////////////////","","var sha1 = {","  // used for word storage","  _w: null","};","","sha1.Algorithm = function() {","  this.name = 'sha1',","  this.blockSize = 64;","  this.digestLength = 20;","  this.messageLengthSize = 8;","};","","sha1.Algorithm.prototype.start = function() {","  if(!sha1._w) {","    sha1._w = new Array(80);","  }","  return sha1._createState();","};","","sha1.Algorithm.prototype.writeMessageLength = function(","  finalBlock, messageLength) {","  // message length is in bits and in big-endian order; simply append","  finalBlock.putBytes(messageLength.bytes());","};","","sha1.Algorithm.prototype.digest = function(s, input) {","  // consume 512 bit (64 byte) chunks","  var t, a, b, c, d, e, f, i;","  var len = input.length();","  var _w = sha1._w;","  while(len >= 64) {","    // initialize hash value for this chunk","    a = s.h0;","    b = s.h1;","    c = s.h2;","    d = s.h3;","    e = s.h4;","","    // the _w array will be populated with sixteen 32-bit big-endian words","    // and then extended into 80 32-bit words according to SHA-1 algorithm","    // and for 32-79 using Max Locktyukhin's optimization","","    // round 1","    for(i = 0; i < 16; ++i) {","      t = input.getInt32();","      _w[i] = t;","      f = d ^ (b & (c ^ d));","      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;","      e = d;","      d = c;","      c = (b << 30) | (b >>> 2);","      b = a;","      a = t;","    }","    for(; i < 20; ++i) {","      t = (_w[i - 3] ^ _w[i - 8] ^ _w[i - 14] ^ _w[i - 16]);","      t = (t << 1) | (t >>> 31);","      _w[i] = t;","      f = d ^ (b & (c ^ d));","      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;","      e = d;","      d = c;","      c = (b << 30) | (b >>> 2);","      b = a;","      a = t;","    }","    // round 2","    for(; i < 32; ++i) {","      t = (_w[i - 3] ^ _w[i - 8] ^ _w[i - 14] ^ _w[i - 16]);","      t = (t << 1) | (t >>> 31);","      _w[i] = t;","      f = b ^ c ^ d;","      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;","      e = d;","      d = c;","      c = (b << 30) | (b >>> 2);","      b = a;","      a = t;","    }","    for(; i < 40; ++i) {","      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);","      t = (t << 2) | (t >>> 30);","      _w[i] = t;","      f = b ^ c ^ d;","      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;","      e = d;","      d = c;","      c = (b << 30) | (b >>> 2);","      b = a;","      a = t;","    }","    // round 3","    for(; i < 60; ++i) {","      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);","      t = (t << 2) | (t >>> 30);","      _w[i] = t;","      f = (b & c) | (d & (b ^ c));","      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;","      e = d;","      d = c;","      c = (b << 30) | (b >>> 2);","      b = a;","      a = t;","    }","    // round 4","    for(; i < 80; ++i) {","      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);","      t = (t << 2) | (t >>> 30);","      _w[i] = t;","      f = b ^ c ^ d;","      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;","      e = d;","      d = c;","      c = (b << 30) | (b >>> 2);","      b = a;","      a = t;","    }","","    // update hash state","    s.h0 = (s.h0 + a) | 0;","    s.h1 = (s.h1 + b) | 0;","    s.h2 = (s.h2 + c) | 0;","    s.h3 = (s.h3 + d) | 0;","    s.h4 = (s.h4 + e) | 0;","","    len -= 64;","  }","","  return s;","};","","sha1._createState = function() {","  var state = {","    h0: 0x67452301,","    h1: 0xEFCDAB89,","    h2: 0x98BADCFE,","    h3: 0x10325476,","    h4: 0xC3D2E1F0","  };","  state.copy = function() {","    var rval = sha1._createState();","    rval.h0 = state.h0;","    rval.h1 = state.h1;","    rval.h2 = state.h2;","    rval.h3 = state.h3;","    rval.h4 = state.h4;","    return rval;","  };","  state.write = function(buffer) {","    buffer.putInt32(state.h0);","    buffer.putInt32(state.h1);","    buffer.putInt32(state.h2);","    buffer.putInt32(state.h3);","    buffer.putInt32(state.h4);","  };","  return state;","};","","//////////////////////////// DEFINE SHA-256 ALGORITHM /////////////////////////","","var sha256 = {","  // shared state","  _k: null,","  _w: null","};","","sha256.Algorithm = function() {","  this.name = 'sha256',","  this.blockSize = 64;","  this.digestLength = 32;","  this.messageLengthSize = 8;","};","","sha256.Algorithm.prototype.start = function() {","  if(!sha256._k) {","    sha256._init();","  }","  return sha256._createState();","};","","sha256.Algorithm.prototype.writeMessageLength = function(","  finalBlock, messageLength) {","  // message length is in bits and in big-endian order; simply append","  finalBlock.putBytes(messageLength.bytes());","};","","sha256.Algorithm.prototype.digest = function(s, input) {","  // consume 512 bit (64 byte) chunks","  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;","  var len = input.length();","  var _k = sha256._k;","  var _w = sha256._w;","  while(len >= 64) {","    // the w array will be populated with sixteen 32-bit big-endian words","    // and then extended into 64 32-bit words according to SHA-256","    for(i = 0; i < 16; ++i) {","      _w[i] = input.getInt32();","    }","    for(; i < 64; ++i) {","      // XOR word 2 words ago rot right 17, rot right 19, shft right 10","      t1 = _w[i - 2];","      t1 =","        ((t1 >>> 17) | (t1 << 15)) ^","        ((t1 >>> 19) | (t1 << 13)) ^","        (t1 >>> 10);","      // XOR word 15 words ago rot right 7, rot right 18, shft right 3","      t2 = _w[i - 15];","      t2 =","        ((t2 >>> 7) | (t2 << 25)) ^","        ((t2 >>> 18) | (t2 << 14)) ^","        (t2 >>> 3);","      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32","      _w[i] = (t1 + _w[i - 7] + t2 + _w[i - 16]) | 0;","    }","","    // initialize hash value for this chunk","    a = s.h0;","    b = s.h1;","    c = s.h2;","    d = s.h3;","    e = s.h4;","    f = s.h5;","    g = s.h6;","    h = s.h7;","","    // round function","    for(i = 0; i < 64; ++i) {","      // Sum1(e)","      s1 =","        ((e >>> 6) | (e << 26)) ^","        ((e >>> 11) | (e << 21)) ^","        ((e >>> 25) | (e << 7));","      // Ch(e, f, g) (optimized the same way as SHA-1)","      ch = g ^ (e & (f ^ g));","      // Sum0(a)","      s0 =","        ((a >>> 2) | (a << 30)) ^","        ((a >>> 13) | (a << 19)) ^","        ((a >>> 22) | (a << 10));","      // Maj(a, b, c) (optimized the same way as SHA-1)","      maj = (a & b) | (c & (a ^ b));","","      // main algorithm","      t1 = h + s1 + ch + _k[i] + _w[i];","      t2 = s0 + maj;","      h = g;","      g = f;","      f = e;","      e = (d + t1) | 0;","      d = c;","      c = b;","      b = a;","      a = (t1 + t2) | 0;","    }","","    // update hash state","    s.h0 = (s.h0 + a) | 0;","    s.h1 = (s.h1 + b) | 0;","    s.h2 = (s.h2 + c) | 0;","    s.h3 = (s.h3 + d) | 0;","    s.h4 = (s.h4 + e) | 0;","    s.h5 = (s.h5 + f) | 0;","    s.h6 = (s.h6 + g) | 0;","    s.h7 = (s.h7 + h) | 0;","    len -= 64;","  }","","  return s;","};","","sha256._createState = function() {","  var state = {","    h0: 0x6A09E667,","    h1: 0xBB67AE85,","    h2: 0x3C6EF372,","    h3: 0xA54FF53A,","    h4: 0x510E527F,","    h5: 0x9B05688C,","    h6: 0x1F83D9AB,","    h7: 0x5BE0CD19","  };","  state.copy = function() {","    var rval = sha256._createState();","    rval.h0 = state.h0;","    rval.h1 = state.h1;","    rval.h2 = state.h2;","    rval.h3 = state.h3;","    rval.h4 = state.h4;","    rval.h5 = state.h5;","    rval.h6 = state.h6;","    rval.h7 = state.h7;","    return rval;","  };","  state.write = function(buffer) {","    buffer.putInt32(state.h0);","    buffer.putInt32(state.h1);","    buffer.putInt32(state.h2);","    buffer.putInt32(state.h3);","    buffer.putInt32(state.h4);","    buffer.putInt32(state.h5);","    buffer.putInt32(state.h6);","    buffer.putInt32(state.h7);","  };","  return state;","};","","sha256._init = function() {","  // create K table for SHA-256","  sha256._k = [","    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,","    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,","    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,","    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,","    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,","    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,","    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,","    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,","    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,","    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,","    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,","    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,","    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,","    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,","    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,","    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];","","  // used for word storage","  sha256._w = new Array(64);","};","","})(_nodejs); // end definition of NormalizeHash","","if(!XMLSerializer) {","","var _defineXMLSerializer = function() {","  XMLSerializer = require('xmldom').XMLSerializer;","};","","} // end _defineXMLSerializer","","// define URL parser","// parseUri 1.2.2","// (c) Steven Levithan <stevenlevithan.com>","// MIT License","// with local jsonld.js modifications","jsonld.url = {};","jsonld.url.parsers = {","  simple: {","    // RFC 3986 basic parts","    keys: ['href','scheme','authority','path','query','fragment'],","    regex: /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/","  },","  full: {","    keys: ['href','protocol','scheme','authority','auth','user','password','hostname','port','path','directory','file','query','fragment'],","    regex: /^(([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(?:(((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/","  }","};","jsonld.url.parse = function(str, parser) {","  var parsed = {};","  var o = jsonld.url.parsers[parser || 'full'];","  var m = o.regex.exec(str);","  var i = o.keys.length;","  while(i--) {","    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];","  }","  parsed.normalizedPath = _removeDotSegments(parsed.path, !!parsed.authority);","  return parsed;","};","","/**"," * Removes dot segments from a URL path."," *"," * @param path the path to remove dot segments from."," * @param hasAuthority true if the URL has an authority, false if not."," */","function _removeDotSegments(path, hasAuthority) {","  var rval = '';","","  if(path.indexOf('/') === 0) {","    rval = '/';","  }","","  // RFC 3986 5.2.4 (reworked)","  var input = path.split('/');","  var output = [];","  while(input.length > 0) {","    if(input[0] === '.' || (input[0] === '' && input.length > 1)) {","      input.shift();","      continue;","    }","    if(input[0] === '..') {","      input.shift();","      if(hasAuthority ||","        (output.length > 0 && output[output.length - 1] !== '..')) {","        output.pop();","      } else {","        // leading relative URL '..'","        output.push('..');","      }","      continue;","    }","    output.push(input.shift());","  }","","  return rval + output.join('/');","}","","if(_nodejs) {","  // use node document loader by default","  jsonld.useDocumentLoader('node');","} else if(typeof XMLHttpRequest !== 'undefined') {","  // use xhr document loader by default","  jsonld.useDocumentLoader('xhr');","}","","if(_nodejs) {","  jsonld.use = function(extension) {","    switch(extension) {","      // TODO: Deprecated as of 0.4.0. Remove at some point.","      case 'request':","        // use node JSON-LD request extension","        jsonld.request = require('jsonld-request');","        break;","      default:","        throw new JsonLdError(","          'Unknown extension.',","          'jsonld.UnknownExtension', {extension: extension});","    }","  };","","  // expose version","  var _module = {exports: {}, filename: __dirname};","  require('pkginfo')(_module, 'version');","  jsonld.version = _module.exports.version;","}","","// end of jsonld API factory","return jsonld;","};","","// external APIs:","","// used to generate a new jsonld API instance","var factory = function() {","  return wrapper(function() {","    return factory();","  });","};","","if(!_nodejs && (typeof define === 'function' && define.amd)) {","  // export AMD API","  define([], function() {","    // now that module is defined, wrap main jsonld API instance","    wrapper(factory);","    return factory;","  });","} else {","  // wrap the main jsonld API instance","  wrapper(factory);","","  if(typeof require === 'function' &&","    typeof module !== 'undefined' && module.exports) {","    // export CommonJS/nodejs API","    module.exports = factory;","  }","","  if(_browser) {","    // export simple browser API","    if(typeof jsonld === 'undefined') {","      jsonld = jsonldjs = factory;","    } else {","      jsonldjs = factory;","    }","  }","}","","return factory;","","})();",""],"l":{"36":1,"39":1,"41":1,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"56":1,"76":1,"77":0,"78":0,"79":0,"84":0,"85":0,"86":0,"88":0,"90":0,"91":0,"92":0,"99":0,"100":0,"101":0,"106":0,"107":0,"109":0,"110":0,"112":0,"113":0,"115":0,"116":0,"118":0,"119":0,"121":0,"122":0,"124":0,"127":0,"130":0,"131":0,"132":0,"133":0,"136":0,"140":0,"141":0,"142":0,"148":0,"149":0,"150":0,"151":0,"156":0,"157":0,"159":0,"161":0,"164":0,"169":1,"170":0,"171":0,"174":0,"175":0,"177":0,"178":0,"180":0,"182":0,"184":0,"188":0,"189":0,"193":0,"194":0,"195":0,"198":0,"199":0,"200":0,"201":0,"202":0,"207":0,"208":0,"209":0,"213":0,"215":0,"216":0,"217":0,"218":0,"219":0,"221":0,"222":0,"224":0,"225":0,"226":0,"227":0,"231":0,"247":1,"248":0,"249":0,"250":0,"255":0,"256":0,"257":0,"259":0,"262":0,"263":0,"265":0,"266":0,"269":0,"271":0,"272":0,"273":0,"274":0,"276":0,"277":0,"278":0,"282":0,"283":0,"286":0,"294":0,"296":0,"297":0,"298":0,"300":0,"303":0,"306":1,"308":0,"309":0,"312":0,"316":0,"317":0,"318":0,"319":0,"321":0,"324":0,"325":0,"326":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"337":0,"338":0,"343":0,"344":0,"349":0,"353":0,"355":0,"356":0,"357":0,"361":0,"362":0,"365":0,"367":0,"383":1,"384":0,"385":0,"386":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"399":0,"402":0,"403":0,"405":0,"406":0,"410":0,"411":0,"412":0,"417":0,"418":0,"420":0,"422":0,"425":0,"426":0,"430":0,"431":0,"432":0,"433":0,"434":0,"438":0,"459":1,"460":0,"461":0,"462":0,"467":0,"468":0,"469":0,"471":0,"474":0,"475":0,"477":0,"478":0,"480":0,"481":0,"483":0,"484":0,"485":0,"487":0,"489":0,"491":0,"492":0,"493":0,"494":0,"496":0,"497":0,"498":0,"502":0,"503":0,"506":0,"514":0,"516":0,"517":0,"518":0,"520":0,"523":0,"526":1,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"538":0,"540":0,"542":0,"545":0,"549":0,"550":0,"551":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"567":0,"568":0,"570":0,"572":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"587":0,"589":0,"590":0,"591":0,"611":1,"614":0,"615":0,"616":0,"618":0,"619":0,"635":1,"636":0,"637":0,"638":0,"640":0,"643":0,"644":0,"646":0,"647":0,"651":0,"652":0,"653":0,"658":0,"659":0,"661":0,"663":0,"667":0,"668":0,"669":0,"670":0,"671":0,"676":0,"677":0,"679":0,"681":0,"682":0,"686":0,"687":0,"688":0,"690":0,"694":0,"695":0,"696":0,"699":0,"700":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"713":0,"715":0,"716":0,"717":0,"718":0,"722":0,"723":0,"725":0,"726":0,"727":0,"728":0,"730":0,"731":0,"732":0,"734":0,"735":0,"736":0,"738":0,"741":0,"765":1,"766":0,"767":0,"768":0,"773":0,"774":0,"775":0,"777":0,"780":0,"781":0,"783":0,"784":0,"786":0,"787":0,"790":0,"791":0,"792":0,"796":0,"798":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"811":0,"831":1,"832":0,"833":0,"834":0,"839":0,"840":0,"841":0,"843":0,"846":0,"847":0,"849":0,"850":0,"853":0,"855":0,"856":0,"860":0,"862":0,"863":0,"865":0,"866":0,"867":0,"873":0,"874":0,"878":0,"879":0,"881":0,"882":0,"883":0,"884":0,"886":0,"889":0,"890":0,"892":0,"895":0,"897":0,"898":0,"899":0,"903":0,"906":1,"908":0,"927":1,"928":0,"929":0,"930":0,"935":0,"936":0,"937":0,"939":0,"942":0,"943":0,"945":0,"946":0,"950":0,"951":0,"952":0,"957":0,"958":0,"960":0,"961":0,"962":0,"963":0,"965":0,"970":0,"972":0,"991":1,"992":0,"993":0,"994":0,"999":0,"1000":0,"1001":0,"1003":0,"1006":0,"1007":0,"1009":0,"1010":0,"1014":0,"1015":0,"1016":0,"1021":0,"1022":0,"1023":0,"1025":0,"1028":0,"1052":1,"1053":0,"1054":0,"1055":0,"1058":0,"1059":0,"1060":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1073":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1084":0,"1087":1,"1088":0,"1089":0,"1091":0,"1092":0,"1093":0,"1097":0,"1098":0,"1099":0,"1103":1,"1104":0,"1105":0,"1106":0,"1109":0,"1110":0,"1112":0,"1113":0,"1114":0,"1116":0,"1117":0,"1123":0,"1124":0,"1126":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1134":0,"1135":0,"1136":0,"1137":0,"1145":0,"1147":0,"1151":0,"1152":0,"1153":0,"1154":0,"1156":0,"1157":0,"1161":0,"1162":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1174":0,"1187":1,"1188":0,"1189":0,"1190":0,"1201":1,"1202":0,"1216":1,"1217":0,"1221":0,"1222":0,"1224":0,"1225":0,"1233":1,"1234":0,"1235":0,"1236":0,"1253":1,"1254":2,"1255":2,"1256":2,"1259":2,"1260":2,"1261":2,"1262":0,"1263":0,"1265":0,"1268":2,"1269":0,"1270":0,"1272":0,"1274":2,"1275":0,"1276":0,"1278":0,"1280":0,"1281":0,"1284":0,"1286":2,"1287":0,"1288":0,"1290":0,"1293":2,"1294":0,"1295":0,"1297":0,"1299":2,"1300":0,"1301":0,"1303":0,"1306":2,"1307":0,"1308":0,"1310":0,"1312":2,"1313":0,"1314":0,"1316":0,"1320":2,"1321":1,"1322":0,"1323":0,"1325":0,"1328":1,"1329":0,"1332":1,"1333":0,"1336":1,"1337":0,"1342":2,"1343":2,"1345":0,"1346":0,"1348":0,"1349":0,"1353":2,"1363":1,"1364":0,"1365":0,"1366":0,"1368":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1377":0,"1384":1,"1388":1,"1389":1,"1390":1,"1391":0,"1392":0,"1394":0,"1396":1,"1401":1,"1402":1,"1403":1,"1404":1,"1406":0,"1410":1,"1411":1,"1415":1,"1424":1,"1425":0,"1426":0,"1433":0,"1444":1,"1446":1,"1448":0,"1450":0,"1453":1,"1454":1,"1456":0,"1458":1,"1477":1,"1478":0,"1480":0,"1481":0,"1482":0,"1483":0,"1484":0,"1485":0,"1487":0,"1488":0,"1489":0,"1490":0,"1491":0,"1493":0,"1494":0,"1495":0,"1496":0,"1497":0,"1499":0,"1502":0,"1508":1,"1509":1,"1511":1,"1512":1,"1513":1,"1514":1,"1516":1,"1517":0,"1520":0,"1521":0,"1525":0,"1526":0,"1527":0,"1528":0,"1530":0,"1532":0,"1533":0,"1535":0,"1536":0,"1540":0,"1541":0,"1543":0,"1549":0,"1550":0,"1552":0,"1553":0,"1554":0,"1555":0,"1556":0,"1557":0,"1571":1,"1572":0,"1573":0,"1574":0,"1575":0,"1577":1,"1578":0,"1579":0,"1580":0,"1581":0,"1583":0,"1584":0,"1586":0,"1588":1,"1589":0,"1590":0,"1592":0,"1593":0,"1601":1,"1602":1,"1603":1,"1604":1,"1606":1,"1607":0,"1608":0,"1609":0,"1610":0,"1611":0,"1613":0,"1615":1,"1617":0,"1618":0,"1619":0,"1621":0,"1622":0,"1623":0,"1624":0,"1625":0,"1627":0,"1633":1,"1640":1,"1654":1,"1655":0,"1656":0,"1659":0,"1661":0,"1662":0,"1663":0,"1666":0,"1668":1,"1669":0,"1670":0,"1676":0,"1677":0,"1683":0,"1695":0,"1698":0,"1699":0,"1700":0,"1702":0,"1703":0,"1704":0,"1710":0,"1711":0,"1715":0,"1718":0,"1746":1,"1747":1,"1748":1,"1749":1,"1750":1,"1751":1,"1752":1,"1756":1,"1757":1,"1758":0,"1759":0,"1762":1,"1763":1,"1764":0,"1768":1,"1769":0,"1772":1,"1773":0,"1774":0,"1780":0,"1781":0,"1788":0,"1789":0,"1790":0,"1792":0,"1793":0,"1794":0,"1801":1,"1802":0,"1805":0,"1806":0,"1811":0,"1812":0,"1813":0,"1823":0,"1826":0,"1828":0,"1829":0,"1835":0,"1836":0,"1841":0,"1843":0,"1844":0,"1853":0,"1854":0,"1863":0,"1864":0,"1867":0,"1874":0,"1891":1,"1892":0,"1893":0,"1894":0,"1897":0,"1899":0,"1900":0,"1901":0,"1904":0,"1906":1,"1907":0,"1908":0,"1914":0,"1915":0,"1921":0,"1922":0,"1923":0,"1924":0,"1925":0,"1934":0,"1937":0,"1938":0,"1939":0,"1940":0,"1942":0,"1944":0,"1945":0,"1946":0,"1952":0,"1953":0,"1957":0,"1959":0,"1960":0,"1966":0,"1967":0,"1968":0,"1982":1,"1983":1,"1984":0,"1991":1,"2005":1,"2007":0,"2008":0,"2009":0,"2010":0,"2011":0,"2013":0,"2016":0,"2017":0,"2019":0,"2020":0,"2024":0,"2025":0,"2029":0,"2030":0,"2031":0,"2033":0,"2034":0,"2035":0,"2037":0,"2039":0,"2041":0,"2043":0,"2055":1,"2056":0,"2057":0,"2058":0,"2059":0,"2061":0,"2073":1,"2074":0,"2075":0,"2076":0,"2077":0,"2078":0,"2079":0,"2080":0,"2082":0,"2083":0,"2084":0,"2085":0,"2088":0,"2090":0,"2093":0,"2109":1,"2110":0,"2111":0,"2112":0,"2114":0,"2115":0,"2118":0,"2119":0,"2121":0,"2123":0,"2124":0,"2126":0,"2128":0,"2132":0,"2134":0,"2138":0,"2139":0,"2143":0,"2155":1,"2156":0,"2157":0,"2158":0,"2160":0,"2169":1,"2170":0,"2183":1,"2184":0,"2185":0,"2186":0,"2190":0,"2191":0,"2194":0,"2195":0,"2196":0,"2197":0,"2199":0,"2217":1,"2219":0,"2220":0,"2224":0,"2229":0,"2233":0,"2234":0,"2237":0,"2251":1,"2252":0,"2255":0,"2256":0,"2260":0,"2261":0,"2265":0,"2266":0,"2268":0,"2270":0,"2271":0,"2273":0,"2277":0,"2281":1,"2304":1,"2305":2,"2313":1,"2314":0,"2317":1,"2319":1,"2320":1,"2322":1,"2323":1,"2341":1,"2342":1,"2343":1,"2344":1,"2346":1,"2347":1,"2348":1,"2349":1,"2350":1,"2351":1,"2352":1,"2353":1,"2354":1,"2355":1,"2357":1,"2358":1,"2367":1,"2368":0,"2369":0,"2370":0,"2371":0,"2372":0,"2374":0,"2375":0,"2376":0,"2378":1,"2379":1,"2380":0,"2381":0,"2387":1,"2401":1,"2404":0,"2405":0,"2406":0,"2408":0,"2410":0,"2411":0,"2414":0,"2416":0,"2418":0,"2419":0,"2422":0,"2426":0,"2427":0,"2429":0,"2430":0,"2431":0,"2432":0,"2438":0,"2439":0,"2440":0,"2442":0,"2443":0,"2445":0,"2447":0,"2451":0,"2453":0,"2455":0,"2457":0,"2458":0,"2460":0,"2464":0,"2465":0,"2466":0,"2467":0,"2470":0,"2471":0,"2474":0,"2475":0,"2480":0,"2481":0,"2482":0,"2488":0,"2489":0,"2490":0,"2492":0,"2496":0,"2498":0,"2502":0,"2503":0,"2505":0,"2506":0,"2508":0,"2509":0,"2511":0,"2515":0,"2517":0,"2518":0,"2521":0,"2525":0,"2527":0,"2529":0,"2530":0,"2534":0,"2535":0,"2536":0,"2540":0,"2543":0,"2544":0,"2545":0,"2551":0,"2552":0,"2555":0,"2560":0,"2561":0,"2564":0,"2567":0,"2571":0,"2572":0,"2573":0,"2574":0,"2578":0,"2582":0,"2584":0,"2585":0,"2588":0,"2590":0,"2591":0,"2592":0,"2595":0,"2596":0,"2599":0,"2601":0,"2611":0,"2613":0,"2614":0,"2615":0,"2617":0,"2622":0,"2623":0,"2628":0,"2633":0,"2639":0,"2646":0,"2650":0,"2666":1,"2668":0,"2671":0,"2672":0,"2675":0,"2677":0,"2679":0,"2683":0,"2687":0,"2688":0,"2689":0,"2691":0,"2692":0,"2694":0,"2695":0,"2697":0,"2702":0,"2703":0,"2704":0,"2706":0,"2710":0,"2716":0,"2717":0,"2721":0,"2724":0,"2725":0,"2726":0,"2727":0,"2728":0,"2729":0,"2732":0,"2733":0,"2737":0,"2740":0,"2742":0,"2745":0,"2746":0,"2747":0,"2752":0,"2753":0,"2761":0,"2762":0,"2763":0,"2767":0,"2768":0,"2775":0,"2776":0,"2780":0,"2782":0,"2789":0,"2791":0,"2799":0,"2800":0,"2802":0,"2804":0,"2805":0,"2811":0,"2815":0,"2816":0,"2817":0,"2825":0,"2826":0,"2827":0,"2832":0,"2835":0,"2836":0,"2837":0,"2845":0,"2846":0,"2847":0,"2848":0,"2850":0,"2851":0,"2853":0,"2854":0,"2855":0,"2856":0,"2857":0,"2858":0,"2863":0,"2868":0,"2871":0,"2873":0,"2875":0,"2876":0,"2878":0,"2879":0,"2880":0,"2881":0,"2882":0,"2883":0,"2884":0,"2885":0,"2887":0,"2888":0,"2889":0,"2890":0,"2891":0,"2893":0,"2896":0,"2900":0,"2901":0,"2902":0,"2903":0,"2904":0,"2906":0,"2908":0,"2909":0,"2915":0,"2920":0,"2921":0,"2925":0,"2928":0,"2930":0,"2935":0,"2936":0,"2937":0,"2938":0,"2940":0,"2941":0,"2942":0,"2943":0,"2948":0,"2951":0,"2956":0,"2959":0,"2964":0,"2965":0,"2967":0,"2969":0,"2970":0,"2975":0,"2976":0,"2977":0,"2979":0,"2980":0,"2982":0,"2983":0,"2985":0,"2986":0,"2993":0,"2994":0,"2995":0,"2997":0,"3001":0,"3003":0,"3008":0,"3010":0,"3011":0,"3013":0,"3014":0,"3021":0,"3022":0,"3023":0,"3024":0,"3026":0,"3028":0,"3032":0,"3036":0,"3038":0,"3042":0,"3055":1,"3056":0,"3059":0,"3060":0,"3061":0,"3064":0,"3074":1,"3075":0,"3078":0,"3079":0,"3080":0,"3081":0,"3083":0,"3084":0,"3087":0,"3099":1,"3101":0,"3110":0,"3111":0,"3112":0,"3115":0,"3116":0,"3117":0,"3127":1,"3128":0,"3129":0,"3131":0,"3132":0,"3134":0,"3145":1,"3146":0,"3147":0,"3148":0,"3150":0,"3151":0,"3152":0,"3153":0,"3155":0,"3156":0,"3158":0,"3159":0,"3160":0,"3163":0,"3164":0,"3165":0,"3167":0,"3168":0,"3170":0,"3172":0,"3173":0,"3174":0,"3177":0,"3178":0,"3179":0,"3182":0,"3183":0,"3187":0,"3188":0,"3190":0,"3191":0,"3192":0,"3194":0,"3199":0,"3201":0,"3204":0,"3215":0,"3216":0,"3219":0,"3220":0,"3224":0,"3225":0,"3226":0,"3227":0,"3228":0,"3229":0,"3230":0,"3231":0,"3239":0,"3240":0,"3246":0,"3247":0,"3250":0,"3251":0,"3252":0,"3253":0,"3254":0,"3257":0,"3258":0,"3263":0,"3265":0,"3268":0,"3272":0,"3273":0,"3274":0,"3278":0,"3279":0,"3280":0,"3281":0,"3285":0,"3288":0,"3289":0,"3290":0,"3291":0,"3292":0,"3293":0,"3294":0,"3295":0,"3296":0,"3297":0,"3298":0,"3300":0,"3301":0,"3306":0,"3307":0,"3311":0,"3322":1,"3324":0,"3325":0,"3326":0,"3328":0,"3329":0,"3330":0,"3331":0,"3333":0,"3334":0,"3337":0,"3349":1,"3351":0,"3353":0,"3355":0,"3358":0,"3359":0,"3364":0,"3365":0,"3366":0,"3369":0,"3370":0,"3371":0,"3375":0,"3376":0,"3380":0,"3381":0,"3387":0,"3388":0,"3389":0,"3390":0,"3391":0,"3396":0,"3397":0,"3400":0,"3403":0,"3404":0,"3407":0,"3408":0,"3409":0,"3410":0,"3414":0,"3415":0,"3421":0,"3422":0,"3424":0,"3425":0,"3429":0,"3430":0,"3431":0,"3432":0,"3433":0,"3434":0,"3438":0,"3439":0,"3444":0,"3446":0,"3450":0,"3451":0,"3452":0,"3453":0,"3454":0,"3455":0,"3461":0,"3463":0,"3467":0,"3468":0,"3472":0,"3473":0,"3477":0,"3487":1,"3488":0,"3489":0,"3490":0,"3491":0,"3492":0,"3493":0,"3494":0,"3496":0,"3497":0,"3498":0,"3500":0,"3502":0,"3503":0,"3508":0,"3514":0,"3525":1,"3526":0,"3527":0,"3528":0,"3530":0,"3531":0,"3532":0,"3534":0,"3535":0,"3539":0,"3540":0,"3541":0,"3542":0,"3543":0,"3548":0,"3561":1,"3563":0,"3564":0,"3568":0,"3569":0,"3570":0,"3571":0,"3572":0,"3576":0,"3579":0,"3580":0,"3583":0,"3584":0,"3588":0,"3589":0,"3592":0,"3594":0,"3596":0,"3597":0,"3599":0,"3601":0,"3602":0,"3606":0,"3607":0,"3609":0,"3611":0,"3623":1,"3624":0,"3626":0,"3627":0,"3628":0,"3629":0,"3630":0,"3631":0,"3632":0,"3633":0,"3634":0,"3635":0,"3636":0,"3637":0,"3640":0,"3641":0,"3644":0,"3645":0,"3646":0,"3649":0,"3650":0,"3654":0,"3655":0,"3656":0,"3659":0,"3660":0,"3664":0,"3665":0,"3669":0,"3670":0,"3673":0,"3675":0,"3676":0,"3683":0,"3696":1,"3697":0,"3698":0,"3699":0,"3701":0,"3702":0,"3704":0,"3705":0,"3707":0,"3708":0,"3709":0,"3712":0,"3713":0,"3716":0,"3719":0,"3730":1,"3731":0,"3734":0,"3735":0,"3736":0,"3737":0,"3740":0,"3741":0,"3742":0,"3743":0,"3744":0,"3745":0,"3748":0,"3749":0,"3750":0,"3751":0,"3752":0,"3753":0,"3754":0,"3755":0,"3756":0,"3758":0,"3759":0,"3763":0,"3764":0,"3765":0,"3769":0,"3770":0,"3773":0,"3784":1,"3786":0,"3787":0,"3791":0,"3794":0,"3795":0,"3797":0,"3798":0,"3799":0,"3802":0,"3803":0,"3804":0,"3805":0,"3806":0,"3807":0,"3809":0,"3810":0,"3811":0,"3812":0,"3813":0,"3815":0,"3816":0,"3820":0,"3822":0,"3824":0,"3825":0,"3829":0,"3840":1,"3841":0,"3842":0,"3843":0,"3844":0,"3845":0,"3848":0,"3849":0,"3851":0,"3852":0,"3854":0,"3859":1,"3861":1,"3863":1,"3864":1,"3865":1,"3866":1,"3867":1,"3868":1,"3869":1,"3870":1,"3871":1,"3872":1,"3873":0,"3875":1,"3877":1,"3878":0,"3880":1,"3882":1,"3883":1,"3884":1,"3885":0,"3888":1,"3893":1,"3894":0,"3896":0,"3897":0,"3901":0,"3902":0,"3904":0,"3905":0,"3906":0,"3910":0,"3911":0,"3912":0,"3913":0,"3917":0,"3918":0,"3919":0,"3920":0,"3921":0,"3922":0,"3923":0,"3924":0,"3930":0,"3931":0,"3932":0,"3937":1,"3938":0,"3939":0,"3940":0,"3941":0,"3942":0,"3943":0,"3944":0,"3945":0,"3946":0,"3948":0,"3949":0,"3950":0,"3953":0,"3954":0,"3955":0,"3956":0,"3957":0,"3959":0,"3960":0,"3961":0,"3965":0,"3966":0,"3967":0,"3969":0,"3970":0,"3971":0,"3974":0,"3979":1,"3980":0,"3981":0,"3982":0,"3987":1,"3988":0,"3989":0,"3990":0,"3991":0,"3993":0,"3994":0,"3996":0,"4001":1,"4002":0,"4003":0,"4004":0,"4007":0,"4008":0,"4009":0,"4018":0,"4020":0,"4023":0,"4024":0,"4025":0,"4027":0,"4028":0,"4029":0,"4030":0,"4032":0,"4035":0,"4040":0,"4041":0,"4042":0,"4044":0,"4045":0,"4046":0,"4048":0,"4049":0,"4052":0,"4063":0,"4066":0,"4068":0,"4071":0,"4073":0,"4077":0,"4080":0,"4081":0,"4082":0,"4086":0,"4087":0,"4089":0,"4091":0,"4098":0,"4099":0,"4102":0,"4103":0,"4104":0,"4112":0,"4113":0,"4116":0,"4119":0,"4122":0,"4123":0,"4132":0,"4133":0,"4136":0,"4139":0,"4140":0,"4142":0,"4145":0,"4146":0,"4151":0,"4156":0,"4160":0,"4161":0,"4162":0,"4164":0,"4165":0,"4172":0,"4173":0,"4175":0,"4181":0,"4182":0,"4184":0,"4196":0,"4197":0,"4199":0,"4204":0,"4205":0,"4207":0,"4211":0,"4212":0,"4217":0,"4220":0,"4221":0,"4222":0,"4225":0,"4226":0,"4231":0,"4236":1,"4237":0,"4240":0,"4241":0,"4242":0,"4247":0,"4251":0,"4254":0,"4260":0,"4261":0,"4265":0,"4267":0,"4268":0,"4270":0,"4271":0,"4274":0,"4278":0,"4279":0,"4284":1,"4285":0,"4286":0,"4288":0,"4289":0,"4290":0,"4294":1,"4296":0,"4302":0,"4303":0,"4305":0,"4306":0,"4307":0,"4309":0,"4310":0,"4311":0,"4313":0,"4314":0,"4315":0,"4317":0,"4318":0,"4322":0,"4323":0,"4328":0,"4329":0,"4333":0,"4334":0,"4338":0,"4342":0,"4347":1,"4348":0,"4352":1,"4353":0,"4358":0,"4359":0,"4360":0,"4362":0,"4363":0,"4364":0,"4366":0,"4367":0,"4376":0,"4377":0,"4379":0,"4382":0,"4385":0,"4388":0,"4389":0,"4390":0,"4392":0,"4395":0,"4398":0,"4402":0,"4404":0,"4407":0,"4410":0,"4411":0,"4416":0,"4417":0,"4421":0,"4428":0,"4431":0,"4433":0,"4438":0,"4442":0,"4444":0,"4445":0,"4450":0,"4453":0,"4457":0,"4463":0,"4466":0,"4468":0,"4476":0,"4477":0,"4478":0,"4480":0,"4484":0,"4485":0,"4489":0,"4492":0,"4493":0,"4500":0,"4505":1,"4506":0,"4510":0,"4514":0,"4517":0,"4521":0,"4522":0,"4524":0,"4531":0,"4532":0,"4533":0,"4535":0,"4536":0,"4541":0,"4542":0,"4544":0,"4546":0,"4550":0,"4555":1,"4556":0,"4558":0,"4559":0,"4561":0,"4565":1,"4571":1,"4573":1,"4574":0,"4575":0,"4577":1,"4580":1,"4581":0,"4582":0,"4584":0,"4585":0,"4586":0,"4588":0,"4590":0,"4594":1,"4595":0,"4599":1,"4600":0,"4604":0,"4608":0,"4611":0,"4616":0,"4617":0,"4618":0,"4619":0,"4620":0,"4621":0,"4626":0,"4627":0,"4630":0,"4635":0,"4637":0,"4638":0,"4640":0,"4642":0,"4645":0,"4649":1,"4664":1,"4666":0,"4667":0,"4668":0,"4670":0,"4674":0,"4675":0,"4676":0,"4678":0,"4682":0,"4683":0,"4684":0,"4686":0,"4687":0,"4690":0,"4691":0,"4693":0,"4699":0,"4700":0,"4701":0,"4702":0,"4703":0,"4704":0,"4710":0,"4711":0,"4715":0,"4716":0,"4720":0,"4721":0,"4722":0,"4723":0,"4724":0,"4725":0,"4728":0,"4729":0,"4733":0,"4734":0,"4735":0,"4736":0,"4737":0,"4738":0,"4739":0,"4740":0,"4741":0,"4742":0,"4744":0,"4745":0,"4750":0,"4754":0,"4756":0,"4757":0,"4759":0,"4760":0,"4761":0,"4765":0,"4766":0,"4769":0,"4774":0,"4775":0,"4779":0,"4782":0,"4783":0,"4787":0,"4788":0,"4789":0,"4791":0,"4792":0,"4794":0,"4796":0,"4800":0,"4802":0,"4805":0,"4808":0,"4809":0,"4811":0,"4812":0,"4813":0,"4814":0,"4819":0,"4820":0,"4827":1,"4829":0,"4830":0,"4831":0,"4832":0,"4833":0,"4834":0,"4836":0,"4837":0,"4838":0,"4839":0,"4843":0,"4844":0,"4846":0,"4847":0,"4848":0,"4849":0,"4851":0,"4852":0,"4856":0,"4868":1,"4870":0,"4871":0,"4874":0,"4875":0,"4882":0,"4885":0,"4886":0,"4887":0,"4888":0,"4890":0,"4896":0,"4897":0,"4903":0,"4904":0,"4908":0,"4909":0,"4910":0,"4916":0,"4918":0,"4919":0,"4923":0,"4925":0,"4926":0,"4928":0,"4932":0,"4935":0,"4936":0,"4937":0,"4940":0,"4941":0,"4942":0,"4946":0,"4947":0,"4951":0,"4952":0,"4953":0,"4956":0,"4958":0,"4959":0,"4962":0,"4963":0,"4964":0,"4965":0,"4966":0,"4969":0,"4972":0,"4975":0,"4978":0,"4980":0,"4982":0,"4985":0,"4991":0,"4992":0,"4993":0,"4996":0,"4997":0,"5002":0,"5003":0,"5004":0,"5005":0,"5006":0,"5007":0,"5009":0,"5010":0,"5012":0,"5017":0,"5020":0,"5034":1,"5035":0,"5036":0,"5037":0,"5038":0,"5041":0,"5053":1,"5054":0,"5055":0,"5056":0,"5059":0,"5071":1,"5072":0,"5073":0,"5074":0,"5079":0,"5080":0,"5081":0,"5082":0,"5083":0,"5084":0,"5087":0,"5095":1,"5096":0,"5097":0,"5113":1,"5115":0,"5116":0,"5117":0,"5118":0,"5119":0,"5120":0,"5123":0,"5135":1,"5137":0,"5139":0,"5140":0,"5142":0,"5143":0,"5146":0,"5150":0,"5151":0,"5152":0,"5153":0,"5155":0,"5156":0,"5158":0,"5161":0,"5162":0,"5163":0,"5165":0,"5166":0,"5170":0,"5172":0,"5174":0,"5176":0,"5178":0,"5179":0,"5183":0,"5185":0,"5186":0,"5191":0,"5200":1,"5202":0,"5203":0,"5204":0,"5205":0,"5208":0,"5211":0,"5213":0,"5214":0,"5215":0,"5216":0,"5221":0,"5222":0,"5223":0,"5227":0,"5229":0,"5230":0,"5231":0,"5232":0,"5234":0,"5235":0,"5239":0,"5249":1,"5250":0,"5251":0,"5253":0,"5266":1,"5268":0,"5269":0,"5270":0,"5271":0,"5273":0,"5274":0,"5277":0,"5278":0,"5280":0,"5281":0,"5282":0,"5284":0,"5288":0,"5289":0,"5293":0,"5294":0,"5295":0,"5299":0,"5300":0,"5301":0,"5302":0,"5303":0,"5304":0,"5306":0,"5309":0,"5313":0,"5318":0,"5319":0,"5320":0,"5321":0,"5323":0,"5325":0,"5328":0,"5339":1,"5340":0,"5341":0,"5343":0,"5344":0,"5346":0,"5347":0,"5349":0,"5364":1,"5366":0,"5367":0,"5371":0,"5374":0,"5377":0,"5378":0,"5381":0,"5382":0,"5386":0,"5389":0,"5392":0,"5394":0,"5396":0,"5397":0,"5399":0,"5400":0,"5401":0,"5404":0,"5405":0,"5407":0,"5408":0,"5409":0,"5413":0,"5417":0,"5433":1,"5435":0,"5436":0,"5440":0,"5441":0,"5444":0,"5445":0,"5447":0,"5449":0,"5452":0,"5453":0,"5454":0,"5456":0,"5460":0,"5461":0,"5464":0,"5465":0,"5466":0,"5470":0,"5471":0,"5473":0,"5474":0,"5475":0,"5476":0,"5477":0,"5480":0,"5481":0,"5483":0,"5484":0,"5485":0,"5486":0,"5487":0,"5488":0,"5489":0,"5490":0,"5491":0,"5492":0,"5493":0,"5494":0,"5497":0,"5500":0,"5502":0,"5503":0,"5504":0,"5505":0,"5507":0,"5508":0,"5509":0,"5510":0,"5514":0,"5515":0,"5518":0,"5519":0,"5520":0,"5521":0,"5522":0,"5524":0,"5527":0,"5528":0,"5529":0,"5530":0,"5531":0,"5532":0,"5533":0,"5536":0,"5537":0,"5539":0,"5543":0,"5544":0,"5546":0,"5547":0,"5552":0,"5553":0,"5555":0,"5556":0,"5558":0,"5559":0,"5560":0,"5567":0,"5568":0,"5569":0,"5570":0,"5573":0,"5574":0,"5575":0,"5576":0,"5577":0,"5581":0,"5582":0,"5583":0,"5584":0,"5589":0,"5590":0,"5595":0,"5597":0,"5603":0,"5604":0,"5608":0,"5609":0,"5613":0,"5626":1,"5628":0,"5630":0,"5631":0,"5633":0,"5637":0,"5641":0,"5643":0,"5644":0,"5652":0,"5653":0,"5655":0,"5656":0,"5657":0,"5659":0,"5661":0,"5664":0,"5667":0,"5668":0,"5671":0,"5673":0,"5675":0,"5677":0,"5681":0,"5683":0,"5687":0,"5688":0,"5689":0,"5693":0,"5694":0,"5697":0,"5698":0,"5699":0,"5711":1,"5712":0,"5714":0,"5715":0,"5718":0,"5725":0,"5727":0,"5728":0,"5734":0,"5735":0,"5742":0,"5743":0,"5747":0,"5750":0,"5751":0,"5752":0,"5753":0,"5757":0,"5758":0,"5761":0,"5762":0,"5770":0,"5771":0,"5773":0,"5774":0,"5775":0,"5780":0,"5781":0,"5782":0,"5788":0,"5790":0,"5791":0,"5796":0,"5797":0,"5798":0,"5799":0,"5800":0,"5801":0,"5806":0,"5808":0,"5810":0,"5811":0,"5817":0,"5823":0,"5824":0,"5826":0,"5828":0,"5829":0,"5830":0,"5832":0,"5835":0,"5837":0,"5838":0,"5841":0,"5845":0,"5846":0,"5852":0,"5857":0,"5859":0,"5860":0,"5861":0,"5862":0,"5868":0,"5870":0,"5872":0,"5873":0,"5879":0,"5880":0,"5889":0,"5892":0,"5893":0,"5894":0,"5896":0,"5902":0,"5904":0,"5911":0,"5914":0,"5915":0,"5916":0,"5917":0,"5924":0,"5925":0,"5927":0,"5931":0,"5932":0,"5933":0,"5956":1,"5958":0,"5959":0,"5963":0,"5966":0,"5967":0,"5970":0,"5971":0,"5972":0,"5975":0,"5976":0,"5979":0,"5981":0,"5986":0,"5987":0,"5988":0,"5989":0,"5993":0,"5994":0,"5998":0,"5999":0,"6003":0,"6004":0,"6005":0,"6009":0,"6013":0,"6014":0,"6018":0,"6019":0,"6020":0,"6023":0,"6026":1,"6028":0,"6029":0,"6032":0,"6033":0,"6037":0,"6038":0,"6042":0,"6045":0,"6049":0,"6050":0,"6051":0,"6052":0,"6054":0,"6056":0,"6057":0,"6058":0,"6059":0,"6061":0,"6064":0,"6066":0,"6069":0,"6072":0,"6073":0,"6074":0,"6075":0,"6077":0,"6080":0,"6082":0,"6087":0,"6090":0,"6091":0,"6092":0,"6094":0,"6095":0,"6096":0,"6098":0,"6099":0,"6103":0,"6104":0,"6107":0,"6118":1,"6120":0,"6121":0,"6124":0,"6125":0,"6129":0,"6130":0,"6131":0,"6132":0,"6134":0,"6138":0,"6139":0,"6143":0,"6147":0,"6148":0,"6149":0,"6150":0,"6151":0,"6152":0,"6154":0,"6155":0,"6159":0,"6160":0,"6163":0,"6164":0,"6165":0,"6170":0,"6173":0,"6174":0,"6176":0,"6177":0,"6181":0,"6182":0,"6185":0,"6196":1,"6197":0,"6198":0,"6212":1,"6213":0,"6216":0,"6217":0,"6219":0,"6222":0,"6223":0,"6226":0,"6230":0,"6231":0,"6232":0,"6233":0,"6234":0,"6235":0,"6236":0,"6239":0,"6242":0,"6243":0,"6244":0,"6246":0,"6247":0,"6248":0,"6249":0,"6251":0,"6253":0,"6255":0,"6257":0,"6258":0,"6259":0,"6260":0,"6262":0,"6265":0,"6267":0,"6271":0,"6272":0,"6277":0,"6279":0,"6281":0,"6282":0,"6284":0,"6285":0,"6287":0,"6288":0,"6293":0,"6296":0,"6297":0,"6303":0,"6304":0,"6307":0,"6318":1,"6319":0,"6320":0,"6322":0,"6323":0,"6324":0,"6325":0,"6326":0,"6327":0,"6329":0,"6331":0,"6332":0,"6334":0,"6338":0,"6339":0,"6340":0,"6342":0,"6354":1,"6355":0,"6356":0,"6365":1,"6366":0,"6367":0,"6368":0,"6369":0,"6370":0,"6371":0,"6372":0,"6373":0,"6375":0,"6376":0,"6378":0,"6389":1,"6390":0,"6391":0,"6393":0,"6413":0,"6415":0,"6425":1,"6426":0,"6436":1,"6437":0,"6447":1,"6448":0,"6456":1,"6458":0,"6459":0,"6463":0,"6464":0,"6466":0,"6467":0,"6468":0,"6469":0,"6470":0,"6475":0,"6476":0,"6490":1,"6491":0,"6502":1,"6503":0,"6514":1,"6515":0,"6525":1,"6526":0,"6536":1,"6537":0,"6548":1,"6549":0,"6559":1,"6564":0,"6565":0,"6567":0,"6568":0,"6570":0,"6580":1,"6584":0,"6594":1,"6598":0,"6608":1,"6612":0,"6622":1,"6627":0,"6628":0,"6629":0,"6630":0,"6632":0,"6636":0,"6646":1,"6647":0,"6658":1,"6659":0,"6660":0,"6661":0,"6662":0,"6663":0,"6664":0,"6666":0,"6667":0,"6668":0,"6669":0,"6672":0,"6674":0,"6676":0,"6690":1,"6691":0,"6692":0,"6693":0,"6694":0,"6696":0,"6697":0,"6698":0,"6699":0,"6700":0,"6701":0,"6705":0,"6708":0,"6709":0,"6710":0,"6711":0,"6712":0,"6713":0,"6715":0,"6716":0,"6717":0,"6719":0,"6720":0,"6721":0,"6723":0,"6725":0,"6727":0,"6731":0,"6733":0,"6735":0,"6736":0,"6737":0,"6739":0,"6743":0,"6745":0,"6758":1,"6760":0,"6763":0,"6764":0,"6765":0,"6766":0,"6770":0,"6774":0,"6777":0,"6779":0,"6780":0,"6784":0,"6786":0,"6790":0,"6791":0,"6792":0,"6793":0,"6798":0,"6799":0,"6800":0,"6802":0,"6803":0,"6807":0,"6809":0,"6810":0,"6811":0,"6813":0,"6814":0,"6817":0,"6820":0,"6821":0,"6822":0,"6824":0,"6829":0,"6830":0,"6839":0,"6840":0,"6846":0,"6847":0,"6848":0,"6852":0,"6853":0,"6855":0,"6859":0,"6860":0,"6861":0,"6863":0,"6867":0,"6868":0,"6869":0,"6871":0,"6872":0,"6873":0,"6874":0,"6878":0,"6879":0,"6880":0,"6885":0,"6889":1,"6890":0,"6891":0,"6892":0,"6894":0,"6895":0,"6896":0,"6897":0,"6900":0,"6911":1,"6913":0,"6914":0,"6915":0,"6916":0,"6917":0,"6918":0,"6919":0,"6920":0,"6921":0,"6922":0,"6923":0,"6926":0,"6927":0,"6928":0,"6929":0,"6932":0,"6936":0,"6939":0,"6940":0,"6941":0,"6942":0,"6943":0,"6946":0,"6947":0,"6951":0,"6952":0,"6953":0,"6959":0,"6962":0,"6963":0,"6965":0,"6969":0,"6972":0,"6973":0,"6974":0,"6975":0,"6977":0,"6978":0,"6979":0,"6980":0,"6981":0,"6982":0,"6984":0,"6986":0,"6992":0,"6996":0,"6997":0,"6998":0,"6999":0,"7000":0,"7004":0,"7005":0,"7008":0,"7009":0,"7010":0,"7011":0,"7012":0,"7015":0,"7016":0,"7021":0,"7025":1,"7034":1,"7035":0,"7036":0,"7037":0,"7038":0,"7039":0,"7040":0,"7041":0,"7043":0,"7046":0,"7061":1,"7062":0,"7063":0,"7064":0,"7065":0,"7066":0,"7067":0,"7070":0,"7073":0,"7074":0,"7076":0,"7078":0,"7081":0,"7082":0,"7084":0,"7086":0,"7089":0,"7090":0,"7091":0,"7092":0,"7094":0,"7100":0,"7101":0,"7102":0,"7103":0,"7105":0,"7106":0,"7111":0,"7112":0,"7113":0,"7115":0,"7119":0,"7120":0,"7130":1,"7131":0,"7132":0,"7134":0,"7135":0,"7136":0,"7137":0,"7138":0,"7142":0,"7143":0,"7144":0,"7146":0,"7147":0,"7149":0,"7150":0,"7151":0,"7154":0,"7157":0,"7158":0,"7160":0,"7164":0,"7165":0,"7167":0,"7171":0,"7172":0,"7174":0,"7175":0,"7177":0,"7178":0,"7179":0,"7180":0,"7181":0,"7182":0,"7183":0,"7189":0,"7192":0,"7193":0,"7194":0,"7196":0,"7200":0,"7201":0,"7202":0,"7203":0,"7204":0,"7206":0,"7209":0,"7212":0,"7215":0,"7220":0,"7224":1,"7232":1,"7233":1,"7234":1,"7235":1,"7237":1,"7239":1,"7246":1,"7247":0,"7248":0,"7249":0,"7250":0,"7261":1,"7263":0,"7264":0,"7268":0,"7269":0,"7272":0,"7273":0,"7276":0,"7279":1,"7290":1,"7291":0,"7294":1,"7302":1,"7304":0,"7306":0,"7308":0,"7309":0,"7310":0,"7319":1,"7320":0,"7329":1,"7331":0,"7338":0,"7339":0,"7340":0,"7341":0,"7342":0,"7343":0,"7344":0,"7347":0,"7348":0,"7353":0,"7354":0,"7357":0,"7358":0,"7359":0,"7362":0,"7363":0,"7364":0,"7369":0,"7380":1,"7381":0,"7382":0,"7384":0,"7385":0,"7388":0,"7390":1,"7391":0,"7392":0,"7393":0,"7395":0,"7399":1,"7401":1,"7403":1,"7404":1,"7405":0,"7406":0,"7409":0,"7411":0,"7413":1,"7414":0,"7416":1,"7417":0,"7419":1,"7423":0,"7424":0,"7425":0,"7428":0,"7430":0,"7432":0,"7433":0,"7435":0,"7436":0,"7446":0,"7447":0,"7448":0,"7451":0,"7454":0,"7456":0,"7457":0,"7458":0,"7459":0,"7460":0,"7461":0,"7463":0,"7464":0,"7465":0,"7471":0,"7479":0,"7481":0,"7484":0,"7485":0,"7486":0,"7487":0,"7491":0,"7494":0,"7496":0,"7507":0,"7509":0,"7512":0,"7513":0,"7514":0,"7515":0,"7516":0,"7517":0,"7518":0,"7519":0,"7523":0,"7526":0,"7527":0,"7531":0,"7532":0,"7535":0,"7543":0,"7569":0,"7570":0,"7573":0,"7580":0,"7581":0,"7587":0,"7588":0,"7589":0,"7594":0,"7597":0,"7600":0,"7601":0,"7602":0,"7610":0,"7611":0,"7612":0,"7614":0,"7616":0,"7624":0,"7625":0,"7638":0,"7639":0,"7644":0,"7645":0,"7653":0,"7654":0,"7662":0,"7663":0,"7671":0,"7672":0,"7678":0,"7679":0,"7680":0,"7688":0,"7689":0,"7690":0,"7691":0,"7692":0,"7693":0,"7695":0,"7697":0,"7702":0,"7707":0,"7708":0,"7710":0,"7711":0,"7714":0,"7715":0,"7716":0,"7718":0,"7721":0,"7724":0,"7727":0,"7729":0,"7730":0,"7731":0,"7732":0,"7734":0,"7735":0,"7736":0,"7737":0,"7738":0,"7745":0,"7746":0,"7747":0,"7748":0,"7749":0,"7750":0,"7751":0,"7752":0,"7753":0,"7754":0,"7756":0,"7757":0,"7758":0,"7759":0,"7760":0,"7761":0,"7762":0,"7763":0,"7764":0,"7765":0,"7766":0,"7769":0,"7770":0,"7771":0,"7772":0,"7773":0,"7774":0,"7775":0,"7776":0,"7777":0,"7778":0,"7779":0,"7781":0,"7782":0,"7783":0,"7784":0,"7785":0,"7786":0,"7787":0,"7788":0,"7789":0,"7790":0,"7791":0,"7794":0,"7795":0,"7796":0,"7797":0,"7798":0,"7799":0,"7800":0,"7801":0,"7802":0,"7803":0,"7804":0,"7807":0,"7808":0,"7809":0,"7810":0,"7811":0,"7812":0,"7813":0,"7814":0,"7815":0,"7816":0,"7817":0,"7821":0,"7822":0,"7823":0,"7824":0,"7825":0,"7827":0,"7830":0,"7833":0,"7834":0,"7841":0,"7842":0,"7843":0,"7844":0,"7845":0,"7846":0,"7847":0,"7848":0,"7850":0,"7851":0,"7852":0,"7853":0,"7854":0,"7855":0,"7857":0,"7862":0,"7868":0,"7869":0,"7871":0,"7872":0,"7875":0,"7876":0,"7877":0,"7879":0,"7882":0,"7885":0,"7888":0,"7890":0,"7891":0,"7892":0,"7893":0,"7894":0,"7897":0,"7898":0,"7900":0,"7902":0,"7903":0,"7908":0,"7909":0,"7914":0,"7918":0,"7919":0,"7920":0,"7921":0,"7922":0,"7923":0,"7924":0,"7925":0,"7928":0,"7930":0,"7935":0,"7937":0,"7942":0,"7945":0,"7946":0,"7947":0,"7948":0,"7949":0,"7950":0,"7951":0,"7952":0,"7953":0,"7954":0,"7958":0,"7959":0,"7960":0,"7961":0,"7962":0,"7963":0,"7964":0,"7965":0,"7966":0,"7969":0,"7972":0,"7973":0,"7983":0,"7984":0,"7985":0,"7986":0,"7987":0,"7988":0,"7989":0,"7990":0,"7991":0,"7992":0,"7993":0,"7995":0,"7996":0,"7997":0,"7998":0,"7999":0,"8000":0,"8001":0,"8002":0,"8003":0,"8005":0,"8008":0,"8010":0,"8029":0,"8034":1,"8036":1,"8037":0,"8047":1,"8048":1,"8059":1,"8060":0,"8061":0,"8062":0,"8063":0,"8064":0,"8065":0,"8067":0,"8068":0,"8077":1,"8078":0,"8080":0,"8081":0,"8085":0,"8086":0,"8087":0,"8088":0,"8089":0,"8090":0,"8092":0,"8093":0,"8094":0,"8096":0,"8099":0,"8101":0,"8103":0,"8106":0,"8109":1,"8111":1,"8112":0,"8114":0,"8117":1,"8118":1,"8119":0,"8123":0,"8124":0,"8126":0,"8133":1,"8134":1,"8135":1,"8139":1,"8145":1,"8146":0,"8147":0,"8151":1,"8153":0,"8155":0,"8156":0,"8160":1,"8162":1,"8165":1,"8168":1,"8170":0,"8171":0,"8173":0,"8178":1}},"/home/travis/build/npmtest/node-npmtest-jsonld/node_modules/jsonld/browser/ignore.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsonld/node_modules/jsonld/browser/ignore.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["// Ignore module for browserify (see package.json)"],"l":{}}}